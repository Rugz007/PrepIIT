[{"/workspace/frontend/src/index.tsx":"1","/workspace/frontend/src/views/Auth/Login.tsx":"2","/workspace/frontend/src/views/HomePage/About.tsx":"3","/workspace/frontend/src/components/Dashboard/EForms/EFormSettings.tsx":"4","/workspace/frontend/src/components/Dashboard/Questions/QuestionBank.tsx":"5","/workspace/frontend/src/components/Blog/BlogListItem.tsx":"6","/workspace/frontend/src/components/Test/TestCard.tsx":"7","/workspace/frontend/src/views/Test/TestsPage.tsx":"8","/workspace/frontend/src/components/Navbar.tsx":"9","/workspace/frontend/src/reportWebVitals.ts":"10","/workspace/frontend/src/views/Auth/Register.tsx":"11","/workspace/frontend/src/views/HomePage/FAQ.tsx":"12","/workspace/frontend/src/components/Dashboard/Blogs/BlogsTable.tsx":"13","/workspace/frontend/src/components/Dashboard/EForms/EFormModal.tsx":"14","/workspace/frontend/src/views/Blog/BlogPage.tsx":"15","/workspace/frontend/src/views/HomePage/Courses.tsx":"16","/workspace/frontend/src/components/Dashboard/Tests/TestTypeModal.tsx":"17","/workspace/frontend/src/components/Dashboard/Blogs/CreateBlog.tsx":"18","/workspace/frontend/src/components/Dashboard/Questions/DifficultyLevel.js":"19","/workspace/frontend/src/views/HomePage/Contact.tsx":"20","/workspace/frontend/src/components/Dashboard/Questions/AddQuestionPage.tsx":"21","/workspace/frontend/src/components/Dashboard/Profile/Profile.tsx":"22","/workspace/frontend/src/views/Dashboard/Dashboard.tsx":"23","/workspace/frontend/src/views/Blog/BlogList.tsx":"24","/workspace/frontend/src/views/HomePage/HomePage.tsx":"25","/workspace/frontend/src/components/Dashboard/Questions/ReportedQuestions.tsx":"26","/workspace/frontend/src/components/Errors/Error400.tsx":"27","/workspace/frontend/src/components/Dashboard/EForms/EForms.tsx":"28","/workspace/frontend/src/components/Test/TestDetails.tsx":"29","/workspace/frontend/src/components/Dashboard/Questions/QuestionModal.tsx":"30","/workspace/frontend/src/components/Dashboard/Questions/AddQuestion.tsx":"31","/workspace/frontend/src/components/Test/TestIntruction.tsx":"32","/workspace/frontend/src/App.tsx":"33","/workspace/frontend/src/routes.js":"34","/workspace/frontend/src/context/User/UserState.tsx":"35","/workspace/frontend/src/views/Test/Test.tsx":"36","/workspace/frontend/src/views/HomePage/CourseData.js":"37","/workspace/frontend/src/components/Dashboard/Questions/UploadQuestions.tsx":"38","/workspace/frontend/src/components/Analysis/SubjectAnalysis.tsx":"39","/workspace/frontend/src/views/Analysis/TestAnalysis.tsx":"40","/workspace/frontend/src/context/User/UserContext.tsx":"41","/workspace/frontend/src/context/User/UserReducer.tsx":"42","/workspace/frontend/src/components/Dashboard/EForms/EFormsAnalysis.tsx":"43","/workspace/frontend/src/components/Dashboard/Tests/TestTypes.tsx":"44","/workspace/frontend/src/components/Test/QuestionComponent.tsx":"45","/workspace/frontend/src/components/Errors/Error404.tsx":"46","/workspace/frontend/src/components/HomePage/EnquiryForm.tsx":"47"},{"size":605,"mtime":1613446567358,"results":"48","hashOfConfig":"49"},{"size":3113,"mtime":1615695265021,"results":"50","hashOfConfig":"49"},{"size":5368,"mtime":1615450338852,"results":"51","hashOfConfig":"49"},{"size":927,"mtime":1613446567314,"results":"52","hashOfConfig":"49"},{"size":4156,"mtime":1615448717589,"results":"53","hashOfConfig":"49"},{"size":630,"mtime":1614962687762,"results":"54","hashOfConfig":"49"},{"size":1412,"mtime":1615976410048,"results":"55","hashOfConfig":"49"},{"size":1973,"mtime":1615802665473,"results":"56","hashOfConfig":"49"},{"size":4039,"mtime":1615976410048,"results":"57","hashOfConfig":"49"},{"size":440,"mtime":1613446567358,"results":"58","hashOfConfig":"49"},{"size":5850,"mtime":1615450345256,"results":"59","hashOfConfig":"49"},{"size":8404,"mtime":1615450346484,"results":"60","hashOfConfig":"49"},{"size":1459,"mtime":1614962687762,"results":"61","hashOfConfig":"49"},{"size":1818,"mtime":1614970707447,"results":"62","hashOfConfig":"49"},{"size":5558,"mtime":1614962687762,"results":"63","hashOfConfig":"49"},{"size":8742,"mtime":1615450339844,"results":"64","hashOfConfig":"49"},{"size":5607,"mtime":1615803654817,"results":"65","hashOfConfig":"49"},{"size":1566,"mtime":1614962687762,"results":"66","hashOfConfig":"49"},{"size":223,"mtime":1614962687762,"results":"67","hashOfConfig":"49"},{"size":1998,"mtime":1615695265021,"results":"68","hashOfConfig":"49"},{"size":588,"mtime":1613800597575,"results":"69","hashOfConfig":"49"},{"size":3300,"mtime":1615610531929,"results":"70","hashOfConfig":"49"},{"size":5086,"mtime":1615456667184,"results":"71","hashOfConfig":"49"},{"size":2168,"mtime":1614962687762,"results":"72","hashOfConfig":"49"},{"size":3472,"mtime":1615695265025,"results":"73","hashOfConfig":"49"},{"size":3091,"mtime":1615610026777,"results":"74","hashOfConfig":"49"},{"size":395,"mtime":1614962687762,"results":"75","hashOfConfig":"49"},{"size":2809,"mtime":1615011568240,"results":"76","hashOfConfig":"49"},{"size":2504,"mtime":1616955054588,"results":"77","hashOfConfig":"49"},{"size":6578,"mtime":1615805685277,"results":"78","hashOfConfig":"49"},{"size":2834,"mtime":1615448717589,"results":"79","hashOfConfig":"49"},{"size":3784,"mtime":1616399429740,"results":"80","hashOfConfig":"49"},{"size":777,"mtime":1614962687758,"results":"81","hashOfConfig":"49"},{"size":1987,"mtime":1615879538122,"results":"82","hashOfConfig":"49"},{"size":2657,"mtime":1614970635879,"results":"83","hashOfConfig":"49"},{"size":10578,"mtime":1617097768742,"results":"84","hashOfConfig":"49"},{"size":1006,"mtime":1614962687762,"results":"85","hashOfConfig":"49"},{"size":1326,"mtime":1614970652603,"results":"86","hashOfConfig":"49"},{"size":2556,"mtime":1615883566286,"results":"87","hashOfConfig":"49"},{"size":6463,"mtime":1615886610058,"results":"88","hashOfConfig":"49"},{"size":158,"mtime":1613446567358,"results":"89","hashOfConfig":"49"},{"size":1396,"mtime":1613446567358,"results":"90","hashOfConfig":"49"},{"size":299,"mtime":1614962687762,"results":"91","hashOfConfig":"49"},{"size":2155,"mtime":1615448717589,"results":"92","hashOfConfig":"49"},{"size":2006,"mtime":1616955447876,"results":"93","hashOfConfig":"49"},{"size":408,"mtime":1614962687762,"results":"94","hashOfConfig":"49"},{"size":3441,"mtime":1614970643503,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b3atdm",{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"125"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"125"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"147"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/workspace/frontend/src/index.tsx",[],"/workspace/frontend/src/views/Auth/Login.tsx",["210","211","212"],"/workspace/frontend/src/views/HomePage/About.tsx",[],["213","214"],"/workspace/frontend/src/components/Dashboard/EForms/EFormSettings.tsx",[],["215","216"],"/workspace/frontend/src/components/Dashboard/Questions/QuestionBank.tsx",[],"/workspace/frontend/src/components/Blog/BlogListItem.tsx",[],["217","218"],"/workspace/frontend/src/components/Test/TestCard.tsx",["219"],"/workspace/frontend/src/views/Test/TestsPage.tsx",["220"],"/workspace/frontend/src/components/Navbar.tsx",[],"/workspace/frontend/src/reportWebVitals.ts",[],"/workspace/frontend/src/views/Auth/Register.tsx",["221"],"import Layout, { Content } from \"antd/lib/layout/layout\";\r\nimport React, { useContext } from \"react\";\r\nimport { Row, Col, Form, Input, Card, Divider, Button, Select } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  KeyOutlined,\r\n  MailOutlined,\r\n  PhoneOutlined,\r\n  HomeOutlined,\r\n  AccountBookOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../../context/User/UserContext\";\r\nconst { Option } = Select;\r\ninterface RegisterInterface {\r\n  name: string;\r\n  email: string;\r\n  phone_no: string;\r\n  address: string;\r\n  standard: string;\r\n  password: string;\r\n  confirmPassword?: string;\r\n}\r\n\r\nexport const Register: React.FC = () => {\r\n  let history = useHistory();\r\n\r\n  const userContext = useContext(UserContext);\r\n  const onFinish = (values: RegisterInterface) => {\r\n    delete values.confirmPassword;\r\n    userContext.register(values);\r\n    history.push(\"/login\");\r\n  };\r\n  return (\r\n    <Layout>\r\n      <Content style={{ backgroundColor: \"#1c2229\", paddingBottom: \"4%\" }}>\r\n        <Row>\r\n          <Col span={4} />\r\n          <Col span={16} style={{ padding: \".4%\", paddingTop: \"1%\" }}>\r\n            <Card\r\n              style={{ height: \"100%\", borderRadius: \"17px\", margin: \"0% 30%\" }}\r\n            >\r\n              <img\r\n                src=\"logo-nobg.png\"\r\n                alt=\"logo\"\r\n                style={{ width: \"46%\", margin: \"auto\" }}\r\n              />\r\n              <h1 style={{ fontSize: \"25px\", marginBottom: \"0\" }}>\r\n                Create new account\r\n              </h1>\r\n              <Divider />\r\n              <Form\r\n                name=\"register\"\r\n                onFinish={onFinish}\r\n                scrollToFirstError\r\n                style={{ textAlign: \"left\" }}\r\n              >\r\n                <Form.Item name=\"name\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<UserOutlined />}\r\n                    placeholder={\"Enter your name.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"email\"\r\n                  rules={[\r\n                    {\r\n                      type: \"email\",\r\n                      message: \"The input is not valid E-mail!\",\r\n                    },\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your E-mail!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<MailOutlined />}\r\n                    placeholder={\"Enter your Email ID.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item name=\"phone_no\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<PhoneOutlined />}\r\n                    placeholder={\"Enter your phone number.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item name=\"address\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<HomeOutlined />}\r\n                    placeholder={\"Enter your Address.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item name=\"class\">\r\n                  <Select placeholder={\"Select your class.\"}>\r\n                    <Option value=\"VII\">VII</Option>\r\n                    <Option value=\"VIII\">VIII</Option>\r\n                    <Option value=\"IX\">IX</Option>\r\n                    <Option value=\"X\">X</Option>\r\n                    <Option value=\"XI\">XI</Option>\r\n                    <Option value=\"XII\">XII</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"password\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your password!\",\r\n                    },\r\n                  ]}\r\n                  hasFeedback\r\n                >\r\n                  <Input.Password\r\n                    size=\"large\"\r\n                    prefix={<KeyOutlined />}\r\n                    placeholder={\"Enter your Password.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"confirmPassword\"\r\n                  hasFeedback\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please confirm your password!\",\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        if (!value || getFieldValue(\"password\") === value) {\r\n                          return Promise.resolve();\r\n                        }\r\n\r\n                        return Promise.reject(\r\n                          \"The two passwords that you entered do not match!\"\r\n                        );\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    size=\"large\"\r\n                    prefix={<KeyOutlined />}\r\n                    placeholder={\"Re-enter your Password.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    size=\"large\"\r\n                    style={{ width: \"100%\", margin: \"auto\" }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n              <Divider />\r\n              <p>\r\n                Already have an account? <Link to=\"/login\">Login</Link>\r\n              </p>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col span={4} />\r\n        </Row>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n",["222","223"],"/workspace/frontend/src/views/HomePage/FAQ.tsx",[],["224","225"],"/workspace/frontend/src/components/Dashboard/Blogs/BlogsTable.tsx",[],["226","227"],"/workspace/frontend/src/components/Dashboard/EForms/EFormModal.tsx",[],"/workspace/frontend/src/views/Blog/BlogPage.tsx",[],"/workspace/frontend/src/views/HomePage/Courses.tsx",[],"/workspace/frontend/src/components/Dashboard/Tests/TestTypeModal.tsx",[],["228","229"],"/workspace/frontend/src/components/Dashboard/Blogs/CreateBlog.tsx",[],["230","231"],"/workspace/frontend/src/components/Dashboard/Questions/DifficultyLevel.js",[],"/workspace/frontend/src/views/HomePage/Contact.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/AddQuestionPage.tsx",[],["232","233"],"/workspace/frontend/src/components/Dashboard/Profile/Profile.tsx",["234","235"],"/workspace/frontend/src/views/Dashboard/Dashboard.tsx",[],"/workspace/frontend/src/views/Blog/BlogList.tsx",["236","237","238"],"import { Avatar, Col, List, Row } from 'antd';\r\nimport React from 'react'\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { BlogListItem } from '../../components/Blog/BlogListItem';\r\nimport { BlogPage } from './BlogPage';\r\n\r\nexport const BlogList: React.FC = () => {\r\n    const data = [{\r\n        'id':1,\r\n        'title': 'How to Crack JEE',\r\n        'icon': <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />,\r\n        'content': 'How to Crack JEE in 2 Days!!!!!'\r\n    },\r\n    {\r\n        'id':2,\r\n        'title': 'How to Crack JEE',\r\n        'icon': <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />,\r\n        'content': 'How to Crack JEE in 2 Days!!!!!'\r\n    }];\r\n    return (\r\n        <Row style={{ height: '90vh', marginTop: '3%' }}>\r\n            <Col span={4} />\r\n            <Col span={16}>\r\n                <Row>\r\n                    <h1 style={{ fontSize: \"2.3rem\", margin: 'auto' }}>Blog List</h1>\r\n                </Row>\r\n                <Row>\r\n                    <List\r\n                        dataSource={data}\r\n                        itemLayout=\"vertical\"\r\n                        size=\"large\"\r\n                        style={{ width: '100%', textAlign: 'left' }}\r\n                        pagination={{\r\n                            onChange: page => {\r\n                                console.log(page);\r\n                            },\r\n                            pageSize: 3,\r\n                        }}\r\n                        extra={\r\n                            <img\r\n                                width={272}\r\n                                alt=\"logo\"\r\n                                src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n                            />\r\n                        }\r\n                        renderItem={item => (\r\n                            <BlogListItem id={item.id} icon={item.icon} title={item.title} description={item.content} />\r\n                        )}>\r\n                    </List>\r\n                    \r\n                </Row>\r\n            </Col>\r\n            <Col span={4} />\r\n        </Row>\r\n    );\r\n}","/workspace/frontend/src/views/HomePage/HomePage.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/ReportedQuestions.tsx",[],["239","240"],"/workspace/frontend/src/components/Errors/Error400.tsx",[],"/workspace/frontend/src/components/Dashboard/EForms/EForms.tsx",["241"],"import { Card, Table, Button, Popover, Popconfirm } from \"antd\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { EFormModal } from \"./EFormModal\";\r\nimport env from \"react-dotenv\";\r\n\r\ninterface EFormInterface {\r\n  name: string;\r\n  email: string;\r\n  number: string;\r\n  standard: string;\r\n  type: string;\r\n  enqid: Number;\r\n}\r\n\r\n\r\n\r\nexport const EForms: React.FC = () => {\r\n  const [forms, setForms] = useState<EFormInterface[] | undefined>([]);\r\n  useEffect(() => {\r\n    fetchForms();\r\n  }, []);\r\n\r\n\r\n  const fetchForms = async () => {\r\n    try {\r\n      const res = await axios.get(`https://${env.NODEJS_URL}/admin/enquiry`, {\r\n        headers: {\r\n          authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      setForms(res.data);\r\n    } catch (e) {\r\n      console.log(\"Forms not loaded!\");\r\n    }\r\n  };\r\n  const deleteEnquiry = async (\r\n    enqid: Number,\r\n    forms: any[] | undefined,\r\n    setForms: React.Dispatch<React.SetStateAction<EFormInterface[] | undefined>>\r\n  ) => {\r\n    try {\r\n      const response = await axios({\r\n        method: \"DELETE\",\r\n        url: `https://${env.NODEJS_URL}/admin/enquiry`,\r\n        headers: {\r\n          authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n        },\r\n        data: {\r\n          enqid: enqid,\r\n        },\r\n      });\r\n      console.log(response);\r\n      if (forms) {\r\n        const newState = forms.filter(\r\n          (item: { enqid: Number }) => item.enqid !== enqid\r\n        );\r\n        setForms(newState);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"Class\",\r\n      dataIndex: \"standard\",\r\n      key: \"standard\",\r\n    },\r\n    {\r\n      title: \"Type\",\r\n      dataIndex: \"type\",\r\n      key: \"type\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"\",\r\n      key: \"action\",\r\n      render: (text: any, record: EFormInterface) => (\r\n        <>\r\n          <EFormModal EForm={record} />\r\n          <Popconfirm\r\n            title=\"Are you sure you want to delete this question?\"\r\n            onConfirm={() => deleteEnquiry(record.enqid, forms, setForms)}>\r\n            <Button\r\n\r\n              type=\"primary\"\r\n              danger\r\n            >\r\n              Delete\r\n          </Button>\r\n          </Popconfirm>\r\n\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <div style={{ textAlign: \"left\" }}>\r\n      <h1 style={{ fontSize: \"40px\" }}>Enquiry Forms</h1>\r\n      <Card style={{ textAlign: \"left\", borderRadius: \"10px\" }}>\r\n        <h1 style={{ fontSize: \"30px\" }}>View Latest Enquiry Forms</h1>\r\n        <Table columns={columns} dataSource={forms} style={{ width: \"100%\" }} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","/workspace/frontend/src/components/Test/TestDetails.tsx",[],["242","243"],"/workspace/frontend/src/components/Dashboard/Questions/QuestionModal.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/AddQuestion.tsx",["244"],"import { Card, Table, Button, Space, message } from \"antd\";\nimport React, { useState } from \"react\";\nimport { QuestionModal } from \"./QuestionModal\";\nimport axios from \"axios\";\nimport env from \"react-dotenv\";\ninterface QuestionInterface {\n  qid: number;\n  statement: string;\n  img_path?: string;\n  type: string;\n  subject: string;\n  topic: string;\n  subtopic?: string;\n  level: string;\n  archive?: string;\n  is_reported: boolean | undefined;\n}\nexport const AddQuestion: React.FC = () => {\n  const [questions, setQuestions] = useState<\n    Array<QuestionInterface> | undefined\n  >(undefined);\n  const uploadQuestions = async (values: QuestionInterface) => {\n    console.log(values);\n    try {\n      if (questions === undefined) {\n        setQuestions([values]);\n      } else {\n        setQuestions([...questions, values]);\n      }\n      const response = await axios.post(\n        `https://${env.NODEJS_URL}/admin/question`,\n        {\n          statement: values.statement,\n          img_path: values.img_path,\n          type: values.type,\n          subject: values.subject,\n          topic: values.topic,\n          subtopic: values.subtopic,\n          level: values.level,\n          archive: values.archive,\n          is_reported: values.is_reported,\n        },\n        {\n          headers: {\n            authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        }\n      );\n      \n      console.log(response);\n    } catch (e) {\n      console.log(\"Couldn't Update\");\n    }\n    message.success(\"Uploaded Questions\");\n  };\n  const columns = [\n    {\n      title: \"Statement\",\n      dataIndex: \"statement\",\n      key: \"statement\",\n    },\n    {\n      title: \"Subject\",\n      dataIndex: \"subject\",\n      key: \"subject\",\n    },\n    {\n      title: \"Topic\",\n      dataIndex: \"topic\",\n      key: \"topic\",\n    },\n    {\n      title: \"Type\",\n      dataIndex: \"type\",\n      key: \"type\",\n    },\n    {\n      title: \"Action\",\n      dataIndex: \"\",\n      key: \"action\",\n      render: (text: any, record: QuestionInterface) => (\n        <>\n          <QuestionModal\n            submitEdit={undefined}\n            submitNew={uploadQuestions}\n            Question={record}\n            buttonText=\"View Question\"\n          />\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <div style={{ textAlign: \"left\" }}>\n      <Card\n        style={{ textAlign: \"left\", borderRadius: \"10px\" }}\n        title={<h1 style={{ fontSize: \"30px\" }}>Questions to be added</h1>}\n        extra={\n          <Space>\n            <QuestionModal\n            submitNew={uploadQuestions}\n            submitEdit={undefined}\n            buttonText=\"Add Question\"\n          />\n          </Space>\n        }\n      >\n        <Table\n          columns={columns}\n          dataSource={questions}\n          style={{ width: \"100%\" }}\n        />\n      </Card>\n    </div>\n  );\n};\n","/workspace/frontend/src/components/Test/TestIntruction.tsx",[],"/workspace/frontend/src/App.tsx",["245"],"import React, { useContext, useEffect } from \"react\";\r\nimport './App.less';\r\nimport \"antd/dist/antd.dark.css\";\r\nimport { Navbar } from './components/Navbar';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport AOS from \"aos\";\r\nimport 'aos/dist/aos.css';\r\nimport Routes from './routes';\r\nimport { Footer } from './components/Footer';\r\nimport UserContext from \"./context/User/UserContext\";\r\nAOS.init();\r\nfunction App() {\r\n  const userContext = useContext<any>(UserContext);\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      userContext.loadUser();\r\n    }\r\n  },[]);\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Navbar />\r\n        <Routes />\r\n        <Footer />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/workspace/frontend/src/routes.js",[],["246","247"],"/workspace/frontend/src/context/User/UserState.tsx",[],"/workspace/frontend/src/views/Test/Test.tsx",["248"],"/workspace/frontend/src/views/HomePage/CourseData.js",[],["249","250"],"/workspace/frontend/src/components/Dashboard/Questions/UploadQuestions.tsx",[],"/workspace/frontend/src/components/Analysis/SubjectAnalysis.tsx",[],"/workspace/frontend/src/views/Analysis/TestAnalysis.tsx",[],"/workspace/frontend/src/context/User/UserContext.tsx",[],["251","252"],"/workspace/frontend/src/context/User/UserReducer.tsx",[],"/workspace/frontend/src/components/Dashboard/EForms/EFormsAnalysis.tsx",[],"/workspace/frontend/src/components/Dashboard/Tests/TestTypes.tsx",["253","254"],"/workspace/frontend/src/components/Test/QuestionComponent.tsx",["255","256"],"import { Radio, Row, Col, RadioChangeEvent } from 'antd'\r\nimport React from 'react'\r\n\r\ninterface QuestionInterface {\r\n    question: {\r\n        qid: number,\r\n        statement: string,\r\n        img_path: string,\r\n        type: string,\r\n        archive: string,\r\n        latex: string,\r\n        options: string[],\r\n    } | undefined\r\n    onSelect  : ((e: RadioChangeEvent) => void),\r\n}\r\n\r\nexport const QuestionComponent: React.FC<QuestionInterface> = ({ question ,onSelect}) => {\r\n    var Latex = require('react-latex');\r\n    const radioStyle = {\r\n        borderRadius: '0px',\r\n        width: '100%',\r\n        fontSize: '20px',\r\n        verticalAlign: 'text-bottom'\r\n    };\r\n    const radioContainerStyle = {\r\n        marginTop: \"15px\", fontSize: '20px'\r\n    }\r\n    var temp = `Solve the following equation:  $$\\\\big (3\\\\times 4) \\\\div (5-3)$$`;\r\n    return (\r\n        <div style={{ padding: '1%' }}>\r\n            <Row style={{ fontSize: '30px' }}>\r\n                {question &&\r\n                    <h3>\r\n                        {question.statement}\r\n                    </h3>\r\n                }\r\n                {/* <Latex displayMode={true}>\r\n                    {temp}\r\n                </Latex> */}\r\n\r\n            </Row>\r\n            <Row>\r\n                <Radio.Group style={{ textAlign: 'left', width: '100%' }} onChange={e => onSelect(e)}>\r\n                    {question?.options.map((option, index) => (\r\n                        <Row style={radioContainerStyle}>\r\n                            <Col span={1}>\r\n                                <Radio.Button style={{ padding: \"0 0.7rem\", fontSize: '20px' }} name={option} value={option}>{(index + 10).toString(36).toUpperCase()}</Radio.Button>\r\n                            </Col>\r\n                            <Col span={23} style={radioStyle}>\r\n                                {option}\r\n                        </Col>\r\n                        </Row>\r\n                    ))}\r\n                </Radio.Group>\r\n            </Row>\r\n        </div>\r\n    );\r\n}","/workspace/frontend/src/components/Errors/Error404.tsx",[],"/workspace/frontend/src/components/HomePage/EnquiryForm.tsx",[],{"ruleId":"257","severity":1,"message":"258","line":2,"column":29,"nodeType":"259","messageId":"260","endLine":2,"endColumn":37},{"ruleId":"257","severity":1,"message":"261","line":6,"column":8,"nodeType":"259","messageId":"260","endLine":6,"endColumn":13},{"ruleId":"262","severity":1,"message":"263","line":82,"column":15,"nodeType":"264","endLine":82,"endColumn":18},{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"265","replacedBy":"269"},{"ruleId":"267","replacedBy":"270"},{"ruleId":"265","replacedBy":"271"},{"ruleId":"267","replacedBy":"272"},{"ruleId":"257","severity":1,"message":"258","line":2,"column":17,"nodeType":"259","messageId":"260","endLine":2,"endColumn":25},{"ruleId":"257","severity":1,"message":"273","line":1,"column":26,"nodeType":"259","messageId":"260","endLine":1,"endColumn":33},{"ruleId":"257","severity":1,"message":"274","line":10,"column":3,"nodeType":"259","messageId":"260","endLine":10,"endColumn":22},{"ruleId":"265","replacedBy":"275"},{"ruleId":"267","replacedBy":"276"},{"ruleId":"265","replacedBy":"277"},{"ruleId":"267","replacedBy":"278"},{"ruleId":"265","replacedBy":"279"},{"ruleId":"267","replacedBy":"280"},{"ruleId":"265","replacedBy":"281"},{"ruleId":"267","replacedBy":"282"},{"ruleId":"265","replacedBy":"283"},{"ruleId":"267","replacedBy":"284"},{"ruleId":"265","replacedBy":"285"},{"ruleId":"267","replacedBy":"286"},{"ruleId":"257","severity":1,"message":"287","line":1,"column":34,"nodeType":"259","messageId":"260","endLine":1,"endColumn":46},{"ruleId":"257","severity":1,"message":"288","line":1,"column":65,"nodeType":"259","messageId":"260","endLine":1,"endColumn":72},{"ruleId":"257","severity":1,"message":"289","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":15},{"ruleId":"257","severity":1,"message":"290","line":3,"column":17,"nodeType":"259","messageId":"260","endLine":3,"endColumn":23},{"ruleId":"257","severity":1,"message":"291","line":5,"column":10,"nodeType":"259","messageId":"260","endLine":5,"endColumn":18},{"ruleId":"265","replacedBy":"292"},{"ruleId":"267","replacedBy":"293"},{"ruleId":"257","severity":1,"message":"294","line":1,"column":31,"nodeType":"259","messageId":"260","endLine":1,"endColumn":38},{"ruleId":"265","replacedBy":"295"},{"ruleId":"267","replacedBy":"296"},{"ruleId":"257","severity":1,"message":"297","line":1,"column":23,"nodeType":"259","messageId":"260","endLine":1,"endColumn":29},{"ruleId":"298","severity":1,"message":"299","line":18,"column":5,"nodeType":"300","endLine":18,"endColumn":7,"suggestions":"301"},{"ruleId":"265","replacedBy":"279"},{"ruleId":"267","replacedBy":"280"},{"ruleId":"257","severity":1,"message":"302","line":8,"column":11,"nodeType":"259","messageId":"260","endLine":8,"endColumn":28},{"ruleId":"265","replacedBy":"271"},{"ruleId":"267","replacedBy":"272"},{"ruleId":"265","replacedBy":"303"},{"ruleId":"267","replacedBy":"304"},{"ruleId":"257","severity":1,"message":"305","line":1,"column":38,"nodeType":"259","messageId":"260","endLine":1,"endColumn":45},{"ruleId":"298","severity":1,"message":"306","line":60,"column":6,"nodeType":"300","endLine":60,"endColumn":8,"suggestions":"307"},{"ruleId":"257","severity":1,"message":"308","line":18,"column":9,"nodeType":"259","messageId":"260","endLine":18,"endColumn":14},{"ruleId":"257","severity":1,"message":"309","line":28,"column":9,"nodeType":"259","messageId":"260","endLine":28,"endColumn":13},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["310"],"no-negated-in-lhs",["311"],["310"],["311"],["310"],["311"],"'Divider' is defined but never used.","'AccountBookOutlined' is defined but never used.",["310"],["311"],["310"],["311"],["310"],["311"],["310"],["311"],["310"],["311"],["310"],["311"],"'Descriptions' is defined but never used.","'Tooltip' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'BlogPage' is defined but never used.",["310"],["311"],"'Popover' is defined but never used.",["310"],["311"],"'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userContext'. Either include it or remove the dependency array.","ArrayExpression",["312"],"'QuestionInterface' is defined but never used.",["310"],["311"],"'message' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchTestDetails'. Either include it or remove the dependency array.",["313"],"'Latex' is assigned a value but never used.","'temp' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},"Update the dependencies array to be: [userContext]",{"range":"318","text":"319"},"Update the dependencies array to be: [fetchTestDetails]",{"range":"320","text":"321"},[595,597],"[userContext]",[1279,1281],"[fetchTestDetails]"]