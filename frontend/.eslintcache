[{"/workspace/frontend/src/reportWebVitals.ts":"1","/workspace/frontend/src/components/Footer.tsx":"2","/workspace/frontend/src/components/Test/QuestionComponents/InputComponent.tsx":"3","/workspace/frontend/src/components/Dashboard/Tests/TestTypes.tsx":"4","/workspace/frontend/src/components/Dashboard/Questions/DifficultyLevel.js":"5","/workspace/frontend/src/components/HomePage/CourseDescription.tsx":"6","/workspace/frontend/src/components/Navbar.tsx":"7","/workspace/frontend/src/routes.js":"8","/workspace/frontend/src/index.tsx":"9","/workspace/frontend/src/components/Test/TestDetails.tsx":"10","/workspace/frontend/src/components/Dashboard/Blogs/CreateBlog.tsx":"11","/workspace/frontend/src/components/Errors/Error404.tsx":"12","/workspace/frontend/src/views/Auth/Login.tsx":"13","/workspace/frontend/src/components/Test/TestIntruction.tsx":"14","/workspace/frontend/src/context/User/type.js":"15","/workspace/frontend/src/views/HomePage/CourseData.js":"16","/workspace/frontend/src/components/Analysis/SubjectAnalysis.tsx":"17","/workspace/frontend/src/components/Dashboard/Questions/QuestionModal.tsx":"18","/workspace/frontend/src/components/Dashboard/Profile/Profile.tsx":"19","/workspace/frontend/src/components/Dashboard/Tests/LiveTests.tsx":"20","/workspace/frontend/src/components/Dashboard/Tests/LiveTestModal.tsx":"21","/workspace/frontend/src/context/User/UserReducer.tsx":"22","/workspace/frontend/src/components/Errors/Error400.tsx":"23","/workspace/frontend/src/components/Dashboard/Questions/AddQuestion.tsx":"24","/workspace/frontend/src/components/Dashboard/EForms/EFormModal.tsx":"25","/workspace/frontend/src/components/HomePage/EnquiryForm.tsx":"26","/workspace/frontend/src/components/Dashboard/EForms/EForms.tsx":"27","/workspace/frontend/src/components/Dashboard/Questions/UploadQuestions.tsx":"28","/workspace/frontend/src/components/Dashboard/Questions/QuestionBank.tsx":"29","/workspace/frontend/src/components/Dashboard/Tests/TestTypeModal.tsx":"30","/workspace/frontend/src/components/Dashboard/EForms/EFormSettings.tsx":"31","/workspace/frontend/src/components/Dashboard/Tests/TestsPage.tsx":"32","/workspace/frontend/src/views/HomePage/Courses.tsx":"33","/workspace/frontend/src/views/Test/TestSubmitted.tsx":"34","/workspace/frontend/src/components/Dashboard/Questions/ReportedQuestions.tsx":"35","/workspace/frontend/src/components/Blog/BlogListItem.tsx":"36","/workspace/frontend/src/components/Dashboard/EForms/EFormsAnalysis.tsx":"37","/workspace/frontend/src/views/Test/Test.tsx":"38","/workspace/frontend/src/components/Test/QuestionComponents/MCQComponent.tsx":"39","/workspace/frontend/src/context/User/UserState.tsx":"40","/workspace/frontend/src/views/HomePage/FAQ.tsx":"41","/workspace/frontend/src/components/Dashboard/Questions/AddQuestionPage.tsx":"42","/workspace/frontend/src/views/Auth/Register.tsx":"43","/workspace/frontend/src/views/Auth/ForgetPassword.tsx":"44","/workspace/frontend/src/views/Dashboard/Dashboard.tsx":"45","/workspace/frontend/src/components/Dashboard/Blogs/BlogsTable.tsx":"46"},{"size":440,"mtime":1614962687762,"results":"47","hashOfConfig":"48"},{"size":4135,"mtime":1622955737396,"results":"49","hashOfConfig":"48"},{"size":1709,"mtime":1619277773220,"results":"50","hashOfConfig":"48"},{"size":2156,"mtime":1621178317078,"results":"51","hashOfConfig":"48"},{"size":223,"mtime":1614962687762,"results":"52","hashOfConfig":"48"},{"size":5847,"mtime":1619974995534,"results":"53","hashOfConfig":"48"},{"size":8185,"mtime":1620205274022,"results":"54","hashOfConfig":"48"},{"size":3259,"mtime":1622958091744,"results":"55","hashOfConfig":"48"},{"size":607,"mtime":1617379026832,"results":"56","hashOfConfig":"48"},{"size":2936,"mtime":1620967231323,"results":"57","hashOfConfig":"58"},{"size":3086,"mtime":1623046807274,"results":"59","hashOfConfig":"48"},{"size":408,"mtime":1620967231323,"results":"60","hashOfConfig":"58"},{"size":3316,"mtime":1622956518752,"results":"61","hashOfConfig":"48"},{"size":3784,"mtime":1620967231323,"results":"62","hashOfConfig":"58"},{"size":511,"mtime":1620967231323,"results":"63","hashOfConfig":"58"},{"size":5987,"mtime":1619594971058,"results":"64","hashOfConfig":"48"},{"size":2556,"mtime":1615883566286,"results":"65","hashOfConfig":"48"},{"size":7740,"mtime":1622616971756,"results":"66","hashOfConfig":"48"},{"size":4055,"mtime":1621069712679,"results":"67","hashOfConfig":"48"},{"size":2143,"mtime":1622023017247,"results":"68","hashOfConfig":"58"},{"size":6766,"mtime":1621243012180,"results":"69","hashOfConfig":"48"},{"size":1560,"mtime":1622954652448,"results":"70","hashOfConfig":"48"},{"size":395,"mtime":1614962687762,"results":"71","hashOfConfig":"48"},{"size":2853,"mtime":1619956443215,"results":"72","hashOfConfig":"48"},{"size":1837,"mtime":1620967231319,"results":"73","hashOfConfig":"58"},{"size":2230,"mtime":1622352043965,"results":"74","hashOfConfig":"48"},{"size":2833,"mtime":1619956443215,"results":"75","hashOfConfig":"48"},{"size":1346,"mtime":1621156848978,"results":"76","hashOfConfig":"48"},{"size":4157,"mtime":1623046351386,"results":"77","hashOfConfig":"48"},{"size":6122,"mtime":1622620909317,"results":"78","hashOfConfig":"48"},{"size":927,"mtime":1614962687762,"results":"79","hashOfConfig":"48"},{"size":2918,"mtime":1621241055444,"results":"80","hashOfConfig":"48"},{"size":4627,"mtime":1620967231327,"results":"81","hashOfConfig":"58"},{"size":667,"mtime":1620967231327,"results":"82","hashOfConfig":"58"},{"size":3107,"mtime":1622615303012,"results":"83","hashOfConfig":"48"},{"size":631,"mtime":1620967231319,"results":"84","hashOfConfig":"58"},{"size":299,"mtime":1614962687762,"results":"85","hashOfConfig":"48"},{"size":13239,"mtime":1620967231327,"results":"86","hashOfConfig":"58"},{"size":2113,"mtime":1620967231323,"results":"87","hashOfConfig":"58"},{"size":2878,"mtime":1622992136566,"results":"88","hashOfConfig":"48"},{"size":8363,"mtime":1617295525884,"results":"89","hashOfConfig":"48"},{"size":588,"mtime":1614962687762,"results":"90","hashOfConfig":"48"},{"size":6619,"mtime":1622992245590,"results":"91","hashOfConfig":"48"},{"size":4390,"mtime":1622958682012,"results":"92","hashOfConfig":"48"},{"size":5546,"mtime":1623043163890,"results":"93","hashOfConfig":"48"},{"size":2052,"mtime":1623044001606,"results":"94","hashOfConfig":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b3atdm",{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1knvjbr",{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"144"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"144"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/workspace/frontend/src/reportWebVitals.ts",[],"/workspace/frontend/src/components/Footer.tsx",["199"],"/workspace/frontend/src/components/Test/QuestionComponents/InputComponent.tsx",["200","201","202","203","204","205","206"],"import { Radio, Row, Col, RadioChangeEvent, Input } from \"antd\";\nimport React from \"react\";\n\ninterface QuestionInterface {\n    question:\n    | {\n        qid: number;\n        statement: string;\n        img_path: string;\n        type: string;\n        archive: string;\n        latex: string;\n        options: string[];\n    }\n    | undefined;\n    onSelect: React.ChangeEventHandler<HTMLInputElement> | undefined;\n    answers: any,\n}\n\nexport const InputComponent: React.FC<QuestionInterface> = ({\n    question,\n    onSelect,\n    answers\n}) => {\n    var Latex = require(\"react-latex\");\n    const radioStyle = {\n        borderRadius: \"0px\",\n        width: \"100%\",\n        fontSize: \"20px\",\n        verticalAlign: \"text-bottom\",\n    };\n    const radioContainerStyle = {\n        marginTop: \"15px\",\n        fontSize: \"20px\",\n    };\n    var temp = `Solve the following equation:  $$\\\\big (3\\\\times 4) \\\\div (5-3)$$`;\n    return (\n        <div style={{ padding: \"1%\" }}>\n            <Row style={{ fontSize: \"30px\" }}>\n                {question && (\n                    <h3>\n                        {question.statement}\n                        {question.qid}\n\n                    </h3>\n                )}\n                {/* <Latex displayMode={true}>\n                    {temp}\n                </Latex> */}\n            </Row>\n            <Row>\n                {question && answers && answers[question.qid] !== undefined &&\n                    <Input\n                        value={answers[question?.qid][1][0]}\n                        placeholder=\"Type your answer here\"\n                        onChange={onSelect}\n                        size='large'\n                    />}\n\n            </Row>\n        </div>\n    );\n};\n",["207","208"],"/workspace/frontend/src/components/Dashboard/Tests/TestTypes.tsx",["209","210"],"/workspace/frontend/src/components/Dashboard/Questions/DifficultyLevel.js",[],"/workspace/frontend/src/components/HomePage/CourseDescription.tsx",["211","212"],"/workspace/frontend/src/components/Navbar.tsx",["213"],"/workspace/frontend/src/routes.js",[],"/workspace/frontend/src/index.tsx",[],["214","215"],"/workspace/frontend/src/components/Test/TestDetails.tsx",[],"/workspace/frontend/src/components/Dashboard/Blogs/CreateBlog.tsx",[],"/workspace/frontend/src/components/Errors/Error404.tsx",[],"/workspace/frontend/src/views/Auth/Login.tsx",[],"/workspace/frontend/src/components/Test/TestIntruction.tsx",[],"/workspace/frontend/src/context/User/type.js",[],"/workspace/frontend/src/views/HomePage/CourseData.js",[],"/workspace/frontend/src/components/Analysis/SubjectAnalysis.tsx",[],["216","217"],"/workspace/frontend/src/components/Dashboard/Questions/QuestionModal.tsx",[],"/workspace/frontend/src/components/Dashboard/Profile/Profile.tsx",[],["218","219"],"/workspace/frontend/src/components/Dashboard/Tests/LiveTests.tsx",["220"],"/workspace/frontend/src/components/Dashboard/Tests/LiveTestModal.tsx",[],"/workspace/frontend/src/context/User/UserReducer.tsx",[],["221","222"],"/workspace/frontend/src/components/Errors/Error400.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/AddQuestion.tsx",["223"],"/workspace/frontend/src/components/Dashboard/EForms/EFormModal.tsx",[],"/workspace/frontend/src/components/HomePage/EnquiryForm.tsx",["224"],"import React, { useState } from \"react\";\r\nimport { Button, Card, Divider, Form, Input, Select } from \"antd\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport axios from \"axios\";\r\nconst { Option } = Select;\r\n\r\ninterface EnquiryFormInterface {\r\n  name: string;\r\n  email: string;\r\n  number: string;\r\n  standard: string;\r\n  type: string;\r\n}\r\n\r\nexport const EnquiryForm: React.FC = () => {\r\n  const [captchaBool, setCaptchaBool] = useState(false);\r\n  const onFinish = async (values: EnquiryFormInterface) => {\r\n    try {\r\n      const res = await axios.post(\"https://localhost:3000/sendmail\", values);\r\n      console.log(res);\r\n    } catch (e) {\r\n      console.log(e);\r\n      console.log(\"Could not send mail\");\r\n    }\r\n  };\r\n  const onCaptchaChange = (value: string | null) => {\r\n    setCaptchaBool(Boolean(value));\r\n  };\r\n  return (\r\n    <Card\r\n      bordered={false}\r\n      style={{ height: \"100%\", borderRadius: \"17px\", margin: '0 2%' }}\r\n    >\r\n      <h1 style={{ fontSize: \"25px\", marginBottom: \"0\" }}>\r\n        <b>Call admission hotline: <span style={{fontSize:'30px'}}>9890401239</span></b>\r\n      </h1>\r\n      <h1 style={{ fontSize: \"25px\", marginBottom: \"0\" }}>\r\n        <b> or Reach out to us!</b>\r\n      </h1>\r\n      <Divider />\r\n      <Form\r\n        name=\"enquiry\"\r\n        onFinish={onFinish}\r\n        scrollToFirstError\r\n        style={{ textAlign: \"left\" }}\r\n      >\r\n        <h2>\r\n          <b>Name:</b>\r\n        </h2>\r\n        <Form.Item name=\"name\">\r\n          <Input placeholder={\"Enter your Name.\"} />\r\n        </Form.Item>\r\n        <h2>\r\n          <b>Phone Number</b>\r\n        </h2>\r\n        <Form.Item name=\"number\">\r\n          <Input placeholder={\"Enter your Phone Number.\"} />\r\n        </Form.Item>\r\n\r\n        <ReCAPTCHA\r\n          sitekey=\"6LfhIz0aAAAAAORE5vd7fw2XQjYKfVsFjHyB5EGQ\"\r\n          theme=\"dark\"\r\n          onChange={onCaptchaChange}\r\n        />\r\n        <Form.Item name=\"button\">\r\n          <Button\r\n            type=\"primary\"\r\n            disabled={!captchaBool}\r\n            htmlType=\"submit\"\r\n            size=\"large\"\r\n            style={{ width: \"100%\", margin: \"auto\" }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n","/workspace/frontend/src/components/Dashboard/EForms/EForms.tsx",["225"],"import { Card, Table, Button, Popover, Popconfirm } from \"antd\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { EFormModal } from \"./EFormModal\";\r\nconst { REACT_APP_NODEJS_URL } = process.env;\r\n\r\ninterface EFormInterface {\r\n  name: string;\r\n  email: string;\r\n  number: string;\r\n  standard: string;\r\n  type: string;\r\n  enqid: Number;\r\n}\r\n\r\n\r\n\r\nexport const EForms: React.FC = () => {\r\n  const [forms, setForms] = useState<EFormInterface[] | undefined>([]);\r\n  useEffect(() => {\r\n    fetchForms();\r\n  }, []);\r\n\r\n\r\n  const fetchForms = async () => {\r\n    try {\r\n      const res = await axios.get(`http://${REACT_APP_NODEJS_URL}/admin/enquiry`, {\r\n        headers: {\r\n          authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      setForms(res.data);\r\n    } catch (e) {\r\n      console.log(\"Forms not loaded!\");\r\n    }\r\n  };\r\n  const deleteEnquiry = async (\r\n    enqid: Number,\r\n    forms: any[] | undefined,\r\n    setForms: React.Dispatch<React.SetStateAction<EFormInterface[] | undefined>>\r\n  ) => {\r\n    try {\r\n      const response = await axios({\r\n        method: \"DELETE\",\r\n        url: `http://${REACT_APP_NODEJS_URL}/admin/enquiry`,\r\n        headers: {\r\n          authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n        },\r\n        data: {\r\n          enqid: enqid,\r\n        },\r\n      });\r\n      console.log(response);\r\n      if (forms) {\r\n        const newState = forms.filter(\r\n          (item: { enqid: Number }) => item.enqid !== enqid\r\n        );\r\n        setForms(newState);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"Class\",\r\n      dataIndex: \"standard\",\r\n      key: \"standard\",\r\n    },\r\n    {\r\n      title: \"Type\",\r\n      dataIndex: \"type\",\r\n      key: \"type\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"\",\r\n      key: \"action\",\r\n      render: (text: any, record: EFormInterface) => (\r\n        <>\r\n          <EFormModal EForm={record} />\r\n          <Popconfirm\r\n            title=\"Are you sure you want to delete this question?\"\r\n            onConfirm={() => deleteEnquiry(record.enqid, forms, setForms)}>\r\n            <Button\r\n\r\n              type=\"primary\"\r\n              danger\r\n            >\r\n              Delete\r\n          </Button>\r\n          </Popconfirm>\r\n\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <div style={{ textAlign: \"left\" }}>\r\n      <h1 style={{ fontSize: \"40px\" }}>Enquiry Forms</h1>\r\n      <Card style={{ textAlign: \"left\", borderRadius: \"10px\" }}>\r\n        <h1 style={{ fontSize: \"30px\" }}>View Latest Enquiry Forms</h1>\r\n        <Table columns={columns} dataSource={forms} style={{ width: \"100%\" }} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","/workspace/frontend/src/components/Dashboard/Questions/UploadQuestions.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/QuestionBank.tsx",[],"/workspace/frontend/src/components/Dashboard/Tests/TestTypeModal.tsx",[],"/workspace/frontend/src/components/Dashboard/EForms/EFormSettings.tsx",[],"/workspace/frontend/src/components/Dashboard/Tests/TestsPage.tsx",["226","227"],"import { Row, Col, List, Collapse, Tabs, Table, Button } from 'antd';\nimport axios from 'axios';\nimport React, { useState, useEffect, useContext } from 'react'\nimport { TestCard } from '../../Test/TestCard';\nimport UserContext from '../../../context/User/UserContext';\nconst { REACT_APP_NODEJS_URL } = process.env;\n\nconst { Panel } = Collapse;\n\ninterface Test {\n  testid: number,\n  testname: string,\n  subjectsallowed: string[],\n}\ninterface TestCardProps {\n  availableTest: Array<Array<Test>>,\n  givenTest: any\n  // givenTest: [[\n  //   {\n  //     testid: number,\n  //     testname: string,\n  //     subjectsallowed: string[],\n  //   }\n  // ]]\n\n}\n\nexport const TestsPage: React.FC = () => {\n  const userContext = useContext(UserContext)\n  useEffect(() => {\n    getTests();\n  }, [userContext.user])\n  const columns = [\n    {\n      title: 'Test Name',\n      dataIndex: 'name',\n      key: 'donetestid',\n    },\n    {\n      title: 'Test Subjects',\n      dataIndex: 'subjects',\n      key: 'subjects',\n    },\n    {\n      title: 'Marks',\n      dataIndex: 'marks',\n      key: 'marks',\n    },\n    {\n      title: 'Actions',\n      dataIndex: 'actions',\n      key: 'actions',\n      render: () => (<Button type=\"primary\">View</Button>),\n\n    },\n  ];\n  const getTests = async () => {\n    if (userContext.user) {\n      try {\n        const res = await axios.get(`http://${REACT_APP_NODEJS_URL}/secure/test`, {\n          headers: {\n            authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n            userid: userContext.user.userid\n          },\n        });\n        console.log(res.data);\n        //TODO: Change is back to availableTest\n        setTests(res.data);\n      } catch (e) {\n        console.log(\"Tests not Loaded\");\n      }\n    }\n\n  }\n  const [tests, setTests] = useState<TestCardProps | undefined | null>(null)\n  return (\n    <Row >\n      <Col span={24}><h1 style={{ fontSize: \"40px\", textAlign: \"left\" ,width:'100%'}}>Tests</h1></Col>\n      <Col span={24}>\n      {tests?.availableTest && <Tabs style={{ textAlign: 'center' }}>\n          <Tabs.TabPane tab=\"Available Tests\" key=\"1\">\n            <Row>\n              <List\n                grid={{\n                  gutter: 16,\n                  xs: 1,\n                  sm: 1,\n                  md: 2,\n                  lg: 3,\n                  xl: 3,\n                  xxl: 3,\n                }}\n                dataSource={tests.availableTest[0]}\n                renderItem={item => (\n                  <List.Item  >\n                    <TestCard test={item} />\n                  </List.Item>\n                )}\n              />\n            </Row>\n          </Tabs.TabPane>\n          <Tabs.TabPane tab=\"Attempted Tests\" key=\"2\">\n            <Table columns={columns} dataSource={tests?.givenTest[0].rows} />\n          </Tabs.TabPane>\n        </Tabs>}\n      </Col>\n      <Col span={1} />\n      <Col span={22}>\n\n      </Col>\n      <Col span={1} />\n    </Row>\n  );\n}",["228","229"],"/workspace/frontend/src/views/HomePage/Courses.tsx",[],"/workspace/frontend/src/views/Test/TestSubmitted.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/ReportedQuestions.tsx",[],"/workspace/frontend/src/components/Blog/BlogListItem.tsx",[],["230","231"],"/workspace/frontend/src/components/Dashboard/EForms/EFormsAnalysis.tsx",[],["232","233"],"/workspace/frontend/src/views/Test/Test.tsx",["234","235","236"],"/workspace/frontend/src/components/Test/QuestionComponents/MCQComponent.tsx",["237","238"],"/workspace/frontend/src/context/User/UserState.tsx",["239","240"],"/workspace/frontend/src/views/HomePage/FAQ.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/AddQuestionPage.tsx",[],"/workspace/frontend/src/views/Auth/Register.tsx",[],"/workspace/frontend/src/views/Auth/ForgetPassword.tsx",[],"/workspace/frontend/src/views/Dashboard/Dashboard.tsx",[],"/workspace/frontend/src/components/Dashboard/Blogs/BlogsTable.tsx",[],{"ruleId":"241","severity":1,"message":"242","line":1,"column":20,"nodeType":"243","messageId":"244","endLine":1,"endColumn":25},{"ruleId":"241","severity":1,"message":"245","line":1,"column":10,"nodeType":"243","messageId":"244","endLine":1,"endColumn":15},{"ruleId":"241","severity":1,"message":"246","line":1,"column":22,"nodeType":"243","messageId":"244","endLine":1,"endColumn":25},{"ruleId":"241","severity":1,"message":"247","line":1,"column":27,"nodeType":"243","messageId":"244","endLine":1,"endColumn":43},{"ruleId":"241","severity":1,"message":"248","line":25,"column":9,"nodeType":"243","messageId":"244","endLine":25,"endColumn":14},{"ruleId":"241","severity":1,"message":"249","line":26,"column":11,"nodeType":"243","messageId":"244","endLine":26,"endColumn":21},{"ruleId":"241","severity":1,"message":"250","line":32,"column":11,"nodeType":"243","messageId":"244","endLine":32,"endColumn":30},{"ruleId":"241","severity":1,"message":"251","line":36,"column":9,"nodeType":"243","messageId":"244","endLine":36,"endColumn":13},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","replacedBy":"255"},{"ruleId":"241","severity":1,"message":"256","line":1,"column":38,"nodeType":"243","messageId":"244","endLine":1,"endColumn":45},{"ruleId":"257","severity":1,"message":"258","line":60,"column":6,"nodeType":"259","endLine":60,"endColumn":8,"suggestions":"260"},{"ruleId":"257","severity":1,"message":"261","line":50,"column":8,"nodeType":"259","endLine":50,"endColumn":41,"suggestions":"262"},{"ruleId":"257","severity":1,"message":"263","line":50,"column":9,"nodeType":"264","endLine":50,"endColumn":40},{"ruleId":"241","severity":1,"message":"265","line":125,"column":10,"nodeType":"243","messageId":"244","endLine":125,"endColumn":17},{"ruleId":"252","replacedBy":"266"},{"ruleId":"254","replacedBy":"267"},{"ruleId":"252","replacedBy":"268"},{"ruleId":"254","replacedBy":"269"},{"ruleId":"252","replacedBy":"270"},{"ruleId":"254","replacedBy":"271"},{"ruleId":"257","severity":1,"message":"258","line":60,"column":6,"nodeType":"259","endLine":60,"endColumn":8,"suggestions":"272"},{"ruleId":"252","replacedBy":"273"},{"ruleId":"254","replacedBy":"274"},{"ruleId":"241","severity":1,"message":"275","line":1,"column":23,"nodeType":"243","messageId":"244","endLine":1,"endColumn":29},{"ruleId":"241","severity":1,"message":"276","line":5,"column":9,"nodeType":"243","messageId":"244","endLine":5,"endColumn":15},{"ruleId":"241","severity":1,"message":"277","line":1,"column":31,"nodeType":"243","messageId":"244","endLine":1,"endColumn":38},{"ruleId":"241","severity":1,"message":"278","line":8,"column":9,"nodeType":"243","messageId":"244","endLine":8,"endColumn":14},{"ruleId":"257","severity":1,"message":"279","line":32,"column":6,"nodeType":"259","endLine":32,"endColumn":24,"suggestions":"280"},{"ruleId":"252","replacedBy":"281"},{"ruleId":"254","replacedBy":"282"},{"ruleId":"252","replacedBy":"283"},{"ruleId":"254","replacedBy":"284"},{"ruleId":"252","replacedBy":"285"},{"ruleId":"254","replacedBy":"286"},{"ruleId":"241","severity":1,"message":"287","line":13,"column":11,"nodeType":"243","messageId":"244","endLine":13,"endColumn":28},{"ruleId":"257","severity":1,"message":"288","line":57,"column":6,"nodeType":"259","endLine":57,"endColumn":15,"suggestions":"289"},{"ruleId":"241","severity":1,"message":"290","line":237,"column":17,"nodeType":"243","messageId":"244","endLine":237,"endColumn":20},{"ruleId":"241","severity":1,"message":"248","line":25,"column":7,"nodeType":"243","messageId":"244","endLine":25,"endColumn":12},{"ruleId":"241","severity":1,"message":"251","line":36,"column":7,"nodeType":"243","messageId":"244","endLine":36,"endColumn":11},{"ruleId":"291","severity":1,"message":"292","line":57,"column":7,"nodeType":"293","messageId":"294","endLine":57,"endColumn":17},{"ruleId":"291","severity":1,"message":"292","line":75,"column":7,"nodeType":"293","messageId":"294","endLine":75,"endColumn":17},"@typescript-eslint/no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'Radio' is defined but never used.","'Col' is defined but never used.","'RadioChangeEvent' is defined but never used.","'Latex' is assigned a value but never used.","'radioStyle' is assigned a value but never used.","'radioContainerStyle' is assigned a value but never used.","'temp' is assigned a value but never used.","no-native-reassign",["295"],"no-negated-in-lhs",["296"],"'message' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchTestDetails'. Either include it or remove the dependency array.","ArrayExpression",["297"],"React Hook useEffect has missing dependencies: 'courseData' and 'location.pathname'. Either include them or remove the dependency array.",["298"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","'current' is assigned a value but never used.",["295"],["296"],["295"],["296"],["295"],["296"],["299"],["295"],["296"],"'Button' is defined but never used.","'Option' is assigned a value but never used.","'Popover' is defined but never used.","'Panel' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTests'. Either include it or remove the dependency array.",["300"],["295"],["296"],["295"],["296"],["295"],["296"],"'QuestionInterface' is defined but never used.","React Hook useEffect has a missing dependency: 'response'. Either include it or remove the dependency array.",["301"],"'key' is assigned a value but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-global-assign","no-unsafe-negation",{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"302","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},"Update the dependencies array to be: [fetchTestDetails]",{"range":"311","text":"312"},"Update the dependencies array to be: [courseData, location.pathname]",{"range":"313","text":"314"},{"range":"315","text":"312"},"Update the dependencies array to be: [getTests, userContext.user]",{"range":"316","text":"317"},"Update the dependencies array to be: [answers, response]",{"range":"318","text":"319"},[1279,1281],"[fetchTestDetails]",[1711,1744],"[courseData, location.pathname]",[1270,1272],[778,796],"[getTests, userContext.user]",[2186,2195],"[answers, response]"]