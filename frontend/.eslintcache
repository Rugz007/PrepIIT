[{"/workspace/frontend/src/index.tsx":"1","/workspace/frontend/src/views/Auth/Login.tsx":"2","/workspace/frontend/src/views/HomePage/About.tsx":"3","/workspace/frontend/src/components/Dashboard/EForms/EFormSettings.tsx":"4","/workspace/frontend/src/components/Dashboard/Questions/QuestionBank.tsx":"5","/workspace/frontend/src/components/Blog/BlogListItem.tsx":"6","/workspace/frontend/src/components/Test/TestCard.tsx":"7","/workspace/frontend/src/views/Test/TestsPage.tsx":"8","/workspace/frontend/src/components/Navbar.tsx":"9","/workspace/frontend/src/reportWebVitals.ts":"10","/workspace/frontend/src/views/Auth/Register.tsx":"11","/workspace/frontend/src/views/HomePage/FAQ.tsx":"12","/workspace/frontend/src/components/Dashboard/Blogs/BlogsTable.tsx":"13","/workspace/frontend/src/components/Dashboard/EForms/EFormModal.tsx":"14","/workspace/frontend/src/views/Blog/BlogPage.tsx":"15","/workspace/frontend/src/views/HomePage/Courses.tsx":"16","/workspace/frontend/src/components/Dashboard/Tests/TestTypeModal.tsx":"17","/workspace/frontend/src/components/Dashboard/Blogs/CreateBlog.tsx":"18","/workspace/frontend/src/components/Dashboard/Questions/DifficultyLevel.js":"19","/workspace/frontend/src/views/HomePage/Contact.tsx":"20","/workspace/frontend/src/components/Dashboard/Questions/AddQuestionPage.tsx":"21","/workspace/frontend/src/components/Dashboard/Profile/Profile.tsx":"22","/workspace/frontend/src/views/Dashboard/Dashboard.tsx":"23","/workspace/frontend/src/views/Blog/BlogList.tsx":"24","/workspace/frontend/src/views/HomePage/HomePage.tsx":"25","/workspace/frontend/src/components/Dashboard/Questions/ReportedQuestions.tsx":"26","/workspace/frontend/src/components/Errors/Error400.tsx":"27","/workspace/frontend/src/components/Dashboard/EForms/EForms.tsx":"28","/workspace/frontend/src/components/Test/TestDetails.tsx":"29","/workspace/frontend/src/components/Dashboard/Questions/QuestionModal.tsx":"30","/workspace/frontend/src/components/Dashboard/Questions/AddQuestion.tsx":"31","/workspace/frontend/src/components/Test/TestIntruction.tsx":"32","/workspace/frontend/src/App.tsx":"33"},{"size":605,"mtime":1614962687762,"results":"34","hashOfConfig":"35"},{"size":3113,"mtime":1615450345256,"results":"36","hashOfConfig":"35"},{"size":5368,"mtime":1615450338852,"results":"37","hashOfConfig":"35"},{"size":927,"mtime":1614962687762,"results":"38","hashOfConfig":"35"},{"size":4156,"mtime":1615012455352,"results":"39","hashOfConfig":"35"},{"size":630,"mtime":1614962687762,"results":"40","hashOfConfig":"35"},{"size":1412,"mtime":1615802125941,"results":"41","hashOfConfig":"35"},{"size":1973,"mtime":1615802665473,"results":"42","hashOfConfig":"35"},{"size":4040,"mtime":1615450010836,"results":"43","hashOfConfig":"35"},{"size":440,"mtime":1614962687762,"results":"44","hashOfConfig":"35"},{"size":5850,"mtime":1615450345256,"results":"45","hashOfConfig":"35"},{"size":8404,"mtime":1615450346484,"results":"46","hashOfConfig":"35"},{"size":1459,"mtime":1614962687762,"results":"47","hashOfConfig":"35"},{"size":1818,"mtime":1614970707447,"results":"48","hashOfConfig":"35"},{"size":5558,"mtime":1614962687762,"results":"49","hashOfConfig":"35"},{"size":8742,"mtime":1615450339844,"results":"50","hashOfConfig":"35"},{"size":5585,"mtime":1615012251864,"results":"51","hashOfConfig":"35"},{"size":1566,"mtime":1614962687762,"results":"52","hashOfConfig":"35"},{"size":223,"mtime":1614962687762,"results":"53","hashOfConfig":"35"},{"size":1998,"mtime":1615450339380,"results":"54","hashOfConfig":"35"},{"size":588,"mtime":1614962687762,"results":"55","hashOfConfig":"35"},{"size":3300,"mtime":1615610531929,"results":"56","hashOfConfig":"35"},{"size":5086,"mtime":1615456667184,"results":"57","hashOfConfig":"35"},{"size":2168,"mtime":1614962687762,"results":"58","hashOfConfig":"35"},{"size":3472,"mtime":1615450345256,"results":"59","hashOfConfig":"35"},{"size":3091,"mtime":1615610026777,"results":"60","hashOfConfig":"35"},{"size":395,"mtime":1614962687762,"results":"61","hashOfConfig":"35"},{"size":2809,"mtime":1615011568240,"results":"62","hashOfConfig":"35"},{"size":1552,"mtime":1615367154248,"results":"63","hashOfConfig":"35"},{"size":4833,"mtime":1615609938105,"results":"64","hashOfConfig":"35"},{"size":2834,"mtime":1615011792728,"results":"65","hashOfConfig":"35"},{"size":3062,"mtime":1615705946212,"results":"66","hashOfConfig":"35"},{"size":777,"mtime":1614962687758,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1b3atdm",{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"93"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/workspace/frontend/src/index.tsx",[],["143","144"],"/workspace/frontend/src/views/Auth/Login.tsx",["145","146","147"],"import Layout, { Content } from \"antd/lib/layout/layout\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Row, Col, Form, Input, Card, Divider, Button } from \"antd\";\r\nimport { UserOutlined, KeyOutlined } from \"@ant-design/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport UserContext from \"../../context/User/UserContext\";\r\n\r\ninterface LoginInterface {\r\n  email: string;\r\n  password: string;\r\n}\r\nexport const Login: React.FC = () => {\r\n  let history = useHistory();\r\n  const userContext = useContext(UserContext);\r\n\r\n  const onFinish = (values: LoginInterface) => {\r\n    userContext.login(values);\r\n    history.push(\"/dashboard\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Content style={{ backgroundColor: \"#1c2229\", paddingBottom: \"13.2%\" }}>\r\n        <Row>\r\n          <Col span={4} />\r\n          <Col span={16} style={{ padding: \".4%\", paddingTop: \"4%\" }}>\r\n            <Card\r\n              bordered={false}\r\n              style={{ height: \"100%\", borderRadius: \"17px\", margin: \"0% 30%\" }}\r\n            >\r\n              <img\r\n                src=\"logo-nobg.png\"\r\n                alt=\"logo\"\r\n                style={{ width: \"50%\", margin: \"auto\" }}\r\n              />\r\n              <h1 style={{ fontSize: \"25px\", marginBottom: \"0\" }}>Login</h1>\r\n              <Divider />\r\n              <Form\r\n                name=\"enquiry\"\r\n                onFinish={onFinish}\r\n                scrollToFirstError\r\n                style={{ textAlign: \"left\" }}\r\n              >\r\n                <Form.Item\r\n                  name=\"email\"\r\n                  rules={[\r\n                    {\r\n                      type: \"email\",\r\n                      message: \"The input is not valid E-mail!\",\r\n                    },\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your E-mail!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<UserOutlined />}\r\n                    placeholder={\"Enter your Email ID.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item name=\"password\">\r\n                  <Input.Password\r\n                    size=\"large\"\r\n                    prefix={<KeyOutlined />}\r\n                    placeholder={\"Enter your Password.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    size=\"large\"\r\n                    style={{ width: \"100%\", margin: \"auto\" }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n              <a>Forgot Password?</a>\r\n              <Divider />\r\n              <p>\r\n                Don't have an account? <Link to=\"/register\">Register!</Link>\r\n              </p>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col span={4} />\r\n        </Row>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n","/workspace/frontend/src/views/HomePage/About.tsx",[],["148","149"],"/workspace/frontend/src/components/Dashboard/EForms/EFormSettings.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/QuestionBank.tsx",[],["150","151"],"/workspace/frontend/src/components/Blog/BlogListItem.tsx",[],["152","153"],"/workspace/frontend/src/components/Test/TestCard.tsx",["154"],"/workspace/frontend/src/views/Test/TestsPage.tsx",["155"],"/workspace/frontend/src/components/Navbar.tsx",[],"/workspace/frontend/src/reportWebVitals.ts",[],["156","157"],"/workspace/frontend/src/views/Auth/Register.tsx",["158"],"import Layout, { Content } from \"antd/lib/layout/layout\";\r\nimport React, { useContext } from \"react\";\r\nimport { Row, Col, Form, Input, Card, Divider, Button, Select } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  KeyOutlined,\r\n  MailOutlined,\r\n  PhoneOutlined,\r\n  HomeOutlined,\r\n  AccountBookOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../../context/User/UserContext\";\r\nconst { Option } = Select;\r\ninterface RegisterInterface {\r\n  name: string;\r\n  email: string;\r\n  phone_no: string;\r\n  address: string;\r\n  standard: string;\r\n  password: string;\r\n  confirmPassword?: string;\r\n}\r\n\r\nexport const Register: React.FC = () => {\r\n  let history = useHistory();\r\n\r\n  const userContext = useContext(UserContext);\r\n  const onFinish = (values: RegisterInterface) => {\r\n    delete values.confirmPassword;\r\n    userContext.register(values);\r\n    history.push(\"/login\");\r\n  };\r\n  return (\r\n    <Layout>\r\n      <Content style={{ backgroundColor: \"#1c2229\", paddingBottom: \"4%\" }}>\r\n        <Row>\r\n          <Col span={4} />\r\n          <Col span={16} style={{ padding: \".4%\", paddingTop: \"1%\" }}>\r\n            <Card\r\n              style={{ height: \"100%\", borderRadius: \"17px\", margin: \"0% 30%\" }}\r\n            >\r\n              <img\r\n                src=\"logo-nobg.png\"\r\n                alt=\"logo\"\r\n                style={{ width: \"46%\", margin: \"auto\" }}\r\n              />\r\n              <h1 style={{ fontSize: \"25px\", marginBottom: \"0\" }}>\r\n                Create new account\r\n              </h1>\r\n              <Divider />\r\n              <Form\r\n                name=\"register\"\r\n                onFinish={onFinish}\r\n                scrollToFirstError\r\n                style={{ textAlign: \"left\" }}\r\n              >\r\n                <Form.Item name=\"name\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<UserOutlined />}\r\n                    placeholder={\"Enter your name.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"email\"\r\n                  rules={[\r\n                    {\r\n                      type: \"email\",\r\n                      message: \"The input is not valid E-mail!\",\r\n                    },\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your E-mail!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<MailOutlined />}\r\n                    placeholder={\"Enter your Email ID.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item name=\"phone_no\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<PhoneOutlined />}\r\n                    placeholder={\"Enter your phone number.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item name=\"address\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<HomeOutlined />}\r\n                    placeholder={\"Enter your Address.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item name=\"class\">\r\n                  <Select placeholder={\"Select your class.\"}>\r\n                    <Option value=\"VII\">VII</Option>\r\n                    <Option value=\"VIII\">VIII</Option>\r\n                    <Option value=\"IX\">IX</Option>\r\n                    <Option value=\"X\">X</Option>\r\n                    <Option value=\"XI\">XI</Option>\r\n                    <Option value=\"XII\">XII</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"password\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your password!\",\r\n                    },\r\n                  ]}\r\n                  hasFeedback\r\n                >\r\n                  <Input.Password\r\n                    size=\"large\"\r\n                    prefix={<KeyOutlined />}\r\n                    placeholder={\"Enter your Password.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"confirmPassword\"\r\n                  hasFeedback\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please confirm your password!\",\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        if (!value || getFieldValue(\"password\") === value) {\r\n                          return Promise.resolve();\r\n                        }\r\n\r\n                        return Promise.reject(\r\n                          \"The two passwords that you entered do not match!\"\r\n                        );\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    size=\"large\"\r\n                    prefix={<KeyOutlined />}\r\n                    placeholder={\"Re-enter your Password.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    size=\"large\"\r\n                    style={{ width: \"100%\", margin: \"auto\" }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n              <Divider />\r\n              <p>\r\n                Already have an account? <Link to=\"/login\">Login</Link>\r\n              </p>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col span={4} />\r\n        </Row>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n","/workspace/frontend/src/views/HomePage/FAQ.tsx",[],"/workspace/frontend/src/components/Dashboard/Blogs/BlogsTable.tsx",[],"/workspace/frontend/src/components/Dashboard/EForms/EFormModal.tsx",[],"/workspace/frontend/src/views/Blog/BlogPage.tsx",[],["159","160"],"/workspace/frontend/src/views/HomePage/Courses.tsx",[],"/workspace/frontend/src/components/Dashboard/Tests/TestTypeModal.tsx",[],"/workspace/frontend/src/components/Dashboard/Blogs/CreateBlog.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/DifficultyLevel.js",[],"/workspace/frontend/src/views/HomePage/Contact.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/AddQuestionPage.tsx",[],"/workspace/frontend/src/components/Dashboard/Profile/Profile.tsx",["161","162"],"/workspace/frontend/src/views/Dashboard/Dashboard.tsx",[],"/workspace/frontend/src/views/Blog/BlogList.tsx",["163","164","165"],"import { Avatar, Col, List, Row } from 'antd';\r\nimport React from 'react'\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { BlogListItem } from '../../components/Blog/BlogListItem';\r\nimport { BlogPage } from './BlogPage';\r\n\r\nexport const BlogList: React.FC = () => {\r\n    const data = [{\r\n        'id':1,\r\n        'title': 'How to Crack JEE',\r\n        'icon': <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />,\r\n        'content': 'How to Crack JEE in 2 Days!!!!!'\r\n    },\r\n    {\r\n        'id':2,\r\n        'title': 'How to Crack JEE',\r\n        'icon': <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />,\r\n        'content': 'How to Crack JEE in 2 Days!!!!!'\r\n    }];\r\n    return (\r\n        <Row style={{ height: '90vh', marginTop: '3%' }}>\r\n            <Col span={4} />\r\n            <Col span={16}>\r\n                <Row>\r\n                    <h1 style={{ fontSize: \"2.3rem\", margin: 'auto' }}>Blog List</h1>\r\n                </Row>\r\n                <Row>\r\n                    <List\r\n                        dataSource={data}\r\n                        itemLayout=\"vertical\"\r\n                        size=\"large\"\r\n                        style={{ width: '100%', textAlign: 'left' }}\r\n                        pagination={{\r\n                            onChange: page => {\r\n                                console.log(page);\r\n                            },\r\n                            pageSize: 3,\r\n                        }}\r\n                        extra={\r\n                            <img\r\n                                width={272}\r\n                                alt=\"logo\"\r\n                                src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n                            />\r\n                        }\r\n                        renderItem={item => (\r\n                            <BlogListItem id={item.id} icon={item.icon} title={item.title} description={item.content} />\r\n                        )}>\r\n                    </List>\r\n                    \r\n                </Row>\r\n            </Col>\r\n            <Col span={4} />\r\n        </Row>\r\n    );\r\n}","/workspace/frontend/src/views/HomePage/HomePage.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/ReportedQuestions.tsx",[],"/workspace/frontend/src/components/Errors/Error400.tsx",[],"/workspace/frontend/src/components/Dashboard/EForms/EForms.tsx",["166"],"/workspace/frontend/src/components/Test/TestDetails.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/QuestionModal.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/AddQuestion.tsx",["167"],"/workspace/frontend/src/components/Test/TestIntruction.tsx",[],"/workspace/frontend/src/App.tsx",["168"],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":2,"column":29,"nodeType":"175","messageId":"176","endLine":2,"endColumn":37},{"ruleId":"173","severity":1,"message":"177","line":6,"column":8,"nodeType":"175","messageId":"176","endLine":6,"endColumn":13},{"ruleId":"178","severity":1,"message":"179","line":82,"column":15,"nodeType":"180","endLine":82,"endColumn":18},{"ruleId":"169","replacedBy":"181"},{"ruleId":"171","replacedBy":"182"},{"ruleId":"169","replacedBy":"183"},{"ruleId":"171","replacedBy":"184"},{"ruleId":"169","replacedBy":"185"},{"ruleId":"171","replacedBy":"186"},{"ruleId":"173","severity":1,"message":"174","line":2,"column":17,"nodeType":"175","messageId":"176","endLine":2,"endColumn":25},{"ruleId":"173","severity":1,"message":"187","line":1,"column":26,"nodeType":"175","messageId":"176","endLine":1,"endColumn":33},{"ruleId":"169","replacedBy":"188"},{"ruleId":"171","replacedBy":"189"},{"ruleId":"173","severity":1,"message":"190","line":10,"column":3,"nodeType":"175","messageId":"176","endLine":10,"endColumn":22},{"ruleId":"169","replacedBy":"191"},{"ruleId":"171","replacedBy":"192"},{"ruleId":"173","severity":1,"message":"193","line":1,"column":34,"nodeType":"175","messageId":"176","endLine":1,"endColumn":46},{"ruleId":"173","severity":1,"message":"194","line":1,"column":65,"nodeType":"175","messageId":"176","endLine":1,"endColumn":72},{"ruleId":"173","severity":1,"message":"195","line":3,"column":10,"nodeType":"175","messageId":"176","endLine":3,"endColumn":15},{"ruleId":"173","severity":1,"message":"196","line":3,"column":17,"nodeType":"175","messageId":"176","endLine":3,"endColumn":23},{"ruleId":"173","severity":1,"message":"197","line":5,"column":10,"nodeType":"175","messageId":"176","endLine":5,"endColumn":18},{"ruleId":"173","severity":1,"message":"198","line":1,"column":31,"nodeType":"175","messageId":"176","endLine":1,"endColumn":38},{"ruleId":"173","severity":1,"message":"199","line":1,"column":23,"nodeType":"175","messageId":"176","endLine":1,"endColumn":29},{"ruleId":"200","severity":1,"message":"201","line":18,"column":5,"nodeType":"202","endLine":18,"endColumn":7,"suggestions":"203"},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["204"],["205"],["204"],["205"],["204"],["205"],"'Divider' is defined but never used.",["204"],["205"],"'AccountBookOutlined' is defined but never used.",["204"],["205"],"'Descriptions' is defined but never used.","'Tooltip' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'BlogPage' is defined but never used.","'Popover' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userContext'. Either include it or remove the dependency array.","ArrayExpression",["206"],"no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},"Update the dependencies array to be: [userContext]",{"range":"209","text":"210"},[595,597],"[userContext]"]