[{"/workspace/frontend/src/index.tsx":"1","/workspace/frontend/src/views/Auth/Login.tsx":"2","/workspace/frontend/src/views/HomePage/About.tsx":"3","/workspace/frontend/src/components/Dashboard/EForms/EFormSettings.tsx":"4","/workspace/frontend/src/components/Dashboard/Questions/QuestionBank.tsx":"5","/workspace/frontend/src/components/Blog/BlogListItem.tsx":"6","/workspace/frontend/src/components/Test/TestCard.tsx":"7","/workspace/frontend/src/components/Navbar.tsx":"8","/workspace/frontend/src/reportWebVitals.ts":"9","/workspace/frontend/src/views/Auth/Register.tsx":"10","/workspace/frontend/src/views/HomePage/FAQ.tsx":"11","/workspace/frontend/src/components/Dashboard/Blogs/BlogsTable.tsx":"12","/workspace/frontend/src/components/Dashboard/EForms/EFormModal.tsx":"13","/workspace/frontend/src/views/Blog/BlogPage.tsx":"14","/workspace/frontend/src/views/HomePage/Courses.tsx":"15","/workspace/frontend/src/components/Dashboard/Tests/TestTypeModal.tsx":"16","/workspace/frontend/src/components/Dashboard/Blogs/CreateBlog.tsx":"17","/workspace/frontend/src/components/Dashboard/Questions/DifficultyLevel.js":"18","/workspace/frontend/src/views/HomePage/Contact.tsx":"19","/workspace/frontend/src/components/Dashboard/Questions/AddQuestionPage.tsx":"20","/workspace/frontend/src/components/Dashboard/Profile/Profile.tsx":"21","/workspace/frontend/src/views/Dashboard/Dashboard.tsx":"22","/workspace/frontend/src/views/Blog/BlogList.tsx":"23","/workspace/frontend/src/views/HomePage/HomePage.tsx":"24","/workspace/frontend/src/components/Dashboard/Questions/ReportedQuestions.tsx":"25","/workspace/frontend/src/components/Errors/Error400.tsx":"26","/workspace/frontend/src/components/Dashboard/EForms/EForms.tsx":"27","/workspace/frontend/src/components/Test/TestDetails.tsx":"28","/workspace/frontend/src/components/Dashboard/Questions/QuestionModal.tsx":"29","/workspace/frontend/src/components/Dashboard/Questions/AddQuestion.tsx":"30","/workspace/frontend/src/components/Test/TestIntruction.tsx":"31","/workspace/frontend/src/App.tsx":"32","/workspace/frontend/src/routes.js":"33","/workspace/frontend/src/context/User/UserState.tsx":"34","/workspace/frontend/src/views/Test/Test.tsx":"35","/workspace/frontend/src/views/HomePage/CourseData.js":"36","/workspace/frontend/src/components/Dashboard/Questions/UploadQuestions.tsx":"37","/workspace/frontend/src/components/Analysis/SubjectAnalysis.tsx":"38","/workspace/frontend/src/views/Analysis/TestAnalysis.tsx":"39","/workspace/frontend/src/context/User/UserContext.tsx":"40","/workspace/frontend/src/context/User/UserReducer.tsx":"41","/workspace/frontend/src/components/Dashboard/EForms/EFormsAnalysis.tsx":"42","/workspace/frontend/src/components/Dashboard/Tests/TestTypes.tsx":"43","/workspace/frontend/src/components/Test/QuestionComponent.tsx":"44","/workspace/frontend/src/components/Errors/Error404.tsx":"45","/workspace/frontend/src/components/HomePage/EnquiryForm.tsx":"46","/workspace/frontend/src/components/Footer.tsx":"47","/workspace/frontend/src/context/User/type.js":"48","/workspace/frontend/src/components/Dashboard/Tests/TestsPage.tsx":"49","/workspace/frontend/src/views/Test/TestSubmitted.tsx":"50"},{"size":607,"mtime":1618051183962,"results":"51","hashOfConfig":"52"},{"size":3113,"mtime":1615695265021,"results":"53","hashOfConfig":"52"},{"size":5352,"mtime":1617296180340,"results":"54","hashOfConfig":"52"},{"size":927,"mtime":1614962687762,"results":"55","hashOfConfig":"52"},{"size":4188,"mtime":1617379492964,"results":"56","hashOfConfig":"52"},{"size":630,"mtime":1614962687762,"results":"57","hashOfConfig":"52"},{"size":2004,"mtime":1617363592800,"results":"58","hashOfConfig":"52"},{"size":7233,"mtime":1618397845262,"results":"59","hashOfConfig":"52"},{"size":440,"mtime":1613446567358,"results":"60","hashOfConfig":"52"},{"size":5850,"mtime":1615450345256,"results":"61","hashOfConfig":"52"},{"size":8363,"mtime":1617295525884,"results":"62","hashOfConfig":"52"},{"size":1459,"mtime":1615448717585,"results":"63","hashOfConfig":"52"},{"size":1838,"mtime":1618051183942,"results":"64","hashOfConfig":"52"},{"size":5558,"mtime":1613446567398,"results":"65","hashOfConfig":"52"},{"size":8687,"mtime":1617810982585,"results":"66","hashOfConfig":"52"},{"size":5627,"mtime":1617379492964,"results":"67","hashOfConfig":"52"},{"size":1566,"mtime":1614962687762,"results":"68","hashOfConfig":"52"},{"size":223,"mtime":1613461767240,"results":"69","hashOfConfig":"52"},{"size":1997,"mtime":1617301377272,"results":"70","hashOfConfig":"52"},{"size":588,"mtime":1614962687762,"results":"71","hashOfConfig":"52"},{"size":3300,"mtime":1615610531929,"results":"72","hashOfConfig":"52"},{"size":5389,"mtime":1618299864960,"results":"73","hashOfConfig":"52"},{"size":2168,"mtime":1614962687762,"results":"74","hashOfConfig":"52"},{"size":3867,"mtime":1617297280440,"results":"75","hashOfConfig":"52"},{"size":3091,"mtime":1615610026777,"results":"76","hashOfConfig":"52"},{"size":395,"mtime":1614962687762,"results":"77","hashOfConfig":"52"},{"size":2835,"mtime":1617379492964,"results":"78","hashOfConfig":"52"},{"size":2508,"mtime":1617380270188,"results":"79","hashOfConfig":"52"},{"size":6554,"mtime":1617809596071,"results":"80","hashOfConfig":"52"},{"size":2854,"mtime":1617379492968,"results":"81","hashOfConfig":"52"},{"size":3784,"mtime":1616399429740,"results":"82","hashOfConfig":"52"},{"size":780,"mtime":1617379021356,"results":"83","hashOfConfig":"52"},{"size":2552,"mtime":1618299272424,"results":"84","hashOfConfig":"52"},{"size":2693,"mtime":1617379547812,"results":"85","hashOfConfig":"52"},{"size":6765,"mtime":1618397845262,"results":"86","hashOfConfig":"52"},{"size":1006,"mtime":1614962687762,"results":"87","hashOfConfig":"52"},{"size":1327,"mtime":1617362600244,"results":"88","hashOfConfig":"52"},{"size":2556,"mtime":1615883566286,"results":"89","hashOfConfig":"52"},{"size":6463,"mtime":1616338930832,"results":"90","hashOfConfig":"52"},{"size":158,"mtime":1613446567358,"results":"91","hashOfConfig":"52"},{"size":1396,"mtime":1617810838683,"results":"92","hashOfConfig":"52"},{"size":299,"mtime":1614962687762,"results":"93","hashOfConfig":"52"},{"size":2155,"mtime":1615448717589,"results":"94","hashOfConfig":"52"},{"size":1943,"mtime":1617102844240,"results":"95","hashOfConfig":"52"},{"size":408,"mtime":1614962687762,"results":"96","hashOfConfig":"52"},{"size":3425,"mtime":1617291662690,"results":"97","hashOfConfig":"52"},{"size":3314,"mtime":1618299377540,"results":"98","hashOfConfig":"52"},{"size":511,"mtime":1614962687762,"results":"99","hashOfConfig":"52"},{"size":2933,"mtime":1618297580688,"results":"100","hashOfConfig":"52"},{"size":667,"mtime":1618299602472,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b3atdm",{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"117"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"152"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"117"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/workspace/frontend/src/index.tsx",[],"/workspace/frontend/src/views/Auth/Login.tsx",["224","225","226"],"/workspace/frontend/src/views/HomePage/About.tsx",[],["227","228"],"/workspace/frontend/src/components/Dashboard/EForms/EFormSettings.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/QuestionBank.tsx",[],"/workspace/frontend/src/components/Blog/BlogListItem.tsx",[],"/workspace/frontend/src/components/Test/TestCard.tsx",[],["229","230"],"/workspace/frontend/src/components/Navbar.tsx",["231"],"/workspace/frontend/src/reportWebVitals.ts",[],["232","233"],"/workspace/frontend/src/views/Auth/Register.tsx",["234"],"import Layout, { Content } from \"antd/lib/layout/layout\";\r\nimport React, { useContext } from \"react\";\r\nimport { Row, Col, Form, Input, Card, Divider, Button, Select } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  KeyOutlined,\r\n  MailOutlined,\r\n  PhoneOutlined,\r\n  HomeOutlined,\r\n  AccountBookOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../../context/User/UserContext\";\r\nconst { Option } = Select;\r\ninterface RegisterInterface {\r\n  name: string;\r\n  email: string;\r\n  phone_no: string;\r\n  address: string;\r\n  standard: string;\r\n  password: string;\r\n  confirmPassword?: string;\r\n}\r\n\r\nexport const Register: React.FC = () => {\r\n  let history = useHistory();\r\n\r\n  const userContext = useContext(UserContext);\r\n  const onFinish = (values: RegisterInterface) => {\r\n    delete values.confirmPassword;\r\n    userContext.register(values);\r\n    history.push(\"/login\");\r\n  };\r\n  return (\r\n    <Layout>\r\n      <Content style={{ backgroundColor: \"#1c2229\", paddingBottom: \"4%\" }}>\r\n        <Row>\r\n          <Col span={4} />\r\n          <Col span={16} style={{ padding: \".4%\", paddingTop: \"1%\" }}>\r\n            <Card\r\n              style={{ height: \"100%\", borderRadius: \"17px\", margin: \"0% 30%\" }}\r\n            >\r\n              <img\r\n                src=\"logo-nobg.png\"\r\n                alt=\"logo\"\r\n                style={{ width: \"46%\", margin: \"auto\" }}\r\n              />\r\n              <h1 style={{ fontSize: \"25px\", marginBottom: \"0\" }}>\r\n                Create new account\r\n              </h1>\r\n              <Divider />\r\n              <Form\r\n                name=\"register\"\r\n                onFinish={onFinish}\r\n                scrollToFirstError\r\n                style={{ textAlign: \"left\" }}\r\n              >\r\n                <Form.Item name=\"name\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<UserOutlined />}\r\n                    placeholder={\"Enter your name.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"email\"\r\n                  rules={[\r\n                    {\r\n                      type: \"email\",\r\n                      message: \"The input is not valid E-mail!\",\r\n                    },\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your E-mail!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<MailOutlined />}\r\n                    placeholder={\"Enter your Email ID.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item name=\"phone_no\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<PhoneOutlined />}\r\n                    placeholder={\"Enter your phone number.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item name=\"address\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<HomeOutlined />}\r\n                    placeholder={\"Enter your Address.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item name=\"class\">\r\n                  <Select placeholder={\"Select your class.\"}>\r\n                    <Option value=\"VII\">VII</Option>\r\n                    <Option value=\"VIII\">VIII</Option>\r\n                    <Option value=\"IX\">IX</Option>\r\n                    <Option value=\"X\">X</Option>\r\n                    <Option value=\"XI\">XI</Option>\r\n                    <Option value=\"XII\">XII</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"password\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your password!\",\r\n                    },\r\n                  ]}\r\n                  hasFeedback\r\n                >\r\n                  <Input.Password\r\n                    size=\"large\"\r\n                    prefix={<KeyOutlined />}\r\n                    placeholder={\"Enter your Password.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"confirmPassword\"\r\n                  hasFeedback\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please confirm your password!\",\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        if (!value || getFieldValue(\"password\") === value) {\r\n                          return Promise.resolve();\r\n                        }\r\n\r\n                        return Promise.reject(\r\n                          \"The two passwords that you entered do not match!\"\r\n                        );\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    size=\"large\"\r\n                    prefix={<KeyOutlined />}\r\n                    placeholder={\"Re-enter your Password.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    size=\"large\"\r\n                    style={{ width: \"100%\", margin: \"auto\" }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n              <Divider />\r\n              <p>\r\n                Already have an account? <Link to=\"/login\">Login</Link>\r\n              </p>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col span={4} />\r\n        </Row>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n","/workspace/frontend/src/views/HomePage/FAQ.tsx",[],["235","236"],"/workspace/frontend/src/components/Dashboard/Blogs/BlogsTable.tsx",[],"/workspace/frontend/src/components/Dashboard/EForms/EFormModal.tsx",[],"/workspace/frontend/src/views/Blog/BlogPage.tsx",[],"/workspace/frontend/src/views/HomePage/Courses.tsx",[],"/workspace/frontend/src/components/Dashboard/Tests/TestTypeModal.tsx",[],"/workspace/frontend/src/components/Dashboard/Blogs/CreateBlog.tsx",[],["237","238"],"/workspace/frontend/src/components/Dashboard/Questions/DifficultyLevel.js",[],"/workspace/frontend/src/views/HomePage/Contact.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/AddQuestionPage.tsx",[],["239","240"],"/workspace/frontend/src/components/Dashboard/Profile/Profile.tsx",["241","242"],"import { Card, Row, Col, Avatar, Descriptions, Divider, Button, Tooltip } from 'antd';\r\nimport React, { useContext } from 'react'\r\nimport UserContext from '../../../context/User/UserContext';\r\nimport CalendarHeatmap from 'react-calendar-heatmap';\r\nimport 'react-calendar-heatmap/dist/styles.css';\r\nimport './Profile.css'\r\nimport ReactTooltip from 'react-tooltip';\r\ninterface ProfileProps {\r\n\r\n}\r\n\r\nexport const Profile: React.FC<ProfileProps> = () => {\r\n    const userContext = useContext(UserContext);\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <h1 style={{ fontSize: '40px' }}>My Profile</h1>\r\n            </Row>\r\n            <Row>\r\n                <div style={{ width: '100%', margin: 'auto' }}>\r\n                    <Avatar size={{ xs: 24, sm: 32, md: 40, lg: 64, xl: 80, xxl: 100 }} />\r\n                    {userContext.user && <h1 style={{ fontSize: '2rem', marginTop: \"1%\", marginBottom: '0' }}><b>{userContext.user.name}</b></h1>}\r\n                    <h1 style={{ fontSize: '1rem' }}>Class:XII</h1>\r\n                    <h1 style={{ fontSize: '1rem' }}>Located at: Nashik,Maharashtra</h1>\r\n                </div>\r\n            </Row>\r\n            <Divider />\r\n            <Row gutter={24}>\r\n                <Col span={8}>\r\n                    <Card title={<h2>Subscription Type</h2>} style={{ textAlign: 'left' }}>\r\n                        <Row>\r\n                            <Col span={24}><h2>Type: Free</h2></Col>\r\n                            <Col span={24}><h2>Duration: --</h2></Col>\r\n                            \r\n                       </Row>\r\n                        <Button style={{ float: 'right' }} type='primary'>Upgrade!</Button>\r\n                    </Card>\r\n                </Col>\r\n                <Col span={16}>\r\n                    <Card title={<h2>Your Test Activity</h2>} style={{ textAlign: 'left' }}>\r\n                        <CalendarHeatmap\r\n                            startDate={new Date('2015-12-31')}\r\n                            endDate={new Date('2016-12-01')}\r\n                            values={[\r\n                                { date: '2016-01-01', count: 1 },\r\n                                { date: '2016-01-12', count: 1 },\r\n                                { date: '2016-02-12', count: 1 },\r\n                                { date: '2016-01-30', count: 1 },\r\n                                // ...and so on\r\n                            ]}\r\n                            classForValue={(value) => {\r\n                                if (!value) {\r\n                                    return 'color-empty';\r\n                                }\r\n                                return `color-scale-${value.count}`;\r\n                            }}\r\n                            tooltipDataAttrs={(value: any | null) => {\r\n                                if (value.date) {\r\n                                    return {\r\n                                        'data-tip': `On ${value.date.slice(0, 10)}, ${value.count} tests were given.`,\r\n                                    };\r\n                                }\r\n                            }\r\n                            }\r\n                        />\r\n                        <ReactTooltip/>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n\r\n    );\r\n}",["243","244"],"/workspace/frontend/src/views/Dashboard/Dashboard.tsx",[],"/workspace/frontend/src/views/Blog/BlogList.tsx",["245","246","247"],"import { Avatar, Col, List, Row } from 'antd';\r\nimport React from 'react'\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { BlogListItem } from '../../components/Blog/BlogListItem';\r\nimport { BlogPage } from './BlogPage';\r\n\r\nexport const BlogList: React.FC = () => {\r\n    const data = [{\r\n        'id':1,\r\n        'title': 'How to Crack JEE',\r\n        'icon': <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />,\r\n        'content': 'How to Crack JEE in 2 Days!!!!!'\r\n    },\r\n    {\r\n        'id':2,\r\n        'title': 'How to Crack JEE',\r\n        'icon': <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />,\r\n        'content': 'How to Crack JEE in 2 Days!!!!!'\r\n    }];\r\n    return (\r\n        <Row style={{ height: '90vh', marginTop: '3%' }}>\r\n            <Col span={4} />\r\n            <Col span={16}>\r\n                <Row>\r\n                    <h1 style={{ fontSize: \"2.3rem\", margin: 'auto' }}>Blog List</h1>\r\n                </Row>\r\n                <Row>\r\n                    <List\r\n                        dataSource={data}\r\n                        itemLayout=\"vertical\"\r\n                        size=\"large\"\r\n                        style={{ width: '100%', textAlign: 'left' }}\r\n                        pagination={{\r\n                            onChange: page => {\r\n                                console.log(page);\r\n                            },\r\n                            pageSize: 3,\r\n                        }}\r\n                        extra={\r\n                            <img\r\n                                width={272}\r\n                                alt=\"logo\"\r\n                                src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n                            />\r\n                        }\r\n                        renderItem={item => (\r\n                            <BlogListItem id={item.id} icon={item.icon} title={item.title} description={item.content} />\r\n                        )}>\r\n                    </List>\r\n                    \r\n                </Row>\r\n            </Col>\r\n            <Col span={4} />\r\n        </Row>\r\n    );\r\n}","/workspace/frontend/src/views/HomePage/HomePage.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/ReportedQuestions.tsx",[],["248","249"],"/workspace/frontend/src/components/Errors/Error400.tsx",[],["250","251"],"/workspace/frontend/src/components/Dashboard/EForms/EForms.tsx",["252"],"/workspace/frontend/src/components/Test/TestDetails.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/QuestionModal.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/AddQuestion.tsx",["253"],"/workspace/frontend/src/components/Test/TestIntruction.tsx",[],["254","255"],"/workspace/frontend/src/App.tsx",["256"],"import React, { useContext, useEffect } from \"react\";\r\nimport './App.less';\r\nimport \"antd/dist/antd.dark.css\";\r\nimport { Navbar } from './components/Navbar';\r\nimport AOS from \"aos\";\r\nimport 'aos/dist/aos.css';\r\nimport Routes from './routes';\r\nimport { Footer } from './components/Footer';\r\nimport UserContext from \"./context/User/UserContext\";\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nAOS.init();\r\nfunction App() {\r\n  const userContext = useContext<any>(UserContext);\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      userContext.loadUser();\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Navbar />\r\n        <Routes />\r\n        <Footer />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/workspace/frontend/src/routes.js",["257"],"/workspace/frontend/src/context/User/UserState.tsx",[],"/workspace/frontend/src/views/Test/Test.tsx",["258","259"],"/workspace/frontend/src/views/HomePage/CourseData.js",[],["260","261"],"/workspace/frontend/src/components/Dashboard/Questions/UploadQuestions.tsx",[],["262","263"],"/workspace/frontend/src/components/Analysis/SubjectAnalysis.tsx",[],"/workspace/frontend/src/views/Analysis/TestAnalysis.tsx",[],["264","265"],"/workspace/frontend/src/context/User/UserContext.tsx",[],["266","267"],"/workspace/frontend/src/context/User/UserReducer.tsx",[],"/workspace/frontend/src/components/Dashboard/EForms/EFormsAnalysis.tsx",[],["268","269"],"/workspace/frontend/src/components/Dashboard/Tests/TestTypes.tsx",["270","271"],"/workspace/frontend/src/components/Test/QuestionComponent.tsx",["272","273"],"/workspace/frontend/src/components/Errors/Error404.tsx",[],["274","275"],"/workspace/frontend/src/components/HomePage/EnquiryForm.tsx",[],"/workspace/frontend/src/components/Footer.tsx",[],"/workspace/frontend/src/context/User/type.js",[],["276","277"],"/workspace/frontend/src/components/Dashboard/Tests/TestsPage.tsx",["278","279"],"import { Row, Col, List, Collapse, Tabs, Table, Button } from 'antd';\nimport axios from 'axios';\nimport React, { useState, useEffect, useContext } from 'react'\nimport { TestCard } from '../../Test/TestCard';\nimport UserContext from '../../../context/User/UserContext';\nconst { REACT_APP_NODEJS_URL } = process.env;\n\nconst { Panel } = Collapse;\n\ninterface Test {\n  testid: number,\n  testname: string,\n  subjectsallowed: string[],\n}\ninterface TestCardProps {\n  availableTest: Array<Array<Test>>,\n  givenTest: any\n  // givenTest: [[\n  //   {\n  //     testid: number,\n  //     testname: string,\n  //     subjectsallowed: string[],\n  //   }\n  // ]]\n\n}\n\nexport const TestsPage: React.FC = () => {\n  const userContext = useContext(UserContext)\n  useEffect(() => {\n    getTests();\n  }, [userContext.user])\n  const columns = [\n    {\n      title: 'Test Name',\n      dataIndex: 'name',\n      key: 'donetestid',\n    },\n    {\n      title: 'Test Subjects',\n      dataIndex: 'subjects',\n      key: 'subjects',\n    },\n    {\n      title: 'Marks',\n      dataIndex: 'marks',\n      key: 'marks',\n    },\n    {\n      title: 'Actions',\n      dataIndex: 'actions',\n      key: 'actions',\n      render: () => (<Button type=\"primary\">View</Button>),\n\n    },\n  ];\n  const getTests = async () => {\n    if (userContext.user) {\n      try {\n        const res = await axios.get(`https://${REACT_APP_NODEJS_URL}/secure/test`, {\n          headers: {\n            authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n            userid: userContext.user.userid\n          },\n        });\n        console.log(res.data);\n        //TODO: Change is back to availableTest\n        setTests(res.data);\n      } catch (e) {\n        console.log(\"Tests not Loaded\");\n      }\n    }\n\n  }\n  const [tests, setTests] = useState<TestCardProps | undefined | null>(null)\n  return (\n    <Row style={{ minHeight: '95vh' }}>\n      <Col span={24}><h1 style={{ fontSize: \"40px\", textAlign: \"left\" ,width:'100%'}}>Tests</h1></Col>\n      <Col span={24}>\n      {tests && <Tabs style={{ textAlign: 'center' }}>\n          <Tabs.TabPane tab=\"Available Tests\" key=\"1\">\n            <Row>\n              <List\n                grid={{\n                  gutter: 16,\n                  xs: 1,\n                  sm: 1,\n                  md: 2,\n                  lg: 3,\n                  xl: 3,\n                  xxl: 3,\n                }}\n                dataSource={tests.availableTest[0]}\n                renderItem={item => (\n                  <List.Item  >\n                    <TestCard test={item} />\n                  </List.Item>\n                )}\n              />\n            </Row>\n          </Tabs.TabPane>\n          <Tabs.TabPane tab=\"Attempted Tests\" key=\"2\">\n            <Table columns={columns} dataSource={tests?.givenTest[0].rows} />\n          </Tabs.TabPane>\n        </Tabs>}\n      </Col>\n      <Col span={1} />\n      <Col span={22}>\n\n      </Col>\n      <Col span={1} />\n    </Row>\n  );\n}","/workspace/frontend/src/views/Test/TestSubmitted.tsx",[],{"ruleId":"280","severity":1,"message":"281","line":2,"column":29,"nodeType":"282","messageId":"283","endLine":2,"endColumn":37},{"ruleId":"280","severity":1,"message":"284","line":6,"column":8,"nodeType":"282","messageId":"283","endLine":6,"endColumn":13},{"ruleId":"285","severity":1,"message":"286","line":82,"column":15,"nodeType":"287","endLine":82,"endColumn":18},{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","replacedBy":"291"},{"ruleId":"288","replacedBy":"292"},{"ruleId":"290","replacedBy":"293"},{"ruleId":"280","severity":1,"message":"294","line":104,"column":10,"nodeType":"282","messageId":"283","endLine":104,"endColumn":17},{"ruleId":"288","replacedBy":"295"},{"ruleId":"290","replacedBy":"296"},{"ruleId":"280","severity":1,"message":"297","line":10,"column":3,"nodeType":"282","messageId":"283","endLine":10,"endColumn":22},{"ruleId":"288","replacedBy":"298"},{"ruleId":"290","replacedBy":"299"},{"ruleId":"288","replacedBy":"300"},{"ruleId":"290","replacedBy":"301"},{"ruleId":"288","replacedBy":"302"},{"ruleId":"290","replacedBy":"303"},{"ruleId":"280","severity":1,"message":"304","line":1,"column":34,"nodeType":"282","messageId":"283","endLine":1,"endColumn":46},{"ruleId":"280","severity":1,"message":"305","line":1,"column":65,"nodeType":"282","messageId":"283","endLine":1,"endColumn":72},{"ruleId":"288","replacedBy":"306"},{"ruleId":"290","replacedBy":"307"},{"ruleId":"280","severity":1,"message":"308","line":3,"column":10,"nodeType":"282","messageId":"283","endLine":3,"endColumn":15},{"ruleId":"280","severity":1,"message":"309","line":3,"column":17,"nodeType":"282","messageId":"283","endLine":3,"endColumn":23},{"ruleId":"280","severity":1,"message":"310","line":5,"column":10,"nodeType":"282","messageId":"283","endLine":5,"endColumn":18},{"ruleId":"288","replacedBy":"311"},{"ruleId":"290","replacedBy":"312"},{"ruleId":"288","replacedBy":"313"},{"ruleId":"290","replacedBy":"314"},{"ruleId":"280","severity":1,"message":"315","line":1,"column":31,"nodeType":"282","messageId":"283","endLine":1,"endColumn":38},{"ruleId":"280","severity":1,"message":"316","line":1,"column":23,"nodeType":"282","messageId":"283","endLine":1,"endColumn":29},{"ruleId":"288","replacedBy":"317"},{"ruleId":"290","replacedBy":"318"},{"ruleId":"319","severity":1,"message":"320","line":19,"column":6,"nodeType":"321","endLine":19,"endColumn":8,"suggestions":"322"},{"ruleId":"323","severity":1,"message":"324","line":1,"column":17,"nodeType":"282","messageId":"283","endLine":1,"endColumn":27},{"ruleId":"280","severity":1,"message":"325","line":12,"column":11,"nodeType":"282","messageId":"283","endLine":12,"endColumn":28},{"ruleId":"280","severity":1,"message":"326","line":137,"column":17,"nodeType":"282","messageId":"283","endLine":137,"endColumn":20},{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","replacedBy":"291"},{"ruleId":"288","replacedBy":"327"},{"ruleId":"290","replacedBy":"328"},{"ruleId":"288","replacedBy":"329"},{"ruleId":"290","replacedBy":"330"},{"ruleId":"288","replacedBy":"331"},{"ruleId":"290","replacedBy":"332"},{"ruleId":"288","replacedBy":"333"},{"ruleId":"290","replacedBy":"334"},{"ruleId":"280","severity":1,"message":"335","line":1,"column":38,"nodeType":"282","messageId":"283","endLine":1,"endColumn":45},{"ruleId":"319","severity":1,"message":"336","line":60,"column":6,"nodeType":"321","endLine":60,"endColumn":8,"suggestions":"337"},{"ruleId":"280","severity":1,"message":"338","line":23,"column":7,"nodeType":"282","messageId":"283","endLine":23,"endColumn":12},{"ruleId":"280","severity":1,"message":"339","line":34,"column":7,"nodeType":"282","messageId":"283","endLine":34,"endColumn":11},{"ruleId":"288","replacedBy":"340"},{"ruleId":"290","replacedBy":"341"},{"ruleId":"288","replacedBy":"342"},{"ruleId":"290","replacedBy":"343"},{"ruleId":"280","severity":1,"message":"344","line":8,"column":9,"nodeType":"282","messageId":"283","endLine":8,"endColumn":14},{"ruleId":"319","severity":1,"message":"345","line":32,"column":6,"nodeType":"321","endLine":32,"endColumn":24,"suggestions":"346"},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["347"],"no-negated-in-lhs",["348"],["347"],["348"],"'current' is assigned a value but never used.",["347"],["348"],"'AccountBookOutlined' is defined but never used.",["347"],["348"],["347"],["348"],["347"],["348"],"'Descriptions' is defined but never used.","'Tooltip' is defined but never used.",["347"],["348"],"'Route' is defined but never used.","'Switch' is defined but never used.","'BlogPage' is defined but never used.",["347"],["348"],["347"],["348"],"'Popover' is defined but never used.","'Button' is defined but never used.",["347"],["348"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userContext'. Either include it or remove the dependency array.","ArrayExpression",["349"],"no-unused-vars","'useContext' is defined but never used.","'QuestionInterface' is defined but never used.","'key' is assigned a value but never used.",["347"],["348"],["347"],["348"],["347"],["348"],["347"],["348"],"'message' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchTestDetails'. Either include it or remove the dependency array.",["350"],"'Latex' is assigned a value but never used.","'temp' is assigned a value but never used.",["347"],["348"],["347"],["348"],"'Panel' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTests'. Either include it or remove the dependency array.",["351"],"no-global-assign","no-unsafe-negation",{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},"Update the dependencies array to be: [userContext]",{"range":"358","text":"359"},"Update the dependencies array to be: [fetchTestDetails]",{"range":"360","text":"361"},"Update the dependencies array to be: [getTests, userContext.user]",{"range":"362","text":"363"},[598,600],"[userContext]",[1279,1281],"[fetchTestDetails]",[778,796],"[getTests, userContext.user]"]