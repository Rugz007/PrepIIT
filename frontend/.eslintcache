[{"/workspace/frontend/src/App.tsx":"1","/workspace/frontend/src/context/User/type.js":"2","/workspace/frontend/src/components/Dashboard/EForms/EFormSettings.tsx":"3","/workspace/frontend/src/components/Dashboard/Questions/DifficultyLevel.js":"4","/workspace/frontend/src/views/Test/Test.tsx":"5","/workspace/frontend/src/components/Test/TestDetails.tsx":"6","/workspace/frontend/src/context/User/UserState.tsx":"7","/workspace/frontend/src/views/Blog/BlogList.tsx":"8","/workspace/frontend/src/views/HomePage/About.tsx":"9","/workspace/frontend/src/views/Test/TestSubmitted.tsx":"10","/workspace/frontend/src/components/Analysis/SubjectAnalysis.tsx":"11","/workspace/frontend/src/components/Dashboard/Questions/UploadQuestions.tsx":"12","/workspace/frontend/src/components/Dashboard/EForms/EFormModal.tsx":"13","/workspace/frontend/src/routes.js":"14","/workspace/frontend/src/views/Analysis/TestAnalysis.tsx":"15","/workspace/frontend/src/components/Dashboard/Questions/QuestionBank.tsx":"16","/workspace/frontend/src/components/Dashboard/Questions/QuestionModal.tsx":"17","/workspace/frontend/src/views/HomePage/CourseData.js":"18","/workspace/frontend/src/components/Blog/BlogListItem.tsx":"19","/workspace/frontend/src/index.tsx":"20","/workspace/frontend/src/components/Dashboard/Blogs/BlogsTable.tsx":"21","/workspace/frontend/src/components/Test/QuestionComponents/MCQComponent.tsx":"22","/workspace/frontend/src/context/User/UserContext.tsx":"23","/workspace/frontend/src/components/Dashboard/EForms/EFormsAnalysis.tsx":"24","/workspace/frontend/src/components/Test/QuestionComponents/InputComponent.tsx":"25","/workspace/frontend/src/components/Dashboard/Blogs/CreateBlog.tsx":"26","/workspace/frontend/src/components/Dashboard/Questions/AddQuestionPage.tsx":"27","/workspace/frontend/src/components/HomePage/EnquiryForm.tsx":"28","/workspace/frontend/src/views/HomePage/HomePage.tsx":"29","/workspace/frontend/src/components/HomePage/CourseDescription.tsx":"30","/workspace/frontend/src/components/Navbar.tsx":"31","/workspace/frontend/src/components/Dashboard/Tests/TestTypeModal.tsx":"32","/workspace/frontend/src/components/Dashboard/Profile/Profile.tsx":"33","/workspace/frontend/src/components/Footer.tsx":"34","/workspace/frontend/src/reportWebVitals.ts":"35","/workspace/frontend/src/views/HomePage/Courses.tsx":"36"},{"size":745,"mtime":1619010277982,"results":"37","hashOfConfig":"38"},{"size":511,"mtime":1614962687762,"results":"39","hashOfConfig":"38"},{"size":927,"mtime":1614962687762,"results":"40","hashOfConfig":"38"},{"size":223,"mtime":1614962687762,"results":"41","hashOfConfig":"38"},{"size":10265,"mtime":1619037537756,"results":"42","hashOfConfig":"38"},{"size":2936,"mtime":1619277214980,"results":"43","hashOfConfig":"38"},{"size":2693,"mtime":1617379547812,"results":"44","hashOfConfig":"38"},{"size":2168,"mtime":1614962687762,"results":"45","hashOfConfig":"38"},{"size":5352,"mtime":1617296180340,"results":"46","hashOfConfig":"38"},{"size":667,"mtime":1618299602472,"results":"47","hashOfConfig":"38"},{"size":2556,"mtime":1615883566286,"results":"48","hashOfConfig":"38"},{"size":1347,"mtime":1617379492964,"results":"49","hashOfConfig":"38"},{"size":1838,"mtime":1617379492964,"results":"50","hashOfConfig":"38"},{"size":2715,"mtime":1619350682890,"results":"51","hashOfConfig":"38"},{"size":6463,"mtime":1616338930832,"results":"52","hashOfConfig":"38"},{"size":4188,"mtime":1617379492964,"results":"53","hashOfConfig":"38"},{"size":6554,"mtime":1617809596071,"results":"54","hashOfConfig":"38"},{"size":4391,"mtime":1619416303397,"results":"55","hashOfConfig":"38"},{"size":630,"mtime":1614962687762,"results":"56","hashOfConfig":"38"},{"size":607,"mtime":1617379026832,"results":"57","hashOfConfig":"38"},{"size":1459,"mtime":1614962687762,"results":"58","hashOfConfig":"38"},{"size":2113,"mtime":1619249443005,"results":"59","hashOfConfig":"38"},{"size":158,"mtime":1614962687762,"results":"60","hashOfConfig":"38"},{"size":299,"mtime":1614962687762,"results":"61","hashOfConfig":"38"},{"size":1709,"mtime":1619277773220,"results":"62","hashOfConfig":"38"},{"size":1566,"mtime":1614962687762,"results":"63","hashOfConfig":"38"},{"size":588,"mtime":1614962687762,"results":"64","hashOfConfig":"38"},{"size":2200,"mtime":1619421151573,"results":"65","hashOfConfig":"38"},{"size":5092,"mtime":1619421094573,"results":"66","hashOfConfig":"38"},{"size":6150,"mtime":1619420744545,"results":"67","hashOfConfig":"38"},{"size":7377,"mtime":1619358462913,"results":"68","hashOfConfig":"38"},{"size":5627,"mtime":1617379492964,"results":"69","hashOfConfig":"38"},{"size":4009,"mtime":1619258906912,"results":"70","hashOfConfig":"38"},{"size":4038,"mtime":1619420997113,"results":"71","hashOfConfig":"38"},{"size":440,"mtime":1614962687762,"results":"72","hashOfConfig":"38"},{"size":4627,"mtime":1619417087885,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1b3atdm",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"81"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"81"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/workspace/frontend/src/App.tsx",["160"],"/workspace/frontend/src/context/User/type.js",[],["161","162"],"/workspace/frontend/src/components/Dashboard/EForms/EFormSettings.tsx",[],["163","164"],"/workspace/frontend/src/components/Dashboard/Questions/DifficultyLevel.js",[],["165","166"],"/workspace/frontend/src/views/Test/Test.tsx",["167","168","169"],"/workspace/frontend/src/components/Test/TestDetails.tsx",[],["170","171"],"/workspace/frontend/src/context/User/UserState.tsx",[],"/workspace/frontend/src/views/Blog/BlogList.tsx",["172","173","174"],"/workspace/frontend/src/views/HomePage/About.tsx",[],"/workspace/frontend/src/views/Test/TestSubmitted.tsx",[],"/workspace/frontend/src/components/Analysis/SubjectAnalysis.tsx",[],["175","176"],"/workspace/frontend/src/components/Dashboard/Questions/UploadQuestions.tsx",[],["177","178"],"/workspace/frontend/src/components/Dashboard/EForms/EFormModal.tsx",[],"/workspace/frontend/src/routes.js",["179"],"/workspace/frontend/src/views/Analysis/TestAnalysis.tsx",[],["180","181"],"/workspace/frontend/src/components/Dashboard/Questions/QuestionBank.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/QuestionModal.tsx",[],["182","183"],"/workspace/frontend/src/views/HomePage/CourseData.js",[],"/workspace/frontend/src/components/Blog/BlogListItem.tsx",[],"/workspace/frontend/src/index.tsx",[],"/workspace/frontend/src/components/Dashboard/Blogs/BlogsTable.tsx",[],"/workspace/frontend/src/components/Test/QuestionComponents/MCQComponent.tsx",["184","185"],"import { Radio, Row, Col, RadioChangeEvent } from \"antd\";\r\nimport React from \"react\";\r\n\r\ninterface QuestionInterface {\r\n  question:\r\n    | {\r\n        qid: number;\r\n        statement: string;\r\n        img_path: string;\r\n        type: string;\r\n        archive: string;\r\n        latex: string;\r\n        options: string[];\r\n      }\r\n    | undefined;\r\n  onSelect: (e: RadioChangeEvent) => void;\r\n  answers:any,\r\n}\r\n\r\nexport const MCQComponent: React.FC<QuestionInterface> = ({\r\n  question,\r\n  onSelect,\r\n  answers\r\n}) => {\r\n  var Latex = require(\"react-latex\");\r\n  const radioStyle = {\r\n    borderRadius: \"0px\",\r\n    width: \"100%\",\r\n    fontSize: \"20px\",\r\n    verticalAlign: \"text-bottom\",\r\n  };\r\n  const radioContainerStyle = {\r\n    marginTop: \"15px\",\r\n    fontSize: \"20px\",\r\n  };\r\n  var temp = `Solve the following equation:  $$\\\\big (3\\\\times 4) \\\\div (5-3)$$`;\r\n  return (\r\n    <div style={{ padding: \"1%\" }}>\r\n      <Row style={{ fontSize: \"30px\" }}>\r\n        {question && (\r\n          <h3>\r\n            {question.statement}\r\n            {question.qid}\r\n            \r\n          </h3>\r\n        )}\r\n        {/* <Latex displayMode={true}>\r\n                    {temp}\r\n                </Latex> */}\r\n      </Row>\r\n      <Row>\r\n        {question && answers && answers[question.qid] !== undefined && <Radio.Group\r\n          style={{ textAlign: \"left\", width: \"100%\" }}\r\n          onChange={(e) => onSelect(e)}\r\n          value={answers[question?.qid][1][0]}\r\n        >\r\n          \r\n          {question?.options.map((option, index) => (\r\n            <Row style={radioContainerStyle}>\r\n              <Col span={1}>\r\n                <Radio.Button\r\n                  style={{ padding: \"0 0.7rem\", fontSize: \"20px\" }}\r\n                  name={option}\r\n                  value={option}\r\n                >\r\n                  {(index + 10).toString(36).toUpperCase()}\r\n                </Radio.Button>\r\n              </Col>\r\n              <Col span={23} style={radioStyle}>\r\n                {option}\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        </Radio.Group>}\r\n        \r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n","/workspace/frontend/src/context/User/UserContext.tsx",[],["186","187"],"/workspace/frontend/src/components/Dashboard/EForms/EFormsAnalysis.tsx",[],["188","189"],"/workspace/frontend/src/components/Test/QuestionComponents/InputComponent.tsx",["190","191","192","193","194","195","196"],"import { Radio, Row, Col, RadioChangeEvent, Input } from \"antd\";\nimport React from \"react\";\n\ninterface QuestionInterface {\n    question:\n    | {\n        qid: number;\n        statement: string;\n        img_path: string;\n        type: string;\n        archive: string;\n        latex: string;\n        options: string[];\n    }\n    | undefined;\n    onSelect: React.ChangeEventHandler<HTMLInputElement> | undefined;\n    answers: any,\n}\n\nexport const InputComponent: React.FC<QuestionInterface> = ({\n    question,\n    onSelect,\n    answers\n}) => {\n    var Latex = require(\"react-latex\");\n    const radioStyle = {\n        borderRadius: \"0px\",\n        width: \"100%\",\n        fontSize: \"20px\",\n        verticalAlign: \"text-bottom\",\n    };\n    const radioContainerStyle = {\n        marginTop: \"15px\",\n        fontSize: \"20px\",\n    };\n    var temp = `Solve the following equation:  $$\\\\big (3\\\\times 4) \\\\div (5-3)$$`;\n    return (\n        <div style={{ padding: \"1%\" }}>\n            <Row style={{ fontSize: \"30px\" }}>\n                {question && (\n                    <h3>\n                        {question.statement}\n                        {question.qid}\n\n                    </h3>\n                )}\n                {/* <Latex displayMode={true}>\n                    {temp}\n                </Latex> */}\n            </Row>\n            <Row>\n                {question && answers && answers[question.qid] !== undefined &&\n                    <Input\n                        value={answers[question?.qid][1][0]}\n                        placeholder=\"Type your answer here\"\n                        onChange={onSelect}\n                        size='large'\n                    />}\n\n            </Row>\n        </div>\n    );\n};\n","/workspace/frontend/src/components/Dashboard/Blogs/CreateBlog.tsx",[],["197","198"],"/workspace/frontend/src/components/Dashboard/Questions/AddQuestionPage.tsx",[],"/workspace/frontend/src/components/HomePage/EnquiryForm.tsx",["199"],"/workspace/frontend/src/views/HomePage/HomePage.tsx",[],"/workspace/frontend/src/components/HomePage/CourseDescription.tsx",[],"/workspace/frontend/src/components/Navbar.tsx",["200"],"import { Button, Col, Menu, Row, Avatar, Dropdown } from \"antd\";\nimport Layout, { Header } from \"antd/lib/layout/layout\";\nimport SubMenu from \"antd/lib/menu/SubMenu\";\nimport React, { useContext, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport UserContext from \"../context/User/UserContext\";\nimport './Navbar.css'\n\nconst StaticHeader: React.FC = () => {\n  const userContext = useContext(UserContext);\n  const [current, setCurrent] = useState(\"Home\");\n  const onClick = (e: any) => {\n    setCurrent(e.key);\n  };\n  const onClickLogo = () => {\n    setCurrent(\"Home\");\n  };\n  return (\n    <Layout>\n      <Header style={{ backgroundColor: \"white\" }}>\n        <Row style={{ height: \"100%\" }}>\n          <Col lg={2} />\n          <Col lg={2} md={4} sm={4} xs={8} style={{ height: \"100%\" }}>\n            <Link to=\"/\" onClick={onClickLogo}>\n              <img alt=\"logo\" src=\"https://i.imgur.com/Nki0mn9.jpg\" style={{ width: \"55%\" }} />\n            </Link>\n          </Col>\n          <Col lg={16} xs={14} style={{ width: \"100%\", backgroundColor: \"white\", color: \"black\" }}>\n            <Menu\n              style={{ backgroundColor: \"white\", color: \"black\", borderBottom: '0' }}\n              mode=\"horizontal\"\n              theme='dark'\n              selectedKeys={[current]}\n              onClick={onClick}\n              className=\"sideMenu\"\n            >\n              <Menu.Item key=\"home\">\n                <Link to=\"/\">Home</Link>\n              </Menu.Item>\n              <SubMenu className='cool-menu' title=\"Courses\" key=\"Courses\">\n                <Menu.Item>\n                  JEE\n                </Menu.Item>\n              </SubMenu>\n              <Menu.Item key=\"faq\">\n                <Link to=\"/faq\">FAQ</Link>\n              </Menu.Item>\n              <Menu.Item key=\"about\">\n                <Link to=\"/about\">About Us</Link>\n              </Menu.Item>\n              <Menu.Item key=\"contact\">\n                <Link to=\"/contact\">Contact Us</Link>\n              </Menu.Item>\n            </Menu>\n          </Col>\n          <Col lg={4} xs={0} style={{ height: \"100%\" }}>\n            {userContext.user != null ? (\n              <Dropdown\n                overlay={\n                  <Menu\n                    style={{ backgroundColor: \"white\", color: \"black\" }}\n                    theme=\"dark\"\n                    onClick={onClick}\n                  >\n                    <Menu.Item key=\"dashboard\">\n                      <Link style={{ color: \"black\" }} to=\"/dashboard\">\n                        Dashboard\n                          </Link>\n                    </Menu.Item>\n                    <Menu.Item\n                      key=\"logout\"\n                      onClick={() => {\n                        userContext.logout();\n                      }}\n                    >\n                      <Link style={{ color: \"black\" }} to=\"/\">\n                        Logout\n                          </Link>\n                    </Menu.Item>\n                  </Menu>\n                }\n              >\n                <Button\n                  style={{\n                    backgroundColor: \"white\",\n                    border: \"0\",\n                    height: \"100%\",\n                  }}\n                >\n                  <Avatar icon={<img alt='user' style={{ margin: '10% 0 30% 0' }} src=\"https://img.icons8.com/fluent-systems-filled/96/000000/user.png\" />} size={50} />\n                </Button>\n              </Dropdown>\n            ) : (\n              <Button type=\"primary\" size=\"large\">\n                <Link to=\"/login\">TAKE A TEST</Link>\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Header>\n    </Layout>\n  )\n}\n\nconst DashboardHeader: React.FC = () => {\n  const userContext = useContext(UserContext);\n  const [current, setCurrent] = useState(\"Home\");\n  const onClick = (e: any) => {\n    setCurrent(e.key);\n  };\n  const onClickLogo = () => {\n    setCurrent(\"Home\");\n  };\n  return (\n    <Layout>\n      <Header style={{ backgroundColor: \"white\", padding: 0 }}>\n        <Row style={{ height: \"100%\" }}>\n          <Col lg={2}>\n            <Link to=\"/\" onClick={onClickLogo}>\n              <img alt=\"logo\" src=\"https://i.imgur.com/Nki0mn9.jpg\" style={{ width: \"57%\" }} />\n            </Link>\n          </Col>\n          <Col lg={2} md={4} sm={4} xs={8} style={{ height: \"100%\" }} />\n          <Col lg={16} xs={14} />\n          <Col lg={4} xs={0} style={{ height: \"100%\" }}>\n            {userContext.user != null ? (\n              <Dropdown\n                overlay={\n                  <Menu\n                    style={{ backgroundColor: \"white\", color: \"black\" }}\n                    theme=\"dark\"\n                    onClick={onClick}\n                  >\n                    <Menu.Item key=\"home\">\n                      <Link style={{ color: \"black\" }} to=\"/\">\n                        Home\n                      </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"dashboard\">\n                      <Link style={{ color: \"black\" }} to=\"/dashboard\">\n                        Dashboard\n                      </Link>\n                    </Menu.Item>\n                    <Menu.Item\n                      key=\"logout\"\n                      onClick={() => {\n                        userContext.logout();\n                      }}\n                    >\n                      <Link style={{ color: \"black\" }} to=\"/\">\n                        Logout\n                          </Link>\n                    </Menu.Item>\n                  </Menu>\n                }\n              >\n                <Button\n                  style={{\n                    backgroundColor: \"white\",\n                    border: \"0\",\n                    height: \"100%\",\n                  }}\n                >\n                  <Avatar icon={<img alt='user' style={{ margin: '10% 0 30% 0' }} src=\"https://img.icons8.com/fluent-systems-filled/96/000000/user.png\" />} size={50} />\n                </Button>\n              </Dropdown>\n            ) : (\n              <Button type=\"primary\" size=\"large\">\n                <Link to=\"/login\">TAKE A TEST</Link>\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Header>\n    </Layout>\n  )\n}\nconst TestHeader: React.FC = () => {\n  const userContext = useContext(UserContext)\n  return (\n    <Layout>\n      <Header style={{ backgroundColor: \"white\", padding: 0 }}>\n        <Row style={{ height: \"100%\" }}>\n          <Col lg={2}>\n            <Link to='/'>\n              <img alt=\"logo\" src=\"https://i.imgur.com/Nki0mn9.jpg\" style={{ width: \"57%\" }} />\n            </Link>\n          </Col>\n          <Col lg={2} md={4} sm={4} xs={8} style={{ height: \"100%\" }}>\n            <h1 style={{ color: 'black' }}>JEE Mains 2019</h1>\n          </Col>\n          <Col lg={16} xs={14} />\n          <Col lg={4}>{userContext.user && <h2 style={{ color: 'black' }}>Student Name: {userContext.user.name}</h2>}</Col>\n        </Row>\n      </Header>\n    </Layout>\n  )\n}\nexport const Navbar: React.FC = () => {\n  const location = useLocation();\n  const renderSwitch = () => {\n    switch (location.pathname.split(\"/\")[1]) {\n      case 'dashboard':\n        return <DashboardHeader />\n      case 'test':\n        return <TestHeader />\n      case 'submitted':\n        return null\n      default:\n        return <StaticHeader />\n    }\n  }\n  return (\n    <>\n      {renderSwitch()}\n    </>\n  );\n};\n","/workspace/frontend/src/components/Dashboard/Tests/TestTypeModal.tsx",[],"/workspace/frontend/src/components/Dashboard/Profile/Profile.tsx",[],"/workspace/frontend/src/components/Footer.tsx",["201"],"/workspace/frontend/src/reportWebVitals.ts",[],"/workspace/frontend/src/views/HomePage/Courses.tsx",[],{"ruleId":"202","severity":1,"message":"203","line":18,"column":6,"nodeType":"204","endLine":18,"endColumn":8,"suggestions":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"206","replacedBy":"210"},{"ruleId":"208","replacedBy":"211"},{"ruleId":"206","replacedBy":"212"},{"ruleId":"208","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":12,"column":11,"nodeType":"216","messageId":"217","endLine":12,"endColumn":28},{"ruleId":"202","severity":1,"message":"218","line":52,"column":6,"nodeType":"204","endLine":52,"endColumn":15,"suggestions":"219"},{"ruleId":"214","severity":1,"message":"220","line":220,"column":17,"nodeType":"216","messageId":"217","endLine":220,"endColumn":20},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"214","severity":1,"message":"221","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":15},{"ruleId":"214","severity":1,"message":"222","line":3,"column":17,"nodeType":"216","messageId":"217","endLine":3,"endColumn":23},{"ruleId":"214","severity":1,"message":"223","line":5,"column":10,"nodeType":"216","messageId":"217","endLine":5,"endColumn":18},{"ruleId":"206","replacedBy":"212"},{"ruleId":"208","replacedBy":"213"},{"ruleId":"206","replacedBy":"224"},{"ruleId":"208","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":27},{"ruleId":"206","replacedBy":"228"},{"ruleId":"208","replacedBy":"229"},{"ruleId":"206","replacedBy":"230"},{"ruleId":"208","replacedBy":"231"},{"ruleId":"214","severity":1,"message":"232","line":25,"column":7,"nodeType":"216","messageId":"217","endLine":25,"endColumn":12},{"ruleId":"214","severity":1,"message":"233","line":36,"column":7,"nodeType":"216","messageId":"217","endLine":36,"endColumn":11},{"ruleId":"206","replacedBy":"234"},{"ruleId":"208","replacedBy":"235"},{"ruleId":"206","replacedBy":"236"},{"ruleId":"208","replacedBy":"237"},{"ruleId":"214","severity":1,"message":"238","line":1,"column":10,"nodeType":"216","messageId":"217","endLine":1,"endColumn":15},{"ruleId":"214","severity":1,"message":"239","line":1,"column":22,"nodeType":"216","messageId":"217","endLine":1,"endColumn":25},{"ruleId":"214","severity":1,"message":"240","line":1,"column":27,"nodeType":"216","messageId":"217","endLine":1,"endColumn":43},{"ruleId":"214","severity":1,"message":"232","line":25,"column":9,"nodeType":"216","messageId":"217","endLine":25,"endColumn":14},{"ruleId":"214","severity":1,"message":"241","line":26,"column":11,"nodeType":"216","messageId":"217","endLine":26,"endColumn":21},{"ruleId":"214","severity":1,"message":"242","line":32,"column":11,"nodeType":"216","messageId":"217","endLine":32,"endColumn":30},{"ruleId":"214","severity":1,"message":"233","line":36,"column":9,"nodeType":"216","messageId":"217","endLine":36,"endColumn":13},{"ruleId":"206","replacedBy":"243"},{"ruleId":"208","replacedBy":"244"},{"ruleId":"214","severity":1,"message":"245","line":5,"column":9,"nodeType":"216","messageId":"217","endLine":5,"endColumn":15},{"ruleId":"214","severity":1,"message":"246","line":107,"column":10,"nodeType":"216","messageId":"217","endLine":107,"endColumn":17},{"ruleId":"214","severity":1,"message":"247","line":1,"column":20,"nodeType":"216","messageId":"217","endLine":1,"endColumn":25},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userContext'. Either include it or remove the dependency array.","ArrayExpression",["248"],"no-native-reassign",["249"],"no-negated-in-lhs",["250"],["249"],["250"],["249"],["250"],"@typescript-eslint/no-unused-vars","'QuestionInterface' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'response'. Either include it or remove the dependency array.",["251"],"'key' is assigned a value but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'BlogPage' is defined but never used.",["249"],["250"],"no-unused-vars","'useContext' is defined but never used.",["249"],["250"],["249"],["250"],"'Latex' is assigned a value but never used.","'temp' is assigned a value but never used.",["249"],["250"],["249"],["250"],"'Radio' is defined but never used.","'Col' is defined but never used.","'RadioChangeEvent' is defined but never used.","'radioStyle' is assigned a value but never used.","'radioContainerStyle' is assigned a value but never used.",["249"],["250"],"'Option' is assigned a value but never used.","'current' is assigned a value but never used.","'Input' is defined but never used.",{"desc":"252","fix":"253"},"no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},"Update the dependencies array to be: [userContext]",{"range":"256","text":"257"},"Update the dependencies array to be: [answers, response]",{"range":"258","text":"259"},[563,565],"[userContext]",[2000,2009],"[answers, response]"]