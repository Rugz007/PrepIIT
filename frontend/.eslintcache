[{"/workspace/frontend/src/index.tsx":"1","/workspace/frontend/src/views/Auth/Login.tsx":"2","/workspace/frontend/src/views/HomePage/About.tsx":"3","/workspace/frontend/src/components/Dashboard/EForms/EFormSettings.tsx":"4","/workspace/frontend/src/components/Dashboard/Questions/QuestionBank.tsx":"5","/workspace/frontend/src/components/Blog/BlogListItem.tsx":"6","/workspace/frontend/src/components/Test/TestCard.tsx":"7","/workspace/frontend/src/views/Test/TestsPage.tsx":"8","/workspace/frontend/src/components/Navbar.tsx":"9","/workspace/frontend/src/reportWebVitals.ts":"10","/workspace/frontend/src/views/Auth/Register.tsx":"11","/workspace/frontend/src/views/HomePage/FAQ.tsx":"12","/workspace/frontend/src/components/Dashboard/Blogs/BlogsTable.tsx":"13","/workspace/frontend/src/components/Dashboard/EForms/EFormModal.tsx":"14","/workspace/frontend/src/views/Blog/BlogPage.tsx":"15","/workspace/frontend/src/views/HomePage/Courses.tsx":"16","/workspace/frontend/src/components/Dashboard/Tests/TestTypeModal.tsx":"17","/workspace/frontend/src/components/Dashboard/Blogs/CreateBlog.tsx":"18","/workspace/frontend/src/components/Dashboard/Questions/DifficultyLevel.js":"19","/workspace/frontend/src/views/HomePage/Contact.tsx":"20","/workspace/frontend/src/components/Dashboard/Questions/AddQuestionPage.tsx":"21","/workspace/frontend/src/components/Dashboard/Profile/Profile.tsx":"22","/workspace/frontend/src/views/Dashboard/Dashboard.tsx":"23","/workspace/frontend/src/views/Blog/BlogList.tsx":"24","/workspace/frontend/src/views/HomePage/HomePage.tsx":"25","/workspace/frontend/src/components/Dashboard/Questions/ReportedQuestions.tsx":"26","/workspace/frontend/src/components/Errors/Error400.tsx":"27","/workspace/frontend/src/components/Dashboard/EForms/EForms.tsx":"28","/workspace/frontend/src/components/Test/TestDetails.tsx":"29","/workspace/frontend/src/components/Dashboard/Questions/QuestionModal.tsx":"30","/workspace/frontend/src/components/Dashboard/Questions/AddQuestion.tsx":"31","/workspace/frontend/src/components/Test/TestIntruction.tsx":"32","/workspace/frontend/src/App.tsx":"33","/workspace/frontend/src/routes.js":"34","/workspace/frontend/src/context/User/UserState.tsx":"35","/workspace/frontend/src/views/Test/Test.tsx":"36","/workspace/frontend/src/views/HomePage/CourseData.js":"37","/workspace/frontend/src/components/Dashboard/Questions/UploadQuestions.tsx":"38","/workspace/frontend/src/components/Analysis/SubjectAnalysis.tsx":"39","/workspace/frontend/src/views/Analysis/TestAnalysis.tsx":"40","/workspace/frontend/src/context/User/UserContext.tsx":"41","/workspace/frontend/src/context/User/UserReducer.tsx":"42","/workspace/frontend/src/components/Dashboard/EForms/EFormsAnalysis.tsx":"43","/workspace/frontend/src/components/Dashboard/Tests/TestTypes.tsx":"44","/workspace/frontend/src/components/Test/QuestionComponent.tsx":"45","/workspace/frontend/src/components/Errors/Error404.tsx":"46","/workspace/frontend/src/components/HomePage/EnquiryForm.tsx":"47","/workspace/frontend/src/components/Footer.tsx":"48","/workspace/frontend/src/context/User/type.js":"49"},{"size":605,"mtime":1613446567358,"results":"50","hashOfConfig":"51"},{"size":3113,"mtime":1615695265021,"results":"52","hashOfConfig":"51"},{"size":5368,"mtime":1615695265021,"results":"53","hashOfConfig":"51"},{"size":927,"mtime":1613446567314,"results":"54","hashOfConfig":"51"},{"size":4156,"mtime":1615448717589,"results":"55","hashOfConfig":"51"},{"size":630,"mtime":1613446567298,"results":"56","hashOfConfig":"51"},{"size":1412,"mtime":1615976410048,"results":"57","hashOfConfig":"51"},{"size":1973,"mtime":1615976410048,"results":"58","hashOfConfig":"51"},{"size":4039,"mtime":1615976410048,"results":"59","hashOfConfig":"51"},{"size":440,"mtime":1613446567358,"results":"60","hashOfConfig":"51"},{"size":5850,"mtime":1615450345256,"results":"61","hashOfConfig":"51"},{"size":8404,"mtime":1615450346484,"results":"62","hashOfConfig":"51"},{"size":1459,"mtime":1615448717585,"results":"63","hashOfConfig":"51"},{"size":1818,"mtime":1615448717589,"results":"64","hashOfConfig":"51"},{"size":5558,"mtime":1613446567398,"results":"65","hashOfConfig":"51"},{"size":8742,"mtime":1615450339844,"results":"66","hashOfConfig":"51"},{"size":5607,"mtime":1615976410048,"results":"67","hashOfConfig":"51"},{"size":1566,"mtime":1614962687762,"results":"68","hashOfConfig":"51"},{"size":223,"mtime":1614962687762,"results":"69","hashOfConfig":"51"},{"size":1998,"mtime":1615695265021,"results":"70","hashOfConfig":"51"},{"size":588,"mtime":1613800597575,"results":"71","hashOfConfig":"51"},{"size":3300,"mtime":1615610531929,"results":"72","hashOfConfig":"51"},{"size":5086,"mtime":1615456667184,"results":"73","hashOfConfig":"51"},{"size":2168,"mtime":1613446567398,"results":"74","hashOfConfig":"51"},{"size":3472,"mtime":1615695265025,"results":"75","hashOfConfig":"51"},{"size":3091,"mtime":1615610026777,"results":"76","hashOfConfig":"51"},{"size":395,"mtime":1613800597575,"results":"77","hashOfConfig":"51"},{"size":2809,"mtime":1615011568240,"results":"78","hashOfConfig":"51"},{"size":2504,"mtime":1616955054588,"results":"79","hashOfConfig":"51"},{"size":6578,"mtime":1615976410020,"results":"80","hashOfConfig":"51"},{"size":2834,"mtime":1615448717589,"results":"81","hashOfConfig":"51"},{"size":3784,"mtime":1616508733526,"results":"82","hashOfConfig":"51"},{"size":777,"mtime":1614962687758,"results":"83","hashOfConfig":"51"},{"size":1987,"mtime":1615976410048,"results":"84","hashOfConfig":"51"},{"size":2657,"mtime":1614970635879,"results":"85","hashOfConfig":"51"},{"size":6631,"mtime":1617102752713,"results":"86","hashOfConfig":"51"},{"size":1006,"mtime":1613446567398,"results":"87","hashOfConfig":"51"},{"size":1326,"mtime":1614970652603,"results":"88","hashOfConfig":"51"},{"size":2556,"mtime":1615883566286,"results":"89","hashOfConfig":"51"},{"size":6463,"mtime":1615886610058,"results":"90","hashOfConfig":"51"},{"size":158,"mtime":1613446567358,"results":"91","hashOfConfig":"51"},{"size":1396,"mtime":1613446567358,"results":"92","hashOfConfig":"51"},{"size":299,"mtime":1613446567314,"results":"93","hashOfConfig":"51"},{"size":2155,"mtime":1615448717589,"results":"94","hashOfConfig":"51"},{"size":1943,"mtime":1617102844240,"results":"95","hashOfConfig":"51"},{"size":408,"mtime":1613800597579,"results":"96","hashOfConfig":"51"},{"size":3441,"mtime":1614970643503,"results":"97","hashOfConfig":"51"},{"size":3221,"mtime":1613446567354,"results":"98","hashOfConfig":"51"},{"size":511,"mtime":1613446567358,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1b3atdm",{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"129"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"102"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/workspace/frontend/src/index.tsx",[],["215","216"],"/workspace/frontend/src/views/Auth/Login.tsx",["217","218","219"],"/workspace/frontend/src/views/HomePage/About.tsx",[],"/workspace/frontend/src/components/Dashboard/EForms/EFormSettings.tsx",[],["220","221"],"/workspace/frontend/src/components/Dashboard/Questions/QuestionBank.tsx",[],"/workspace/frontend/src/components/Blog/BlogListItem.tsx",[],"/workspace/frontend/src/components/Test/TestCard.tsx",["222"],"/workspace/frontend/src/views/Test/TestsPage.tsx",["223"],"/workspace/frontend/src/components/Navbar.tsx",[],["224","225"],"/workspace/frontend/src/reportWebVitals.ts",[],"/workspace/frontend/src/views/Auth/Register.tsx",["226"],"import Layout, { Content } from \"antd/lib/layout/layout\";\r\nimport React, { useContext } from \"react\";\r\nimport { Row, Col, Form, Input, Card, Divider, Button, Select } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  KeyOutlined,\r\n  MailOutlined,\r\n  PhoneOutlined,\r\n  HomeOutlined,\r\n  AccountBookOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../../context/User/UserContext\";\r\nconst { Option } = Select;\r\ninterface RegisterInterface {\r\n  name: string;\r\n  email: string;\r\n  phone_no: string;\r\n  address: string;\r\n  standard: string;\r\n  password: string;\r\n  confirmPassword?: string;\r\n}\r\n\r\nexport const Register: React.FC = () => {\r\n  let history = useHistory();\r\n\r\n  const userContext = useContext(UserContext);\r\n  const onFinish = (values: RegisterInterface) => {\r\n    delete values.confirmPassword;\r\n    userContext.register(values);\r\n    history.push(\"/login\");\r\n  };\r\n  return (\r\n    <Layout>\r\n      <Content style={{ backgroundColor: \"#1c2229\", paddingBottom: \"4%\" }}>\r\n        <Row>\r\n          <Col span={4} />\r\n          <Col span={16} style={{ padding: \".4%\", paddingTop: \"1%\" }}>\r\n            <Card\r\n              style={{ height: \"100%\", borderRadius: \"17px\", margin: \"0% 30%\" }}\r\n            >\r\n              <img\r\n                src=\"logo-nobg.png\"\r\n                alt=\"logo\"\r\n                style={{ width: \"46%\", margin: \"auto\" }}\r\n              />\r\n              <h1 style={{ fontSize: \"25px\", marginBottom: \"0\" }}>\r\n                Create new account\r\n              </h1>\r\n              <Divider />\r\n              <Form\r\n                name=\"register\"\r\n                onFinish={onFinish}\r\n                scrollToFirstError\r\n                style={{ textAlign: \"left\" }}\r\n              >\r\n                <Form.Item name=\"name\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<UserOutlined />}\r\n                    placeholder={\"Enter your name.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"email\"\r\n                  rules={[\r\n                    {\r\n                      type: \"email\",\r\n                      message: \"The input is not valid E-mail!\",\r\n                    },\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your E-mail!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<MailOutlined />}\r\n                    placeholder={\"Enter your Email ID.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item name=\"phone_no\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<PhoneOutlined />}\r\n                    placeholder={\"Enter your phone number.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item name=\"address\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<HomeOutlined />}\r\n                    placeholder={\"Enter your Address.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item name=\"class\">\r\n                  <Select placeholder={\"Select your class.\"}>\r\n                    <Option value=\"VII\">VII</Option>\r\n                    <Option value=\"VIII\">VIII</Option>\r\n                    <Option value=\"IX\">IX</Option>\r\n                    <Option value=\"X\">X</Option>\r\n                    <Option value=\"XI\">XI</Option>\r\n                    <Option value=\"XII\">XII</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"password\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your password!\",\r\n                    },\r\n                  ]}\r\n                  hasFeedback\r\n                >\r\n                  <Input.Password\r\n                    size=\"large\"\r\n                    prefix={<KeyOutlined />}\r\n                    placeholder={\"Enter your Password.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"confirmPassword\"\r\n                  hasFeedback\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please confirm your password!\",\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        if (!value || getFieldValue(\"password\") === value) {\r\n                          return Promise.resolve();\r\n                        }\r\n\r\n                        return Promise.reject(\r\n                          \"The two passwords that you entered do not match!\"\r\n                        );\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    size=\"large\"\r\n                    prefix={<KeyOutlined />}\r\n                    placeholder={\"Re-enter your Password.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    size=\"large\"\r\n                    style={{ width: \"100%\", margin: \"auto\" }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n              <Divider />\r\n              <p>\r\n                Already have an account? <Link to=\"/login\">Login</Link>\r\n              </p>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col span={4} />\r\n        </Row>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n",["227","228"],"/workspace/frontend/src/views/HomePage/FAQ.tsx",[],["229","230"],"/workspace/frontend/src/components/Dashboard/Blogs/BlogsTable.tsx",[],"/workspace/frontend/src/components/Dashboard/EForms/EFormModal.tsx",[],"/workspace/frontend/src/views/Blog/BlogPage.tsx",[],"/workspace/frontend/src/views/HomePage/Courses.tsx",[],"/workspace/frontend/src/components/Dashboard/Tests/TestTypeModal.tsx",[],"/workspace/frontend/src/components/Dashboard/Blogs/CreateBlog.tsx",[],["231","232"],"/workspace/frontend/src/components/Dashboard/Questions/DifficultyLevel.js",[],"/workspace/frontend/src/views/HomePage/Contact.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/AddQuestionPage.tsx",[],"/workspace/frontend/src/components/Dashboard/Profile/Profile.tsx",["233","234"],"/workspace/frontend/src/views/Dashboard/Dashboard.tsx",[],"/workspace/frontend/src/views/Blog/BlogList.tsx",["235","236","237"],"/workspace/frontend/src/views/HomePage/HomePage.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/ReportedQuestions.tsx",[],["238","239"],"/workspace/frontend/src/components/Errors/Error400.tsx",[],"/workspace/frontend/src/components/Dashboard/EForms/EForms.tsx",["240"],"import { Card, Table, Button, Popover, Popconfirm } from \"antd\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { EFormModal } from \"./EFormModal\";\r\nimport env from \"react-dotenv\";\r\n\r\ninterface EFormInterface {\r\n  name: string;\r\n  email: string;\r\n  number: string;\r\n  standard: string;\r\n  type: string;\r\n  enqid: Number;\r\n}\r\n\r\n\r\n\r\nexport const EForms: React.FC = () => {\r\n  const [forms, setForms] = useState<EFormInterface[] | undefined>([]);\r\n  useEffect(() => {\r\n    fetchForms();\r\n  }, []);\r\n\r\n\r\n  const fetchForms = async () => {\r\n    try {\r\n      const res = await axios.get(`https://${env.NODEJS_URL}/admin/enquiry`, {\r\n        headers: {\r\n          authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      setForms(res.data);\r\n    } catch (e) {\r\n      console.log(\"Forms not loaded!\");\r\n    }\r\n  };\r\n  const deleteEnquiry = async (\r\n    enqid: Number,\r\n    forms: any[] | undefined,\r\n    setForms: React.Dispatch<React.SetStateAction<EFormInterface[] | undefined>>\r\n  ) => {\r\n    try {\r\n      const response = await axios({\r\n        method: \"DELETE\",\r\n        url: `https://${env.NODEJS_URL}/admin/enquiry`,\r\n        headers: {\r\n          authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n        },\r\n        data: {\r\n          enqid: enqid,\r\n        },\r\n      });\r\n      console.log(response);\r\n      if (forms) {\r\n        const newState = forms.filter(\r\n          (item: { enqid: Number }) => item.enqid !== enqid\r\n        );\r\n        setForms(newState);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"Class\",\r\n      dataIndex: \"standard\",\r\n      key: \"standard\",\r\n    },\r\n    {\r\n      title: \"Type\",\r\n      dataIndex: \"type\",\r\n      key: \"type\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"\",\r\n      key: \"action\",\r\n      render: (text: any, record: EFormInterface) => (\r\n        <>\r\n          <EFormModal EForm={record} />\r\n          <Popconfirm\r\n            title=\"Are you sure you want to delete this question?\"\r\n            onConfirm={() => deleteEnquiry(record.enqid, forms, setForms)}>\r\n            <Button\r\n\r\n              type=\"primary\"\r\n              danger\r\n            >\r\n              Delete\r\n          </Button>\r\n          </Popconfirm>\r\n\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <div style={{ textAlign: \"left\" }}>\r\n      <h1 style={{ fontSize: \"40px\" }}>Enquiry Forms</h1>\r\n      <Card style={{ textAlign: \"left\", borderRadius: \"10px\" }}>\r\n        <h1 style={{ fontSize: \"30px\" }}>View Latest Enquiry Forms</h1>\r\n        <Table columns={columns} dataSource={forms} style={{ width: \"100%\" }} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","/workspace/frontend/src/components/Test/TestDetails.tsx",[],["241","242"],"/workspace/frontend/src/components/Dashboard/Questions/QuestionModal.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/AddQuestion.tsx",["243"],"import { Card, Table, Button, Space, message } from \"antd\";\nimport React, { useState } from \"react\";\nimport { QuestionModal } from \"./QuestionModal\";\nimport axios from \"axios\";\nimport env from \"react-dotenv\";\ninterface QuestionInterface {\n  qid: number;\n  statement: string;\n  img_path?: string;\n  type: string;\n  subject: string;\n  topic: string;\n  subtopic?: string;\n  level: string;\n  archive?: string;\n  is_reported: boolean | undefined;\n}\nexport const AddQuestion: React.FC = () => {\n  const [questions, setQuestions] = useState<\n    Array<QuestionInterface> | undefined\n  >(undefined);\n  const uploadQuestions = async (values: QuestionInterface) => {\n    console.log(values);\n    try {\n      if (questions === undefined) {\n        setQuestions([values]);\n      } else {\n        setQuestions([...questions, values]);\n      }\n      const response = await axios.post(\n        `https://${env.NODEJS_URL}/admin/question`,\n        {\n          statement: values.statement,\n          img_path: values.img_path,\n          type: values.type,\n          subject: values.subject,\n          topic: values.topic,\n          subtopic: values.subtopic,\n          level: values.level,\n          archive: values.archive,\n          is_reported: values.is_reported,\n        },\n        {\n          headers: {\n            authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        }\n      );\n      \n      console.log(response);\n    } catch (e) {\n      console.log(\"Couldn't Update\");\n    }\n    message.success(\"Uploaded Questions\");\n  };\n  const columns = [\n    {\n      title: \"Statement\",\n      dataIndex: \"statement\",\n      key: \"statement\",\n    },\n    {\n      title: \"Subject\",\n      dataIndex: \"subject\",\n      key: \"subject\",\n    },\n    {\n      title: \"Topic\",\n      dataIndex: \"topic\",\n      key: \"topic\",\n    },\n    {\n      title: \"Type\",\n      dataIndex: \"type\",\n      key: \"type\",\n    },\n    {\n      title: \"Action\",\n      dataIndex: \"\",\n      key: \"action\",\n      render: (text: any, record: QuestionInterface) => (\n        <>\n          <QuestionModal\n            submitEdit={undefined}\n            submitNew={uploadQuestions}\n            Question={record}\n            buttonText=\"View Question\"\n          />\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <div style={{ textAlign: \"left\" }}>\n      <Card\n        style={{ textAlign: \"left\", borderRadius: \"10px\" }}\n        title={<h1 style={{ fontSize: \"30px\" }}>Questions to be added</h1>}\n        extra={\n          <Space>\n            <QuestionModal\n            submitNew={uploadQuestions}\n            submitEdit={undefined}\n            buttonText=\"Add Question\"\n          />\n          </Space>\n        }\n      >\n        <Table\n          columns={columns}\n          dataSource={questions}\n          style={{ width: \"100%\" }}\n        />\n      </Card>\n    </div>\n  );\n};\n",["244","245"],"/workspace/frontend/src/components/Test/TestIntruction.tsx",[],"/workspace/frontend/src/App.tsx",["246"],"import React, { useContext, useEffect } from \"react\";\r\nimport './App.less';\r\nimport \"antd/dist/antd.dark.css\";\r\nimport { Navbar } from './components/Navbar';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport AOS from \"aos\";\r\nimport 'aos/dist/aos.css';\r\nimport Routes from './routes';\r\nimport { Footer } from './components/Footer';\r\nimport UserContext from \"./context/User/UserContext\";\r\nAOS.init();\r\nfunction App() {\r\n  const userContext = useContext<any>(UserContext);\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      userContext.loadUser();\r\n    }\r\n  },[]);\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Navbar />\r\n        <Routes />\r\n        <Footer />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/workspace/frontend/src/routes.js",[],"/workspace/frontend/src/context/User/UserState.tsx",[],"/workspace/frontend/src/views/Test/Test.tsx",["247"],"import { Button, Card, Col, Popconfirm, Row, Tabs } from \"antd\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { QuestionComponent } from \"../../components/Test/QuestionComponent\";\r\nimport { TestDetails } from \"../../components/Test/TestDetails\";\r\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\r\nimport { TestIntruction } from \"../../components/Test/TestIntruction\";\r\nimport axios from \"axios\";\r\ninterface QuestionInterface {\r\n  qid: number;\r\n  statement: string;\r\n  img_path: string;\r\n  type: string;\r\n  archive: string;\r\n  latex: string;\r\n  options: string[];\r\n}\r\n// interface ResponseInterface {\r\n//     userTestId: string,\r\n//     subjects: string[],\r\n//     Physics: Array<QuestionInterface[]>,\r\n//     Chemistry: Array<QuestionInterface[]>,\r\n//     Maths: Array<QuestionInterface[]>,\r\n// }\r\n// interface AnswersInterface {\r\n//     questionID: number;\r\n//     answer: string | number | null;\r\n// };\r\n\r\nexport const Test: React.FC = () => {\r\n  const [readInstructions, setReadInstructions] = useState(false);\r\n  const [current, setCurrent] = useState<number>(1);\r\n  const [tab, setTab] = useState(\"Physics\");\r\n  const [response, setResponse]: any = useState(undefined);\r\n  const [answers, setAnswers]: any = useState(undefined);\r\n  useEffect(() => {\r\n    console.log(\"Hello world\");\r\n    localStorage.setItem(\"answers\", JSON.stringify(answers));\r\n  }, [answers]);\r\n  const getQuestions = () => {\r\n    axios({\r\n      method: \"POST\",\r\n      url: `http://localhost:3000/secure/test`,\r\n      headers: {\r\n        authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      },\r\n      data: {\r\n        typeid: 17,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setResponse(res.data);\r\n        let questionsMap: any = {};\r\n        res.data[\"subjects\"].map((subject: any) =>\r\n          res.data[subject].map(\r\n            (item: any, index: number) =>\r\n              (questionsMap[item[\"qid\"]] = [item[\"qid\"], [], \"\", undefined])\r\n          )\r\n        );\r\n        setAnswers(questionsMap);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  const onSelectAnswer = (e: any) => {\r\n    //TODO: Update Answers\r\n    var questionID = response[tab][current - 1][\"qid\"];\r\n    setAnswers({\r\n      ...answers,\r\n      [questionID]: [\r\n        response[tab][current - 1][\"qid\"],\r\n        [e.target.value],\r\n        \"15\",\r\n        \"Marked\",\r\n      ],\r\n    });\r\n  };\r\n  const onNext = () => {\r\n    if (current !== response[tab].length) {\r\n      var questionID = response[tab][current - 1][\"qid\"];\r\n      var temp = { ...answers };\r\n      if (temp[questionID][3] === undefined) {\r\n        temp[questionID][3] = \"Visited\";\r\n        setAnswers(temp);\r\n      }\r\n      setCurrent(current + 1);\r\n    }\r\n  };\r\n  const onPrevious = () => {\r\n    if (current !== 1) {\r\n      var questionID = response[tab][current - 1][\"qid\"];\r\n      var temp = { ...answers };\r\n      if (temp[questionID][3] === undefined) {\r\n        temp[questionID][3] = \"Visited\";\r\n        setAnswers(temp);\r\n      }\r\n      setCurrent(current - 1);\r\n    }\r\n  };\r\n  const onChangeTab = (e: any) => {\r\n    setTab(e);\r\n    setCurrent(1);\r\n  };\r\n  const readInstruct = () => {\r\n    setReadInstructions(true);\r\n    getQuestions();\r\n  };\r\n  const changeCurrent = (e: number) => {\r\n    var questionID = response[tab][current - 1][\"qid\"];\r\n    var temp = { ...answers };\r\n    temp[questionID][3] = \"Visited\";\r\n    setAnswers(temp);\r\n    setCurrent(e);\r\n  };\r\n  const markForReview = () => {\r\n    console.log(current);\r\n    var questionID = response[tab][current - 1][\"qid\"];\r\n    console.log(questionID);\r\n    var temp = { ...answers };\r\n    if (temp[questionID][3] === \"MarkedForReview\") {\r\n      if (temp[questionID][1][0] === undefined) {\r\n        temp[questionID][3] = \"Visited\";\r\n      } else {\r\n        temp[questionID][3] = \"Marked\";\r\n      }\r\n    } else {\r\n      temp[questionID][3] = \"MarkedForReview\";\r\n    }\r\n    setAnswers(temp);\r\n    onNext();\r\n  };\r\n  const onSubmit = () => {\r\n    ///TODO: onSubmitTest\r\n  };\r\n  return (\r\n    <div>\r\n      <Row style={{ height: \"2vh\" }}>TestBar</Row>\r\n      {readInstructions ? (\r\n        <Row style={{ padding: \"2%\" }}>\r\n          <Col span={18}>\r\n            <Row>\r\n              <Col span={2}>\r\n                <Button\r\n                  onClick={onPrevious}\r\n                  type=\"primary\"\r\n                  danger\r\n                  style={{ float: \"left\" }}\r\n                >\r\n                  Previous\r\n                </Button>\r\n              </Col>\r\n              <Col span={20}>\r\n                <Card style={{ width: \"100%\" }}> Time Remaining</Card>\r\n              </Col>\r\n              <Col span={2}>\r\n                {\" \"}\r\n                <Button\r\n                  onClick={onNext}\r\n                  type=\"primary\"\r\n                  style={{ float: \"right\" }}\r\n                >\r\n                  Next\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Card style={{ width: \"100%\", height: \"74vh\" }}>\r\n                <Tabs onChange={onChangeTab}>\r\n                  {response &&\r\n                    response[\"subjects\"].map((e: string, index: any) => (\r\n                      <Tabs.TabPane tab={e} key={e}>\r\n                        <QuestionComponent\r\n                          onSelect={onSelectAnswer}\r\n                          question={response[e][current - 1]}\r\n                        />\r\n                      </Tabs.TabPane>\r\n                    ))}\r\n                </Tabs>\r\n              </Card>\r\n            </Row>\r\n          </Col>\r\n          <Col span={6}>\r\n            <Card style={{ margin: \"0 6%\" }}>\r\n              {response !== undefined && answers !== undefined && (\r\n                <TestDetails\r\n                  questions={response[tab]}\r\n                  setCurrentFunction={changeCurrent}\r\n                  current={current}\r\n                  answers={answers}\r\n                />\r\n              )}\r\n              <Button onClick={markForReview}>Mark For Review</Button>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to submit your test?\"\r\n                onConfirm={onSubmit}\r\n                okText=\"Yes\"\r\n                cancelText=\"No\"\r\n                icon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\r\n              >\r\n                <Button style={{ width: \"100%\" }} type=\"primary\">\r\n                  {\" \"}\r\n                  Submit Test\r\n                </Button>\r\n              </Popconfirm>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      ) : (\r\n        <TestIntruction readInstruct={readInstruct} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","/workspace/frontend/src/views/HomePage/CourseData.js",[],"/workspace/frontend/src/components/Dashboard/Questions/UploadQuestions.tsx",[],"/workspace/frontend/src/components/Analysis/SubjectAnalysis.tsx",[],["248","249"],"/workspace/frontend/src/views/Analysis/TestAnalysis.tsx",[],"/workspace/frontend/src/context/User/UserContext.tsx",[],"/workspace/frontend/src/context/User/UserReducer.tsx",[],"/workspace/frontend/src/components/Dashboard/EForms/EFormsAnalysis.tsx",[],"/workspace/frontend/src/components/Dashboard/Tests/TestTypes.tsx",["250","251"],"import { Card, Table, Button, Space, message } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { TestTypeModal } from \"./TestTypeModal\";\n\ninterface TestTypeInterface {\n  Test?: {\n      testTypeID: number,\n      testname: string,\n      subjectsallowed: string[],\n      types: Array<{\n          type:string,\n          correct:number,\n          wrong:number,\n          nullanswer:number,\n          number:number,\n      }>,\n  }\n}\n\nexport const TestTypes: React.FC = () => {\n  const [testDetails, setTestDetails] = useState<\n    TestTypeInterface[] | undefined\n  >([]);\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"testname\",\n      key: \"testname\",\n    },\n    {\n      title: \"Class\",\n      dataIndex: \"standard\",\n      key: \"standard\",\n    },\n    {\n      title: \"Type\",\n      dataIndex: \"type\",\n      key: \"type\",\n    },\n    {\n      title: \"Action\",\n      dataIndex: \"\",\n      key: \"action\",\n      render: (text: any, record :any) => (\n        <>\n          <TestTypeModal Test={record} buttonText=\"View Test Type\"/>\n          <Button\n            type=\"primary\"\n            danger\n          >\n            Delete\n          </Button>\n        </>\n      ),\n    },\n  ];\n  useEffect(() => {\n    fetchTestDetails();\n  }, [])\n  const fetchTestDetails = async () => {\n    try {\n      const response = await axios.get(\"https://localhost:3000/admin/testtype\", {\n        headers: {'Authorization':\"Bearer \" + localStorage.getItem(\"token\")},\n      });\n      setTestDetails(response.data);\n      console.log(testDetails);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  return (\n    <div style={{ textAlign: \"left\" }}>\n      <h1 style={{ fontSize: \"40px\" }}>Static Tests</h1>\n\n      <Card\n        style={{ textAlign: \"left\", borderRadius: \"10px\" }}\n        title={<h1 style={{ fontSize: \"30px\" }}>Test Types</h1>}\n        extra={\n          <Space>\n            <TestTypeModal buttonText=\"Add Test Type\"/>\n          </Space>\n        }\n      >\n        <Table\n          columns={columns}\n          dataSource={testDetails}\n          style={{ width: \"100%\" }}\n        />\n      </Card>\n    </div>\n  );\n};\n",["252","253"],"/workspace/frontend/src/components/Test/QuestionComponent.tsx",["254","255"],"/workspace/frontend/src/components/Errors/Error404.tsx",[],"/workspace/frontend/src/components/HomePage/EnquiryForm.tsx",[],"/workspace/frontend/src/components/Footer.tsx",[],"/workspace/frontend/src/context/User/type.js",[],{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","severity":1,"message":"261","line":2,"column":29,"nodeType":"262","messageId":"263","endLine":2,"endColumn":37},{"ruleId":"260","severity":1,"message":"264","line":6,"column":8,"nodeType":"262","messageId":"263","endLine":6,"endColumn":13},{"ruleId":"265","severity":1,"message":"266","line":82,"column":15,"nodeType":"267","endLine":82,"endColumn":18},{"ruleId":"256","replacedBy":"268"},{"ruleId":"258","replacedBy":"269"},{"ruleId":"260","severity":1,"message":"261","line":2,"column":17,"nodeType":"262","messageId":"263","endLine":2,"endColumn":25},{"ruleId":"260","severity":1,"message":"270","line":1,"column":26,"nodeType":"262","messageId":"263","endLine":1,"endColumn":33},{"ruleId":"256","replacedBy":"271"},{"ruleId":"258","replacedBy":"272"},{"ruleId":"260","severity":1,"message":"273","line":10,"column":3,"nodeType":"262","messageId":"263","endLine":10,"endColumn":22},{"ruleId":"256","replacedBy":"274"},{"ruleId":"258","replacedBy":"275"},{"ruleId":"256","replacedBy":"276"},{"ruleId":"258","replacedBy":"277"},{"ruleId":"256","replacedBy":"278"},{"ruleId":"258","replacedBy":"279"},{"ruleId":"260","severity":1,"message":"280","line":1,"column":34,"nodeType":"262","messageId":"263","endLine":1,"endColumn":46},{"ruleId":"260","severity":1,"message":"281","line":1,"column":65,"nodeType":"262","messageId":"263","endLine":1,"endColumn":72},{"ruleId":"260","severity":1,"message":"282","line":3,"column":10,"nodeType":"262","messageId":"263","endLine":3,"endColumn":15},{"ruleId":"260","severity":1,"message":"283","line":3,"column":17,"nodeType":"262","messageId":"263","endLine":3,"endColumn":23},{"ruleId":"260","severity":1,"message":"284","line":5,"column":10,"nodeType":"262","messageId":"263","endLine":5,"endColumn":18},{"ruleId":"256","replacedBy":"285"},{"ruleId":"258","replacedBy":"286"},{"ruleId":"260","severity":1,"message":"287","line":1,"column":31,"nodeType":"262","messageId":"263","endLine":1,"endColumn":38},{"ruleId":"256","replacedBy":"288"},{"ruleId":"258","replacedBy":"289"},{"ruleId":"260","severity":1,"message":"290","line":1,"column":23,"nodeType":"262","messageId":"263","endLine":1,"endColumn":29},{"ruleId":"256","replacedBy":"291"},{"ruleId":"258","replacedBy":"292"},{"ruleId":"293","severity":1,"message":"294","line":18,"column":5,"nodeType":"295","endLine":18,"endColumn":7,"suggestions":"296"},{"ruleId":"260","severity":1,"message":"297","line":8,"column":11,"nodeType":"262","messageId":"263","endLine":8,"endColumn":28},{"ruleId":"256","replacedBy":"298"},{"ruleId":"258","replacedBy":"299"},{"ruleId":"260","severity":1,"message":"300","line":1,"column":38,"nodeType":"262","messageId":"263","endLine":1,"endColumn":45},{"ruleId":"293","severity":1,"message":"301","line":60,"column":6,"nodeType":"295","endLine":60,"endColumn":8,"suggestions":"302"},{"ruleId":"256","replacedBy":"303"},{"ruleId":"258","replacedBy":"304"},{"ruleId":"260","severity":1,"message":"305","line":23,"column":7,"nodeType":"262","messageId":"263","endLine":23,"endColumn":12},{"ruleId":"260","severity":1,"message":"306","line":34,"column":7,"nodeType":"262","messageId":"263","endLine":34,"endColumn":11},"no-native-reassign",["307"],"no-negated-in-lhs",["308"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["307"],["308"],"'Divider' is defined but never used.",["307"],["308"],"'AccountBookOutlined' is defined but never used.",["307"],["308"],["307"],["308"],["307"],["308"],"'Descriptions' is defined but never used.","'Tooltip' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'BlogPage' is defined but never used.",["307"],["308"],"'Popover' is defined but never used.",["307"],["308"],"'Button' is defined but never used.",["307"],["308"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userContext'. Either include it or remove the dependency array.","ArrayExpression",["309"],"'QuestionInterface' is defined but never used.",["307"],["308"],"'message' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchTestDetails'. Either include it or remove the dependency array.",["310"],["307"],["308"],"'Latex' is assigned a value but never used.","'temp' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},"Update the dependencies array to be: [userContext]",{"range":"315","text":"316"},"Update the dependencies array to be: [fetchTestDetails]",{"range":"317","text":"318"},[595,597],"[userContext]",[1279,1281],"[fetchTestDetails]"]