[{"/workspace/frontend/src/components/HomePage/EnquiryForm.tsx":"1","/workspace/frontend/src/components/Dashboard/EForms/EForms.tsx":"2","/workspace/frontend/src/context/User/UserState.tsx":"3","/workspace/frontend/src/views/Auth/Register.tsx":"4","/workspace/frontend/src/views/HomePage/Courses.tsx":"5","/workspace/frontend/src/components/Dashboard/EForms/EFormModal.tsx":"6","/workspace/frontend/src/views/Auth/Login.tsx":"7","/workspace/frontend/src/views/Test/Test.tsx":"8","/workspace/frontend/src/reportWebVitals.ts":"9","/workspace/frontend/src/views/Blog/BlogList.tsx":"10","/workspace/frontend/src/index.tsx":"11","/workspace/frontend/src/components/Footer.tsx":"12","/workspace/frontend/src/context/User/type.js":"13","/workspace/frontend/src/context/User/UserReducer.tsx":"14","/workspace/frontend/src/App.tsx":"15","/workspace/frontend/src/views/Dashboard/Dashboard.tsx":"16","/workspace/frontend/src/components/Errors/Error404.tsx":"17","/workspace/frontend/src/components/Dashboard/Blogs/BlogsTable.tsx":"18","/workspace/frontend/src/components/Navbar.tsx":"19","/workspace/frontend/src/components/Dashboard/Questions/QuestionBank.tsx":"20","/workspace/frontend/src/views/HomePage/FAQ.tsx":"21","/workspace/frontend/src/components/Dashboard/Blogs/CreateBlog.tsx":"22","/workspace/frontend/src/routes.js":"23","/workspace/frontend/src/views/HomePage/Contact.tsx":"24","/workspace/frontend/src/components/Blog/BlogListItem.tsx":"25","/workspace/frontend/src/components/Dashboard/Questions/AddQuestionPage.tsx":"26","/workspace/frontend/src/views/HomePage/About.tsx":"27","/workspace/frontend/src/views/Blog/BlogPage.tsx":"28","/workspace/frontend/src/components/Dashboard/Questions/UploadQuestions.tsx":"29","/workspace/frontend/src/context/User/UserContext.tsx":"30","/workspace/frontend/src/components/Dashboard/Questions/ReportedQuestions.tsx":"31","/workspace/frontend/src/views/HomePage/CourseData.js":"32","/workspace/frontend/src/components/Dashboard/Profile/Profile.tsx":"33","/workspace/frontend/src/components/Dashboard/EForms/EFormsAnalysis.tsx":"34","/workspace/frontend/src/components/Errors/Error400.tsx":"35","/workspace/frontend/src/components/Dashboard/Questions/QuestionModal.tsx":"36","/workspace/frontend/src/components/Dashboard/Questions/DifficultyLevel.js":"37"},{"size":3330,"mtime":1613156612992,"results":"38","hashOfConfig":"39"},{"size":2504,"mtime":1613186761602,"results":"40","hashOfConfig":"39"},{"size":2579,"mtime":1613453518868,"results":"41","hashOfConfig":"39"},{"size":5676,"mtime":1613111121239,"results":"42","hashOfConfig":"39"},{"size":8742,"mtime":1613446567434,"results":"43","hashOfConfig":"39"},{"size":1781,"mtime":1613446567302,"results":"44","hashOfConfig":"39"},{"size":3018,"mtime":1613111035336,"results":"45","hashOfConfig":"39"},{"size":2157,"mtime":1613164045976,"results":"46","hashOfConfig":"39"},{"size":440,"mtime":1613446567358,"results":"47","hashOfConfig":"39"},{"size":2113,"mtime":1612898604514,"results":"48","hashOfConfig":"39"},{"size":584,"mtime":1612942260823,"results":"49","hashOfConfig":"39"},{"size":3221,"mtime":1613446567354,"results":"50","hashOfConfig":"39"},{"size":511,"mtime":1613453518868,"results":"51","hashOfConfig":"39"},{"size":1324,"mtime":1613156612992,"results":"52","hashOfConfig":"39"},{"size":777,"mtime":1613453518868,"results":"53","hashOfConfig":"39"},{"size":4457,"mtime":1613201419259,"results":"54","hashOfConfig":"39"},{"size":172,"mtime":1613158203783,"results":"55","hashOfConfig":"39"},{"size":1391,"mtime":1612941615058,"results":"56","hashOfConfig":"39"},{"size":3654,"mtime":1613447271116,"results":"57","hashOfConfig":"39"},{"size":3058,"mtime":1613455380701,"results":"58","hashOfConfig":"39"},{"size":8226,"mtime":1612504652838,"results":"59","hashOfConfig":"39"},{"size":1530,"mtime":1612943541898,"results":"60","hashOfConfig":"39"},{"size":1450,"mtime":1612939634062,"results":"61","hashOfConfig":"39"},{"size":1955,"mtime":1612686518758,"results":"62","hashOfConfig":"39"},{"size":630,"mtime":1613446567298,"results":"63","hashOfConfig":"39"},{"size":472,"mtime":1613201881748,"results":"64","hashOfConfig":"39"},{"size":5368,"mtime":1613453518868,"results":"65","hashOfConfig":"39"},{"size":5558,"mtime":1613453518868,"results":"66","hashOfConfig":"39"},{"size":1289,"mtime":1613453830069,"results":"67","hashOfConfig":"39"},{"size":153,"mtime":1612943541898,"results":"68","hashOfConfig":"39"},{"size":1964,"mtime":1613446567354,"results":"69","hashOfConfig":"39"},{"size":976,"mtime":1612497704984,"results":"70","hashOfConfig":"39"},{"size":1579,"mtime":1612943541898,"results":"71","hashOfConfig":"39"},{"size":287,"mtime":1612470847376,"results":"72","hashOfConfig":"39"},{"size":182,"mtime":1613453518868,"results":"73","hashOfConfig":"39"},{"size":4967,"mtime":1613460906339,"results":"74","hashOfConfig":"39"},{"size":223,"mtime":1613459136200,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b3atdm",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/workspace/frontend/src/components/HomePage/EnquiryForm.tsx",[],"/workspace/frontend/src/components/Dashboard/EForms/EForms.tsx",[],"/workspace/frontend/src/context/User/UserState.tsx",[],["161","162"],"/workspace/frontend/src/views/Auth/Register.tsx",["163"],"/workspace/frontend/src/views/HomePage/Courses.tsx",[],"/workspace/frontend/src/components/Dashboard/EForms/EFormModal.tsx",[],"/workspace/frontend/src/views/Auth/Login.tsx",["164","165","166"],"import Layout, { Content } from \"antd/lib/layout/layout\";\nimport React, { useContext, useState } from \"react\";\nimport { Row, Col, Form, Input, Card, Divider, Button } from \"antd\";\nimport { UserOutlined, KeyOutlined } from \"@ant-design/icons\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport UserContext from \"../../context/User/UserContext\";\n\ninterface LoginInterface {\n  email: string;\n  password: string;\n}\nexport const Login: React.FC = () => {\n  let history = useHistory();\n  const userContext = useContext(UserContext);\n\n  const onFinish = (values: LoginInterface) => {\n    userContext.login(values);\n    history.push(\"/dashboard\");\n  };\n\n  return (\n    <Layout>\n      <Content style={{ backgroundColor: \"#2a323c\", paddingBottom: \"13.2%\" }}>\n        <Row>\n          <Col span={4} />\n          <Col span={16} style={{ padding: \".4%\", paddingTop: \"4%\" }}>\n            <Card\n              bordered={false}\n              style={{ height: \"100%\", borderRadius: \"17px\", margin: \"0% 30%\" }}\n            >\n              <img\n                src=\"logo-nobg.png\"\n                alt=\"logo\"\n                style={{ width: \"50%\", margin: \"auto\" }}\n              />\n              <h1 style={{ fontSize: \"25px\", marginBottom: \"0\" }}>Login</h1>\n              <Divider />\n              <Form\n                name=\"enquiry\"\n                onFinish={onFinish}\n                scrollToFirstError\n                style={{ textAlign: \"left\" }}\n              >\n                <Form.Item\n                  name=\"email\"\n                  rules={[\n                    {\n                      type: \"email\",\n                      message: \"The input is not valid E-mail!\",\n                    },\n                    {\n                      required: true,\n                      message: \"Please input your E-mail!\",\n                    },\n                  ]}\n                >\n                  <Input\n                    size=\"large\"\n                    prefix={<UserOutlined />}\n                    placeholder={\"Enter your Email ID.\"}\n                  />\n                </Form.Item>\n                <Form.Item name=\"password\">\n                  <Input.Password\n                    size=\"large\"\n                    prefix={<KeyOutlined />}\n                    placeholder={\"Enter your Password.\"}\n                  />\n                </Form.Item>\n                <Form.Item>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    size=\"large\"\n                    style={{ width: \"100%\", margin: \"auto\" }}\n                  >\n                    Submit\n                  </Button>\n                </Form.Item>\n              </Form>\n              <a>Forgot Password?</a>\n              <Divider />\n              <p>\n                Don't have an account? <Link to=\"/register\">Register!</Link>\n              </p>\n            </Card>\n          </Col>\n\n          <Col span={4} />\n        </Row>\n      </Content>\n    </Layout>\n  );\n};\n",["167","168"],"/workspace/frontend/src/views/Test/Test.tsx",["169","170","171","172","173","174","175","176","177","178","179"],"import { Button, Card, Col, Row } from 'antd';\nimport React, { useState } from 'react'\nimport { QuestionComponent } from '../../components/Test/QuestionComponent';\n\ninterface QuestionInterface {\n    questionID: number;\n    statement: string | null;\n    latex: any;\n    img_path?: string | null;\n    type: string;\n    archive?: string | null;\n};\ninterface AnswersInterface {\n    questionID: number;\n    answer: string | number | null;\n};\n\nexport const Test: React.FC = () => {\n\n    const [current, setCurrent] = useState<number>(1);\n    const [questions, setQuestions] = useState<QuestionInterface[]>([]);\n    const [answers, setAnswers] = useState<AnswersInterface[]>([]);\n    const [options, setOptions] = useState([]);\n    const getQuestions = () => {\n        //TODO: Get Questions\n    };\n    const getOptions = () => {\n        //TODO: Get Options\n    };\n    const onSelectAnswer = () => {\n        //TODO: Update Answers\n    };\n    const onNext = () => {\n        //TODO: onNext\n    };\n    const onPrevious = () => {\n        //TODO: onPrevious\n    };\n    const onSubmit = () => {\n        ///TODO: onSubmitTest\n    };\n    return (\n        <>\n            <Row style={{ height: '40px' }}>\n                TestBar\n            </Row>\n            <Row>\n                <Col span={18}>\n                    <Row>\n                        <Card> Time Remaining</Card>\n                        <Button type='primary' danger>Previous</Button>\n                        <Button type='primary'>Next</Button>\n                    </Row>\n                    <Row>\n                        <Card style={{ width: '100%' }}>\n                            <QuestionComponent question={questions[current]} option={options[current]} />\n                        </Card>\n                    </Row>\n                </Col>\n                <Col span={6}>\n                    <Card>\n                        <Row>\n                            Remaining Questions\n                        </Row>\n                        <Row>\n                            Matrix of Questions\n                        </Row>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n\n    );\n}",["180","181"],"/workspace/frontend/src/reportWebVitals.ts",[],"/workspace/frontend/src/views/Blog/BlogList.tsx",["182","183","184"],"/workspace/frontend/src/index.tsx",[],"/workspace/frontend/src/components/Footer.tsx",[],"/workspace/frontend/src/context/User/type.js",[],["185","186"],"/workspace/frontend/src/context/User/UserReducer.tsx",[],["187","188"],"/workspace/frontend/src/App.tsx",["189"],"/workspace/frontend/src/views/Dashboard/Dashboard.tsx",[],"/workspace/frontend/src/components/Errors/Error404.tsx",[],"/workspace/frontend/src/components/Dashboard/Blogs/BlogsTable.tsx",[],"/workspace/frontend/src/components/Navbar.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/QuestionBank.tsx",["190"],"import { Card, Table, Button } from \"antd\";\r\nimport Item from \"antd/lib/list/Item\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { QuestionModal } from \"./QuestionModal\";\r\n\r\ninterface QuestionInterface {\r\n  qid: number;\r\n  statement: string;\r\n  latex?: any;\r\n  img_path?: string;\r\n  type: string;\r\n  subject: string;\r\n  topic: string;\r\n  subtopic?: string;\r\n  level: string;\r\n  archive?: string;\r\n  is_reported: boolean;\r\n}\r\n\r\nexport const QuestionBank: React.FC = () => {\r\n  const [questions, setQuestions] = useState<QuestionInterface[] | undefined>(\r\n    []\r\n  );\r\n  useEffect(() => {\r\n    fetchBankDetails();\r\n  }, []);\r\n\r\n  const fetchBankDetails = async () => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:3000/admin/question\", {\r\n        headers: {\r\n          authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      console.log(res.data);\r\n      setQuestions(res.data);\r\n    } catch (e) {\r\n      console.log(\"Questions not Loaded\");\r\n    }\r\n  };\r\n  const deleteQuestion = async (\r\n    qid: Number,\r\n    questions: any[] | undefined,\r\n    setQuestions: {\r\n      (value: React.SetStateAction<QuestionInterface[] | undefined>): void;\r\n      (arg0: any): void;\r\n    }\r\n  ) => {\r\n    try {\r\n      const response = await axios.delete(\r\n        \"http://localhost:3000/admin/question\",\r\n        {\r\n          headers: {\r\n            authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n          },\r\n          data: {\r\n            qid: qid,\r\n          },\r\n        }\r\n      );\r\n      console.log(response);\r\n      if (questions) {\r\n        const newState = questions.filter(\r\n          (item: { qid: Number }) => item.qid !== qid\r\n        );\r\n        setQuestions(newState);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  const columns = [\r\n    {\r\n      title: \"Question ID\",\r\n      dataIndex: \"qid\",\r\n      key: \"qid\",\r\n    },\r\n    {\r\n      title: \"Subject\",\r\n      dataIndex: \"subject\",\r\n      key: \"subject\",\r\n    },\r\n    {\r\n      title: \"Topic\",\r\n      dataIndex: \"topic\",\r\n      key: \"topic\",\r\n    },\r\n    {\r\n      title: \"Type\",\r\n      dataIndex: \"type\",\r\n      key: \"type\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"\",\r\n      key: \"action\",\r\n      render: (text: any, record: QuestionInterface) => (\r\n        <>\r\n          <QuestionModal Question={record}/>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => deleteQuestion(record.qid, questions, setQuestions)}\r\n            danger\r\n          >\r\n            Delete\r\n          </Button>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <div style={{ textAlign: \"left\" }}>\r\n      <h1 style={{ fontSize: \"40px\" }}>Question Bank</h1>\r\n      <Card style={{ textAlign: \"left\", borderRadius: \"10px\" }}>\r\n        <h1 style={{ fontSize: \"30px\" }}>View Latest Added Questions</h1>\r\n        <Table\r\n          columns={columns}\r\n          dataSource={questions}\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n",["191","192"],"/workspace/frontend/src/views/HomePage/FAQ.tsx",[],"/workspace/frontend/src/components/Dashboard/Blogs/CreateBlog.tsx",[],["193","194"],"/workspace/frontend/src/routes.js",[],["195","196"],"/workspace/frontend/src/views/HomePage/Contact.tsx",[],"/workspace/frontend/src/components/Blog/BlogListItem.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/AddQuestionPage.tsx",[],"/workspace/frontend/src/views/HomePage/About.tsx",[],"/workspace/frontend/src/views/Blog/BlogPage.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/UploadQuestions.tsx",[],"/workspace/frontend/src/context/User/UserContext.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/ReportedQuestions.tsx",[],"/workspace/frontend/src/views/HomePage/CourseData.js",[],"/workspace/frontend/src/components/Dashboard/Profile/Profile.tsx",[],"/workspace/frontend/src/components/Dashboard/EForms/EFormsAnalysis.tsx",[],"/workspace/frontend/src/components/Errors/Error400.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/QuestionModal.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/DifficultyLevel.js",[],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":10,"column":3,"nodeType":"203","messageId":"204","endLine":10,"endColumn":22},{"ruleId":"201","severity":1,"message":"205","line":2,"column":29,"nodeType":"203","messageId":"204","endLine":2,"endColumn":37},{"ruleId":"201","severity":1,"message":"206","line":6,"column":8,"nodeType":"203","messageId":"204","endLine":6,"endColumn":13},{"ruleId":"207","severity":1,"message":"208","line":82,"column":15,"nodeType":"209","endLine":82,"endColumn":18},{"ruleId":"197","replacedBy":"210"},{"ruleId":"199","replacedBy":"211"},{"ruleId":"201","severity":1,"message":"212","line":20,"column":21,"nodeType":"203","messageId":"204","endLine":20,"endColumn":31},{"ruleId":"201","severity":1,"message":"213","line":21,"column":23,"nodeType":"203","messageId":"204","endLine":21,"endColumn":35},{"ruleId":"201","severity":1,"message":"214","line":22,"column":12,"nodeType":"203","messageId":"204","endLine":22,"endColumn":19},{"ruleId":"201","severity":1,"message":"215","line":22,"column":21,"nodeType":"203","messageId":"204","endLine":22,"endColumn":31},{"ruleId":"201","severity":1,"message":"216","line":23,"column":21,"nodeType":"203","messageId":"204","endLine":23,"endColumn":31},{"ruleId":"201","severity":1,"message":"217","line":24,"column":11,"nodeType":"203","messageId":"204","endLine":24,"endColumn":23},{"ruleId":"201","severity":1,"message":"218","line":27,"column":11,"nodeType":"203","messageId":"204","endLine":27,"endColumn":21},{"ruleId":"201","severity":1,"message":"219","line":30,"column":11,"nodeType":"203","messageId":"204","endLine":30,"endColumn":25},{"ruleId":"201","severity":1,"message":"220","line":33,"column":11,"nodeType":"203","messageId":"204","endLine":33,"endColumn":17},{"ruleId":"201","severity":1,"message":"221","line":36,"column":11,"nodeType":"203","messageId":"204","endLine":36,"endColumn":21},{"ruleId":"201","severity":1,"message":"222","line":39,"column":11,"nodeType":"203","messageId":"204","endLine":39,"endColumn":19},{"ruleId":"197","replacedBy":"223"},{"ruleId":"199","replacedBy":"224"},{"ruleId":"201","severity":1,"message":"225","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":15},{"ruleId":"201","severity":1,"message":"226","line":3,"column":17,"nodeType":"203","messageId":"204","endLine":3,"endColumn":23},{"ruleId":"201","severity":1,"message":"227","line":5,"column":10,"nodeType":"203","messageId":"204","endLine":5,"endColumn":18},{"ruleId":"197","replacedBy":"228"},{"ruleId":"199","replacedBy":"229"},{"ruleId":"197","replacedBy":"230"},{"ruleId":"199","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":18,"column":5,"nodeType":"234","endLine":18,"endColumn":7,"suggestions":"235"},{"ruleId":"201","severity":1,"message":"236","line":2,"column":8,"nodeType":"203","messageId":"204","endLine":2,"endColumn":12},{"ruleId":"197","replacedBy":"228"},{"ruleId":"199","replacedBy":"229"},{"ruleId":"197","replacedBy":"237"},{"ruleId":"199","replacedBy":"238"},{"ruleId":"197","replacedBy":"239"},{"ruleId":"199","replacedBy":"240"},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"@typescript-eslint/no-unused-vars","'AccountBookOutlined' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["241"],["242"],"'setCurrent' is assigned a value but never used.","'setQuestions' is assigned a value but never used.","'answers' is assigned a value but never used.","'setAnswers' is assigned a value but never used.","'setOptions' is assigned a value but never used.","'getQuestions' is assigned a value but never used.","'getOptions' is assigned a value but never used.","'onSelectAnswer' is assigned a value but never used.","'onNext' is assigned a value but never used.","'onPrevious' is assigned a value but never used.","'onSubmit' is assigned a value but never used.",["241"],["242"],"'Route' is defined but never used.","'Switch' is defined but never used.","'BlogPage' is defined but never used.",["241"],["242"],["241"],["242"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userContext'. Either include it or remove the dependency array.","ArrayExpression",["243"],"'Item' is defined but never used.",["241"],["242"],["241"],["242"],"no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},"Update the dependencies array to be: [userContext]",{"range":"246","text":"247"},[595,597],"[userContext]"]