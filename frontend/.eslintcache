[{"/workspace/frontend/src/views/HomePage/CourseData.js":"1","/workspace/frontend/src/index.tsx":"2","/workspace/frontend/src/reportWebVitals.ts":"3","/workspace/frontend/src/App.tsx":"4","/workspace/frontend/src/views/Auth/Register.tsx":"5","/workspace/frontend/src/views/Dashboard/Dashboard.tsx":"6","/workspace/frontend/src/views/Test/Test.tsx":"7","/workspace/frontend/src/components/Test/QuestionComponents/MCQComponent.tsx":"8","/workspace/frontend/src/components/Dashboard/Tests/TestTypeModal.tsx":"9","/workspace/frontend/src/components/Dashboard/Blogs/BlogsTable.tsx":"10","/workspace/frontend/src/components/Dashboard/EForms/EForms.tsx":"11","/workspace/frontend/src/components/Dashboard/EForms/EFormModal.tsx":"12","/workspace/frontend/src/views/HomePage/Contact.tsx":"13","/workspace/frontend/src/views/HomePage/FAQ.tsx":"14","/workspace/frontend/src/views/HomePage/Courses.tsx":"15","/workspace/frontend/src/components/Dashboard/Tests/TestTypes.tsx":"16","/workspace/frontend/src/components/Dashboard/Questions/UploadQuestions.tsx":"17","/workspace/frontend/src/components/Test/QuestionComponents/InputComponent.tsx":"18","/workspace/frontend/src/context/User/UserReducer.tsx":"19","/workspace/frontend/src/components/Test/TestIntruction.tsx":"20","/workspace/frontend/src/views/Blog/BlogList.tsx":"21","/workspace/frontend/src/views/Test/TestSubmitted.tsx":"22","/workspace/frontend/src/components/HomePage/EnquiryForm.tsx":"23","/workspace/frontend/src/routes.js":"24","/workspace/frontend/src/components/Navbar.tsx":"25","/workspace/frontend/src/components/Test/TestDetails.tsx":"26","/workspace/frontend/src/components/Dashboard/Blogs/CreateBlog.tsx":"27","/workspace/frontend/src/components/Dashboard/Questions/DifficultyLevel.js":"28","/workspace/frontend/src/components/Blog/BlogListItem.tsx":"29","/workspace/frontend/src/views/Blog/BlogPage.tsx":"30","/workspace/frontend/src/components/Dashboard/EForms/EFormsAnalysis.tsx":"31"},{"size":4391,"mtime":1619422004662,"results":"32","hashOfConfig":"33"},{"size":607,"mtime":1618051183962,"results":"34","hashOfConfig":"33"},{"size":440,"mtime":1614962687762,"results":"35","hashOfConfig":"33"},{"size":745,"mtime":1619191487250,"results":"36","hashOfConfig":"33"},{"size":5850,"mtime":1615695265021,"results":"37","hashOfConfig":"33"},{"size":5389,"mtime":1618397845262,"results":"38","hashOfConfig":"33"},{"size":13242,"mtime":1619412461605,"results":"39","hashOfConfig":"33"},{"size":2113,"mtime":1619281466063,"results":"40","hashOfConfig":"33"},{"size":5664,"mtime":1619503304522,"results":"41","hashOfConfig":"33"},{"size":2045,"mtime":1619714292808,"results":"42","hashOfConfig":"33"},{"size":2835,"mtime":1618051183946,"results":"43","hashOfConfig":"33"},{"size":1838,"mtime":1618051183942,"results":"44","hashOfConfig":"33"},{"size":1997,"mtime":1618051183966,"results":"45","hashOfConfig":"33"},{"size":8363,"mtime":1617810982589,"results":"46","hashOfConfig":"33"},{"size":4627,"mtime":1619422004662,"results":"47","hashOfConfig":"33"},{"size":2155,"mtime":1615448717589,"results":"48","hashOfConfig":"33"},{"size":1347,"mtime":1618051183946,"results":"49","hashOfConfig":"33"},{"size":1709,"mtime":1619277773220,"results":"50","hashOfConfig":"33"},{"size":1396,"mtime":1613446567358,"results":"51","hashOfConfig":"33"},{"size":3784,"mtime":1616508733526,"results":"52","hashOfConfig":"33"},{"size":2283,"mtime":1619713559072,"results":"53","hashOfConfig":"33"},{"size":667,"mtime":1618397845262,"results":"54","hashOfConfig":"33"},{"size":2200,"mtime":1619422004662,"results":"55","hashOfConfig":"33"},{"size":2715,"mtime":1619411215675,"results":"56","hashOfConfig":"33"},{"size":8099,"mtime":1619453130186,"results":"57","hashOfConfig":"33"},{"size":2936,"mtime":1619277214980,"results":"58","hashOfConfig":"33"},{"size":1566,"mtime":1619421631557,"results":"59","hashOfConfig":"33"},{"size":223,"mtime":1614962687762,"results":"60","hashOfConfig":"33"},{"size":631,"mtime":1619712226276,"results":"61","hashOfConfig":"33"},{"size":2650,"mtime":1619713428480,"results":"62","hashOfConfig":"33"},{"size":299,"mtime":1614962687762,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1b3atdm",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"75"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/workspace/frontend/src/views/HomePage/CourseData.js",[],["133","134"],"/workspace/frontend/src/index.tsx",[],["135","136"],"/workspace/frontend/src/reportWebVitals.ts",[],"/workspace/frontend/src/App.tsx",["137"],"import React, { useContext, useEffect } from \"react\";\r\nimport './App.less';\r\nimport { Navbar } from './components/Navbar';\r\nimport AOS from \"aos\";\r\nimport 'aos/dist/aos.css';\r\nimport Routes from './routes';\r\nimport { Footer } from './components/Footer';\r\nimport UserContext from \"./context/User/UserContext\";\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nAOS.init();\r\nfunction App() {\r\n  const userContext = useContext<any>(UserContext);\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      userContext.loadUser();\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Navbar />\r\n        <Routes />\r\n        <Footer />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["138","139"],"/workspace/frontend/src/views/Auth/Register.tsx",["140"],"import Layout, { Content } from \"antd/lib/layout/layout\";\r\nimport React, { useContext } from \"react\";\r\nimport { Row, Col, Form, Input, Card, Divider, Button, Select } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  KeyOutlined,\r\n  MailOutlined,\r\n  PhoneOutlined,\r\n  HomeOutlined,\r\n  AccountBookOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../../context/User/UserContext\";\r\nconst { Option } = Select;\r\ninterface RegisterInterface {\r\n  name: string;\r\n  email: string;\r\n  phone_no: string;\r\n  address: string;\r\n  standard: string;\r\n  password: string;\r\n  confirmPassword?: string;\r\n}\r\n\r\nexport const Register: React.FC = () => {\r\n  let history = useHistory();\r\n\r\n  const userContext = useContext(UserContext);\r\n  const onFinish = (values: RegisterInterface) => {\r\n    delete values.confirmPassword;\r\n    userContext.register(values);\r\n    history.push(\"/login\");\r\n  };\r\n  return (\r\n    <Layout>\r\n      <Content style={{ backgroundColor: \"#1c2229\", paddingBottom: \"4%\" }}>\r\n        <Row>\r\n          <Col span={4} />\r\n          <Col span={16} style={{ padding: \".4%\", paddingTop: \"1%\" }}>\r\n            <Card\r\n              style={{ height: \"100%\", borderRadius: \"17px\", margin: \"0% 30%\" }}\r\n            >\r\n              <img\r\n                src=\"logo-nobg.png\"\r\n                alt=\"logo\"\r\n                style={{ width: \"46%\", margin: \"auto\" }}\r\n              />\r\n              <h1 style={{ fontSize: \"25px\", marginBottom: \"0\" }}>\r\n                Create new account\r\n              </h1>\r\n              <Divider />\r\n              <Form\r\n                name=\"register\"\r\n                onFinish={onFinish}\r\n                scrollToFirstError\r\n                style={{ textAlign: \"left\" }}\r\n              >\r\n                <Form.Item name=\"name\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<UserOutlined />}\r\n                    placeholder={\"Enter your name.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"email\"\r\n                  rules={[\r\n                    {\r\n                      type: \"email\",\r\n                      message: \"The input is not valid E-mail!\",\r\n                    },\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your E-mail!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<MailOutlined />}\r\n                    placeholder={\"Enter your Email ID.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item name=\"phone_no\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<PhoneOutlined />}\r\n                    placeholder={\"Enter your phone number.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item name=\"address\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<HomeOutlined />}\r\n                    placeholder={\"Enter your Address.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item name=\"class\">\r\n                  <Select placeholder={\"Select your class.\"}>\r\n                    <Option value=\"VII\">VII</Option>\r\n                    <Option value=\"VIII\">VIII</Option>\r\n                    <Option value=\"IX\">IX</Option>\r\n                    <Option value=\"X\">X</Option>\r\n                    <Option value=\"XI\">XI</Option>\r\n                    <Option value=\"XII\">XII</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"password\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your password!\",\r\n                    },\r\n                  ]}\r\n                  hasFeedback\r\n                >\r\n                  <Input.Password\r\n                    size=\"large\"\r\n                    prefix={<KeyOutlined />}\r\n                    placeholder={\"Enter your Password.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"confirmPassword\"\r\n                  hasFeedback\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please confirm your password!\",\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        if (!value || getFieldValue(\"password\") === value) {\r\n                          return Promise.resolve();\r\n                        }\r\n\r\n                        return Promise.reject(\r\n                          \"The two passwords that you entered do not match!\"\r\n                        );\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    size=\"large\"\r\n                    prefix={<KeyOutlined />}\r\n                    placeholder={\"Re-enter your Password.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    size=\"large\"\r\n                    style={{ width: \"100%\", margin: \"auto\" }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n              <Divider />\r\n              <p>\r\n                Already have an account? <Link to=\"/login\">Login</Link>\r\n              </p>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col span={4} />\r\n        </Row>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n","/workspace/frontend/src/views/Dashboard/Dashboard.tsx",[],"/workspace/frontend/src/views/Test/Test.tsx",["141","142","143"],"/workspace/frontend/src/components/Test/QuestionComponents/MCQComponent.tsx",["144","145"],"/workspace/frontend/src/components/Dashboard/Tests/TestTypeModal.tsx",[],"/workspace/frontend/src/components/Dashboard/Blogs/BlogsTable.tsx",[],"/workspace/frontend/src/components/Dashboard/EForms/EForms.tsx",["146"],"/workspace/frontend/src/components/Dashboard/EForms/EFormModal.tsx",[],"/workspace/frontend/src/views/HomePage/Contact.tsx",[],"/workspace/frontend/src/views/HomePage/FAQ.tsx",[],"/workspace/frontend/src/views/HomePage/Courses.tsx",[],"/workspace/frontend/src/components/Dashboard/Tests/TestTypes.tsx",["147","148"],"/workspace/frontend/src/components/Dashboard/Questions/UploadQuestions.tsx",[],"/workspace/frontend/src/components/Test/QuestionComponents/InputComponent.tsx",["149","150","151","152","153","154","155"],"/workspace/frontend/src/context/User/UserReducer.tsx",[],"/workspace/frontend/src/components/Test/TestIntruction.tsx",[],"/workspace/frontend/src/views/Blog/BlogList.tsx",["156","157","158","159"],"/workspace/frontend/src/views/Test/TestSubmitted.tsx",[],"/workspace/frontend/src/components/HomePage/EnquiryForm.tsx",["160"],"/workspace/frontend/src/routes.js",["161"],"/workspace/frontend/src/components/Navbar.tsx",["162"],"import { Button, Col, Menu, Row, Avatar, Dropdown } from \"antd\";\nimport Layout, { Header } from \"antd/lib/layout/layout\";\nimport SubMenu from \"antd/lib/menu/SubMenu\";\nimport React, { useContext, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport UserContext from \"../context/User/UserContext\";\nimport './Navbar.css'\n\nconst StaticHeader: React.FC = () => {\n  const userContext = useContext(UserContext);\n  const [current, setCurrent] = useState(\"Home\");\n  const onClick = (e: any) => {\n    setCurrent(e.key);\n  };\n  const onClickLogo = () => {\n    setCurrent(\"Home\");\n  };\n  return (\n    <Layout>\n      <Header style={{ backgroundColor: \"white\" }}>\n        <Row style={{ height: \"100%\" }}>\n          <Col lg={2} />\n          <Col lg={2} md={4} sm={4} xs={8} style={{ height: \"100%\" }}>\n            <Link to=\"/\" onClick={onClickLogo}>\n              <img alt=\"logo\" src=\"https://i.imgur.com/Nki0mn9.jpg\" style={{ width: \"55%\" }} />\n            </Link>\n          </Col>\n          <Col lg={16} xs={14} style={{ width: \"100%\", backgroundColor: \"white\", color: \"black\" }}>\n            <Menu\n              style={{ backgroundColor: \"white\", color: \"black\", borderBottom: '0' }}\n              mode=\"horizontal\"\n              theme='dark'\n              selectedKeys={[current]}\n              onClick={onClick}\n              className=\"sideMenu\"\n            >\n              <Menu.Item key=\"home\">\n                <Link to=\"/\">Home</Link>\n              </Menu.Item>\n              <SubMenu className='cool-menu' title=\"Courses\">\n                <Menu.Item key='jee'>\n                  <Link to='/courses/jee'>JEE Mains and Advanced</Link>\n                </Menu.Item>\n                <Menu.Item key='kvpy'>\n                  <Link to='/courses/kvpy'>KVPY and Olympiad Program</Link>\n                </Menu.Item>\n                <Menu.Item key='nda'>\n                  <Link to='/courses/nda'>NDA and NA</Link>\n                </Menu.Item>\n                <Menu.Item key='genius'>\n                  <Link to='/courses/genius'>Raising the genius</Link>\n                </Menu.Item>\n                <Menu.Item key='tests'>\n                  <Link to='/courses/tests'>PrepIIT Test Series</Link>\n                </Menu.Item>\n                <Menu.Item key='jam'>\n                  <Link to='/courses/jam'>IIT JAM</Link>\n                </Menu.Item>\n              </SubMenu>\n              <Menu.Item key=\"faq\">\n                <Link to=\"/faq\">FAQ</Link>\n              </Menu.Item>\n              <Menu.Item key=\"about\">\n                <Link to=\"/about\">About Us</Link>\n              </Menu.Item>\n              <Menu.Item key=\"contact\">\n                <Link to=\"/contact\">Contact Us</Link>\n              </Menu.Item>\n            </Menu>\n          </Col>\n          <Col lg={4} xs={0} style={{ height: \"100%\" }}>\n            {userContext.user != null ? (\n              <Dropdown\n                overlay={\n                  <Menu\n                    style={{ backgroundColor: \"white\", color: \"black\" }}\n                    theme=\"dark\"\n                    onClick={onClick}\n                  >\n                    <Menu.Item key=\"dashboard\">\n                      <Link style={{ color: \"black\" }} to=\"/dashboard\">\n                        Dashboard\n                          </Link>\n                    </Menu.Item>\n                    <Menu.Item\n                      key=\"logout\"\n                      onClick={() => {\n                        userContext.logout();\n                      }}\n                    >\n                      <Link style={{ color: \"black\" }} to=\"/\">\n                        Logout\n                          </Link>\n                    </Menu.Item>\n                  </Menu>\n                }\n              >\n                <Button\n                  style={{\n                    backgroundColor: \"white\",\n                    border: \"0\",\n                    height: \"100%\",\n                  }}\n                >\n                  <Avatar icon={<img alt='user' style={{ margin: '10% 0 30% 0' }} src=\"https://img.icons8.com/fluent-systems-filled/96/000000/user.png\" />} size={50} />\n                </Button>\n              </Dropdown>\n            ) : (\n              <Button type=\"primary\" size=\"large\">\n                <Link to=\"/login\">TAKE A TEST</Link>\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Header>\n    </Layout>\n  )\n}\n\nconst DashboardHeader: React.FC = () => {\n  const userContext = useContext(UserContext);\n  const [current, setCurrent] = useState(\"Home\");\n  const onClick = (e: any) => {\n    setCurrent(e.key);\n  };\n  const onClickLogo = () => {\n    setCurrent(\"Home\");\n  };\n  return (\n    <Layout>\n      <Header style={{ backgroundColor: \"white\", padding: 0 }}>\n        <Row style={{ height: \"100%\" }}>\n          <Col lg={2}>\n            <Link to=\"/\" onClick={onClickLogo}>\n              <img alt=\"logo\" src=\"https://i.imgur.com/Nki0mn9.jpg\" style={{ width: \"57%\" }} />\n            </Link>\n          </Col>\n          <Col lg={2} md={4} sm={4} xs={8} style={{ height: \"100%\" }} />\n          <Col lg={16} xs={14} />\n          <Col lg={4} xs={0} style={{ height: \"100%\" }}>\n            {userContext.user != null ? (\n              <Dropdown\n                overlay={\n                  <Menu\n                    style={{ backgroundColor: \"white\", color: \"black\" }}\n                    theme=\"dark\"\n                    onClick={onClick}\n                  >\n                    <Menu.Item key=\"home\">\n                      <Link style={{ color: \"black\" }} to=\"/\">\n                        Home\n                      </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"dashboard\">\n                      <Link style={{ color: \"black\" }} to=\"/dashboard\">\n                        Dashboard\n                      </Link>\n                    </Menu.Item>\n                    <Menu.Item\n                      key=\"logout\"\n                      onClick={() => {\n                        userContext.logout();\n                      }}\n                    >\n                      <Link style={{ color: \"black\" }} to=\"/\">\n                        Logout\n                          </Link>\n                    </Menu.Item>\n                  </Menu>\n                }\n              >\n                <Button\n                  style={{\n                    backgroundColor: \"white\",\n                    border: \"0\",\n                    height: \"100%\",\n                  }}\n                >\n                  <Avatar icon={<img alt='user' style={{ margin: '10% 0 30% 0' }} src=\"https://img.icons8.com/fluent-systems-filled/96/000000/user.png\" />} size={50} />\n                </Button>\n              </Dropdown>\n            ) : (\n              <Button type=\"primary\" size=\"large\">\n                <Link to=\"/login\">TAKE A TEST</Link>\n              </Button>\n            )}\n          </Col>\n        </Row>\n      </Header>\n    </Layout>\n  )\n}\nconst TestHeader: React.FC = () => {\n  const userContext = useContext(UserContext)\n  return (\n    <Layout>\n      <Header style={{ backgroundColor: \"white\", padding: 0 }}>\n        <Row style={{ height: \"100%\" }}>\n          <Col lg={2}>\n            <Link to='/'>\n              <img alt=\"logo\" src=\"https://i.imgur.com/Nki0mn9.jpg\" style={{ width: \"57%\" }} />\n            </Link>\n          </Col>\n          <Col lg={2} md={4} sm={4} xs={8} style={{ height: \"100%\" }}>\n            <h1 style={{ color: 'black' }}>JEE Mains 2019</h1>\n          </Col>\n          <Col lg={16} xs={14} />\n          <Col lg={4}>{userContext.user && <h2 style={{ color: 'black' }}>Student Name: {userContext.user.name}</h2>}</Col>\n        </Row>\n      </Header>\n    </Layout>\n  )\n}\nexport const Navbar: React.FC = () => {\n  const location = useLocation();\n  const renderSwitch = () => {\n    switch (location.pathname.split(\"/\")[1]) {\n      case 'dashboard':\n        return <DashboardHeader />\n      case 'test':\n        return <TestHeader />\n      case 'submitted':\n        return null\n      default:\n        return <StaticHeader />\n    }\n  }\n  return (\n    <>\n      {renderSwitch()}\n    </>\n  );\n};\n",["163","164"],"/workspace/frontend/src/components/Test/TestDetails.tsx",[],"/workspace/frontend/src/components/Dashboard/Blogs/CreateBlog.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/DifficultyLevel.js",[],"/workspace/frontend/src/components/Blog/BlogListItem.tsx",[],"/workspace/frontend/src/views/Blog/BlogPage.tsx",["165","166"],"/workspace/frontend/src/components/Dashboard/EForms/EFormsAnalysis.tsx",[],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":18,"column":6,"nodeType":"173","endLine":18,"endColumn":8,"suggestions":"174"},{"ruleId":"167","replacedBy":"175"},{"ruleId":"169","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":10,"column":3,"nodeType":"179","messageId":"180","endLine":10,"endColumn":22},{"ruleId":"177","severity":1,"message":"181","line":13,"column":11,"nodeType":"179","messageId":"180","endLine":13,"endColumn":28},{"ruleId":"171","severity":1,"message":"182","line":57,"column":6,"nodeType":"173","endLine":57,"endColumn":15,"suggestions":"183"},{"ruleId":"177","severity":1,"message":"184","line":237,"column":17,"nodeType":"179","messageId":"180","endLine":237,"endColumn":20},{"ruleId":"177","severity":1,"message":"185","line":25,"column":7,"nodeType":"179","messageId":"180","endLine":25,"endColumn":12},{"ruleId":"177","severity":1,"message":"186","line":36,"column":7,"nodeType":"179","messageId":"180","endLine":36,"endColumn":11},{"ruleId":"177","severity":1,"message":"187","line":1,"column":31,"nodeType":"179","messageId":"180","endLine":1,"endColumn":38},{"ruleId":"177","severity":1,"message":"188","line":1,"column":38,"nodeType":"179","messageId":"180","endLine":1,"endColumn":45},{"ruleId":"171","severity":1,"message":"189","line":60,"column":6,"nodeType":"173","endLine":60,"endColumn":8,"suggestions":"190"},{"ruleId":"177","severity":1,"message":"191","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":15},{"ruleId":"177","severity":1,"message":"192","line":1,"column":22,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"193","line":1,"column":27,"nodeType":"179","messageId":"180","endLine":1,"endColumn":43},{"ruleId":"177","severity":1,"message":"185","line":25,"column":9,"nodeType":"179","messageId":"180","endLine":25,"endColumn":14},{"ruleId":"177","severity":1,"message":"194","line":26,"column":11,"nodeType":"179","messageId":"180","endLine":26,"endColumn":21},{"ruleId":"177","severity":1,"message":"195","line":32,"column":11,"nodeType":"179","messageId":"180","endLine":32,"endColumn":30},{"ruleId":"177","severity":1,"message":"186","line":36,"column":9,"nodeType":"179","messageId":"180","endLine":36,"endColumn":13},{"ruleId":"177","severity":1,"message":"196","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":16},{"ruleId":"177","severity":1,"message":"197","line":4,"column":10,"nodeType":"179","messageId":"180","endLine":4,"endColumn":15},{"ruleId":"177","severity":1,"message":"198","line":4,"column":17,"nodeType":"179","messageId":"180","endLine":4,"endColumn":23},{"ruleId":"177","severity":1,"message":"199","line":6,"column":10,"nodeType":"179","messageId":"180","endLine":6,"endColumn":18},{"ruleId":"177","severity":1,"message":"200","line":5,"column":9,"nodeType":"179","messageId":"180","endLine":5,"endColumn":15},{"ruleId":"201","severity":1,"message":"202","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":27},{"ruleId":"177","severity":1,"message":"203","line":122,"column":10,"nodeType":"179","messageId":"180","endLine":122,"endColumn":17},{"ruleId":"167","replacedBy":"204"},{"ruleId":"169","replacedBy":"205"},{"ruleId":"177","severity":1,"message":"206","line":1,"column":29,"nodeType":"179","messageId":"180","endLine":1,"endColumn":36},{"ruleId":"171","severity":1,"message":"207","line":21,"column":8,"nodeType":"173","endLine":21,"endColumn":10,"suggestions":"208"},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userContext'. Either include it or remove the dependency array.","ArrayExpression",["211"],["209"],["210"],"@typescript-eslint/no-unused-vars","'AccountBookOutlined' is defined but never used.","Identifier","unusedVar","'QuestionInterface' is defined but never used.","React Hook useEffect has a missing dependency: 'response'. Either include it or remove the dependency array.",["212"],"'key' is assigned a value but never used.","'Latex' is assigned a value but never used.","'temp' is assigned a value but never used.","'Popover' is defined but never used.","'message' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchTestDetails'. Either include it or remove the dependency array.",["213"],"'Radio' is defined but never used.","'Col' is defined but never used.","'RadioChangeEvent' is defined but never used.","'radioStyle' is assigned a value but never used.","'radioContainerStyle' is assigned a value but never used.","'Avatar' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'BlogPage' is defined but never used.","'Option' is assigned a value but never used.","no-unused-vars","'useContext' is defined but never used.","'current' is assigned a value but never used.",["209"],["210"],"'Divider' is defined but never used.","React Hook useEffect has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.",["214"],"no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},"Update the dependencies array to be: [userContext]",{"range":"223","text":"224"},"Update the dependencies array to be: [answers, response]",{"range":"225","text":"226"},"Update the dependencies array to be: [fetchTestDetails]",{"range":"227","text":"228"},"Update the dependencies array to be: [location.pathname]",{"range":"229","text":"230"},[563,565],"[userContext]",[2186,2195],"[answers, response]",[1279,1281],"[fetchTestDetails]",[646,648],"[location.pathname]"]