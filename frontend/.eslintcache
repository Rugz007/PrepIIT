[{"/workspace/frontend/src/App.tsx":"1","/workspace/frontend/src/components/Navbar.tsx":"2","/workspace/frontend/src/components/HomePage/EnquiryForm.tsx":"3","/workspace/frontend/src/views/HomePage/HomePage.tsx":"4","/workspace/frontend/src/views/Auth/Login.tsx":"5","/workspace/frontend/src/routes.js":"6","/workspace/frontend/src/views/Auth/Register.tsx":"7","/workspace/frontend/src/views/Dashboard/Dashboard.tsx":"8","/workspace/frontend/src/views/HomePage/About.tsx":"9","/workspace/frontend/src/index.tsx":"10","/workspace/frontend/src/views/HomePage/CourseData.js":"11","/workspace/frontend/src/reportWebVitals.ts":"12","/workspace/frontend/src/views/HomePage/FAQ.tsx":"13","/workspace/frontend/src/components/Footer.tsx":"14","/workspace/frontend/src/views/HomePage/Courses.tsx":"15","/workspace/frontend/src/views/HomePage/Contact.tsx":"16","/workspace/frontend/src/components/Dashboard/EForms/EFormModal.tsx":"17","/workspace/frontend/src/components/Dashboard/EForms/EFormSettings.tsx":"18","/workspace/frontend/src/components/Dashboard/EForms/EForms.tsx":"19","/workspace/frontend/src/components/Dashboard/EForms/EFormsAnalysis.tsx":"20","/workspace/frontend/src/components/Dashboard/Profile/Profile.tsx":"21","/workspace/frontend/src/views/Test/Test.tsx":"22","/workspace/frontend/src/components/Test/QuestionComponent.tsx":"23"},{"size":446,"mtime":1612242942540,"results":"24","hashOfConfig":"25"},{"size":1996,"mtime":1612695456858,"results":"26","hashOfConfig":"25"},{"size":3598,"mtime":1612154301716,"results":"27","hashOfConfig":"25"},{"size":3394,"mtime":1612329114084,"results":"28","hashOfConfig":"25"},{"size":3410,"mtime":1612776483802,"results":"29","hashOfConfig":"25"},{"size":1218,"mtime":1612775386547,"results":"30","hashOfConfig":"25"},{"size":5370,"mtime":1612470820316,"results":"31","hashOfConfig":"25"},{"size":2082,"mtime":1612775386547,"results":"32","hashOfConfig":"25"},{"size":5219,"mtime":1612783180174,"results":"33","hashOfConfig":"25"},{"size":500,"mtime":1611552045273,"results":"34","hashOfConfig":"25"},{"size":976,"mtime":1612497704984,"results":"35","hashOfConfig":"25"},{"size":425,"mtime":1611570582076,"results":"36","hashOfConfig":"25"},{"size":8226,"mtime":1612504652838,"results":"37","hashOfConfig":"25"},{"size":2519,"mtime":1612497704972,"results":"38","hashOfConfig":"25"},{"size":8527,"mtime":1612504725118,"results":"39","hashOfConfig":"25"},{"size":1955,"mtime":1612686518758,"results":"40","hashOfConfig":"25"},{"size":1087,"mtime":1612497704972,"results":"41","hashOfConfig":"25"},{"size":904,"mtime":1612470473126,"results":"42","hashOfConfig":"25"},{"size":1431,"mtime":1612497704972,"results":"43","hashOfConfig":"25"},{"size":287,"mtime":1612470847376,"results":"44","hashOfConfig":"25"},{"size":1430,"mtime":1612694066014,"results":"45","hashOfConfig":"25"},{"size":2157,"mtime":1612775386551,"results":"46","hashOfConfig":"25"},{"size":441,"mtime":1612710566290,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1b3atdm",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"61"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/workspace/frontend/src/App.tsx",[],["101","102"],"/workspace/frontend/src/components/Navbar.tsx",[],"/workspace/frontend/src/components/HomePage/EnquiryForm.tsx",[],"/workspace/frontend/src/views/HomePage/HomePage.tsx",[],["103","104"],"/workspace/frontend/src/views/Auth/Login.tsx",["105","106"],"import Layout, { Content } from 'antd/lib/layout/layout';\nimport React, { useState } from 'react';\nimport { Row, Col, Form, Input, Card, Divider, Button } from 'antd';\nimport { UserOutlined, KeyOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios'\n\ninterface LoginInterface{\n    email:string;\n    password:string;\n}\nexport const Login: React.FC = () => {\n    const onFinish = (values: LoginInterface) => {\n        console.log(values);\n        axios({\n            method: 'post',\n            url:'http://localhost:3000/user/login',\n            headers: {},\n            data: {\n                email:values.email,\n                password:values.password,\n            }\n        })\n        .then(function (response) {\n          console.log(response);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    };\n\n    return (\n        <Layout>\n            <Content style={{ backgroundColor: '#2a323c', paddingBottom: '13.2%' }}>\n                <Row >\n                    <Col span={4} />\n                    <Col span={16} style={{ padding: '.4%', paddingTop: '4%' }}>\n                        <Card bordered={false} style={{ height: '100%', borderRadius: '17px', margin: '0% 30%' }}>\n                            <img src='logo-nobg.png' alt='logo' style={{ width: '50%', margin: 'auto' }} />\n                            <h1 style={{ fontSize: '25px', marginBottom: '0' }}>Login</h1>\n                            <Divider />\n                            <Form\n                                name=\"enquiry\"\n                                onFinish={onFinish}\n                                scrollToFirstError\n                                style={{ textAlign: 'left' }}\n                            >\n                                <Form.Item name=\"email\"\n                                    rules={[\n                                        {\n                                            type: 'email',\n                                            message: 'The input is not valid E-mail!',\n                                        },\n                                        {\n                                            required: true,\n                                            message: 'Please input your E-mail!',\n                                        },\n                                    ]}>\n                                    <Input size='large' prefix={<UserOutlined />} placeholder={'Enter your Email ID.'} />\n                                </Form.Item>\n                                <Form.Item name=\"password\">\n                                    <Input.Password size='large' prefix={<KeyOutlined />} placeholder={'Enter your Password.'} />\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button type='primary' htmlType='submit' size='large' style={{ width: '100%', margin: 'auto' }}>Submit</Button>\n                                </Form.Item>\n                            </Form>\n                            <a>Forgot Password?</a>\n                            <Divider />\n                            <p>Don't have an account? <Link to='/register'>Register!</Link></p>\n                        </Card>\n                    </Col>\n\n                    <Col span={4} />\n                </Row>\n            </Content>\n        </Layout>\n    );\n}",["107","108"],"/workspace/frontend/src/routes.js",[],"/workspace/frontend/src/views/Auth/Register.tsx",[],"/workspace/frontend/src/views/Dashboard/Dashboard.tsx",[],"/workspace/frontend/src/views/HomePage/About.tsx",[],"/workspace/frontend/src/index.tsx",[],"/workspace/frontend/src/views/HomePage/CourseData.js",[],["109","110"],"/workspace/frontend/src/reportWebVitals.ts",[],"/workspace/frontend/src/views/HomePage/FAQ.tsx",[],"/workspace/frontend/src/components/Footer.tsx",[],"/workspace/frontend/src/views/HomePage/Courses.tsx",[],"/workspace/frontend/src/views/HomePage/Contact.tsx",[],["111","112"],"/workspace/frontend/src/components/Dashboard/EForms/EFormModal.tsx",[],"/workspace/frontend/src/components/Dashboard/EForms/EFormSettings.tsx",[],"/workspace/frontend/src/components/Dashboard/EForms/EForms.tsx",[],"/workspace/frontend/src/components/Dashboard/EForms/EFormsAnalysis.tsx",[],"/workspace/frontend/src/components/Dashboard/Profile/Profile.tsx",[],"/workspace/frontend/src/views/Test/Test.tsx",["113","114","115","116","117","118","119","120","121","122","123"],"import { Button, Card, Col, Row } from 'antd';\nimport React, { useState } from 'react'\nimport { QuestionComponent } from '../../components/Test/QuestionComponent';\n\ninterface QuestionInterface {\n    questionID: number;\n    statement: string | null;\n    latex: any;\n    img_path?: string | null;\n    type: string;\n    archive?: string | null;\n};\ninterface AnswersInterface {\n    questionID: number;\n    answer: string | number | null;\n};\n\nexport const Test: React.FC = () => {\n\n    const [current, setCurrent] = useState<number>(1);\n    const [questions, setQuestions] = useState<QuestionInterface[]>([]);\n    const [answers, setAnswers] = useState<AnswersInterface[]>([]);\n    const [options, setOptions] = useState([]);\n    const getQuestions = () => {\n        //TODO: Get Questions\n    };\n    const getOptions = () => {\n        //TODO: Get Options\n    };\n    const onSelectAnswer = () => {\n        //TODO: Update Answers\n    };\n    const onNext = () => {\n        //TODO: onNext\n    };\n    const onPrevious = () => {\n        //TODO: onPrevious\n    };\n    const onSubmit = () => {\n        ///TODO: onSubmitTest\n    };\n    return (\n        <>\n            <Row style={{ height: '40px' }}>\n                TestBar\n            </Row>\n            <Row>\n                <Col span={18}>\n                    <Row>\n                        <Card> Time Remaining</Card>\n                        <Button type='primary' danger>Previous</Button>\n                        <Button type='primary'>Next</Button>\n                    </Row>\n                    <Row>\n                        <Card style={{ width: '100%' }}>\n                            <QuestionComponent question={questions[current]} option={options[current]} />\n                        </Card>\n                    </Row>\n                </Col>\n                <Col span={6}>\n                    <Card>\n                        <Row>\n                            Remaining Questions\n                        </Row>\n                        <Row>\n                            Matrix of Questions\n                        </Row>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n\n    );\n}","/workspace/frontend/src/components/Test/QuestionComponent.tsx",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"124","replacedBy":"128"},{"ruleId":"126","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":2,"column":17,"nodeType":"132","messageId":"133","endLine":2,"endColumn":25},{"ruleId":"134","severity":1,"message":"135","line":68,"column":29,"nodeType":"136","endLine":68,"endColumn":32},{"ruleId":"124","replacedBy":"137"},{"ruleId":"126","replacedBy":"138"},{"ruleId":"124","replacedBy":"137"},{"ruleId":"126","replacedBy":"138"},{"ruleId":"124","replacedBy":"139"},{"ruleId":"126","replacedBy":"140"},{"ruleId":"130","severity":1,"message":"141","line":20,"column":21,"nodeType":"132","messageId":"133","endLine":20,"endColumn":31},{"ruleId":"130","severity":1,"message":"142","line":21,"column":23,"nodeType":"132","messageId":"133","endLine":21,"endColumn":35},{"ruleId":"130","severity":1,"message":"143","line":22,"column":12,"nodeType":"132","messageId":"133","endLine":22,"endColumn":19},{"ruleId":"130","severity":1,"message":"144","line":22,"column":21,"nodeType":"132","messageId":"133","endLine":22,"endColumn":31},{"ruleId":"130","severity":1,"message":"145","line":23,"column":21,"nodeType":"132","messageId":"133","endLine":23,"endColumn":31},{"ruleId":"130","severity":1,"message":"146","line":24,"column":11,"nodeType":"132","messageId":"133","endLine":24,"endColumn":23},{"ruleId":"130","severity":1,"message":"147","line":27,"column":11,"nodeType":"132","messageId":"133","endLine":27,"endColumn":21},{"ruleId":"130","severity":1,"message":"148","line":30,"column":11,"nodeType":"132","messageId":"133","endLine":30,"endColumn":25},{"ruleId":"130","severity":1,"message":"149","line":33,"column":11,"nodeType":"132","messageId":"133","endLine":33,"endColumn":17},{"ruleId":"130","severity":1,"message":"150","line":36,"column":11,"nodeType":"132","messageId":"133","endLine":36,"endColumn":21},{"ruleId":"130","severity":1,"message":"151","line":39,"column":11,"nodeType":"132","messageId":"133","endLine":39,"endColumn":19},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],["152"],["153"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["152"],["153"],["152"],["153"],"'setCurrent' is assigned a value but never used.","'setQuestions' is assigned a value but never used.","'answers' is assigned a value but never used.","'setAnswers' is assigned a value but never used.","'setOptions' is assigned a value but never used.","'getQuestions' is assigned a value but never used.","'getOptions' is assigned a value but never used.","'onSelectAnswer' is assigned a value but never used.","'onNext' is assigned a value but never used.","'onPrevious' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]