[{"/workspace/frontend/src/index.tsx":"1","/workspace/frontend/src/views/Auth/Login.tsx":"2","/workspace/frontend/src/views/HomePage/About.tsx":"3","/workspace/frontend/src/components/Dashboard/EForms/EFormSettings.tsx":"4","/workspace/frontend/src/components/Dashboard/Questions/QuestionBank.tsx":"5","/workspace/frontend/src/components/Blog/BlogListItem.tsx":"6","/workspace/frontend/src/components/Test/TestCard.tsx":"7","/workspace/frontend/src/views/Test/TestsPage.tsx":"8","/workspace/frontend/src/components/Navbar.tsx":"9","/workspace/frontend/src/reportWebVitals.ts":"10","/workspace/frontend/src/views/Auth/Register.tsx":"11","/workspace/frontend/src/views/HomePage/FAQ.tsx":"12","/workspace/frontend/src/components/Dashboard/Blogs/BlogsTable.tsx":"13","/workspace/frontend/src/components/Dashboard/EForms/EFormModal.tsx":"14","/workspace/frontend/src/views/Blog/BlogPage.tsx":"15","/workspace/frontend/src/views/HomePage/Courses.tsx":"16","/workspace/frontend/src/components/Dashboard/Tests/TestTypeModal.tsx":"17","/workspace/frontend/src/components/Dashboard/Blogs/CreateBlog.tsx":"18","/workspace/frontend/src/components/Dashboard/Questions/DifficultyLevel.js":"19","/workspace/frontend/src/views/HomePage/Contact.tsx":"20","/workspace/frontend/src/components/Dashboard/Questions/AddQuestionPage.tsx":"21","/workspace/frontend/src/components/Dashboard/Profile/Profile.tsx":"22","/workspace/frontend/src/views/Dashboard/Dashboard.tsx":"23","/workspace/frontend/src/views/Blog/BlogList.tsx":"24","/workspace/frontend/src/views/HomePage/HomePage.tsx":"25","/workspace/frontend/src/components/Dashboard/Questions/ReportedQuestions.tsx":"26","/workspace/frontend/src/components/Errors/Error400.tsx":"27","/workspace/frontend/src/components/Dashboard/EForms/EForms.tsx":"28","/workspace/frontend/src/components/Test/TestDetails.tsx":"29","/workspace/frontend/src/components/Dashboard/Questions/QuestionModal.tsx":"30","/workspace/frontend/src/components/Dashboard/Questions/AddQuestion.tsx":"31","/workspace/frontend/src/components/Test/TestIntruction.tsx":"32","/workspace/frontend/src/App.tsx":"33","/workspace/frontend/src/routes.js":"34","/workspace/frontend/src/context/User/UserState.tsx":"35","/workspace/frontend/src/views/Test/Test.tsx":"36","/workspace/frontend/src/views/HomePage/CourseData.js":"37","/workspace/frontend/src/components/Dashboard/Questions/UploadQuestions.tsx":"38","/workspace/frontend/src/components/Analysis/SubjectAnalysis.tsx":"39","/workspace/frontend/src/views/Analysis/TestAnalysis.tsx":"40","/workspace/frontend/src/context/User/UserContext.tsx":"41","/workspace/frontend/src/context/User/UserReducer.tsx":"42","/workspace/frontend/src/components/Dashboard/EForms/EFormsAnalysis.tsx":"43","/workspace/frontend/src/components/Dashboard/Tests/TestTypes.tsx":"44","/workspace/frontend/src/components/Test/QuestionComponent.tsx":"45"},{"size":605,"mtime":1613446567358,"results":"46","hashOfConfig":"47"},{"size":3113,"mtime":1615695265021,"results":"48","hashOfConfig":"47"},{"size":5368,"mtime":1615450338852,"results":"49","hashOfConfig":"47"},{"size":927,"mtime":1613446567314,"results":"50","hashOfConfig":"47"},{"size":4156,"mtime":1615448717589,"results":"51","hashOfConfig":"47"},{"size":630,"mtime":1613446567298,"results":"52","hashOfConfig":"47"},{"size":1412,"mtime":1615976410048,"results":"53","hashOfConfig":"47"},{"size":1973,"mtime":1615802665473,"results":"54","hashOfConfig":"47"},{"size":4039,"mtime":1615976410048,"results":"55","hashOfConfig":"47"},{"size":440,"mtime":1613446567358,"results":"56","hashOfConfig":"47"},{"size":5850,"mtime":1615450345256,"results":"57","hashOfConfig":"47"},{"size":8404,"mtime":1615450346484,"results":"58","hashOfConfig":"47"},{"size":1459,"mtime":1614962687762,"results":"59","hashOfConfig":"47"},{"size":1818,"mtime":1615448717589,"results":"60","hashOfConfig":"47"},{"size":5558,"mtime":1613446567398,"results":"61","hashOfConfig":"47"},{"size":8742,"mtime":1615450339844,"results":"62","hashOfConfig":"47"},{"size":5607,"mtime":1615803654817,"results":"63","hashOfConfig":"47"},{"size":1566,"mtime":1614962687762,"results":"64","hashOfConfig":"47"},{"size":223,"mtime":1614962687762,"results":"65","hashOfConfig":"47"},{"size":1998,"mtime":1615695265021,"results":"66","hashOfConfig":"47"},{"size":588,"mtime":1613800597575,"results":"67","hashOfConfig":"47"},{"size":3300,"mtime":1615610531929,"results":"68","hashOfConfig":"47"},{"size":5086,"mtime":1615695265021,"results":"69","hashOfConfig":"47"},{"size":2168,"mtime":1614962687762,"results":"70","hashOfConfig":"47"},{"size":3472,"mtime":1615695265025,"results":"71","hashOfConfig":"47"},{"size":3091,"mtime":1615610026777,"results":"72","hashOfConfig":"47"},{"size":395,"mtime":1614962687762,"results":"73","hashOfConfig":"47"},{"size":2809,"mtime":1615011568240,"results":"74","hashOfConfig":"47"},{"size":1552,"mtime":1615695265021,"results":"75","hashOfConfig":"47"},{"size":6578,"mtime":1615976410020,"results":"76","hashOfConfig":"47"},{"size":2834,"mtime":1615448717589,"results":"77","hashOfConfig":"47"},{"size":3062,"mtime":1615705946212,"results":"78","hashOfConfig":"47"},{"size":777,"mtime":1613446567298,"results":"79","hashOfConfig":"47"},{"size":1987,"mtime":1615976410048,"results":"80","hashOfConfig":"47"},{"size":2657,"mtime":1614970635879,"results":"81","hashOfConfig":"47"},{"size":3036,"mtime":1613800597579,"results":"82","hashOfConfig":"47"},{"size":1006,"mtime":1614962687762,"results":"83","hashOfConfig":"47"},{"size":1326,"mtime":1614970652603,"results":"84","hashOfConfig":"47"},{"size":2556,"mtime":1615976410020,"results":"85","hashOfConfig":"47"},{"size":6463,"mtime":1615886610058,"results":"86","hashOfConfig":"47"},{"size":158,"mtime":1613446567358,"results":"87","hashOfConfig":"47"},{"size":1396,"mtime":1613446567358,"results":"88","hashOfConfig":"47"},{"size":299,"mtime":1613446567314,"results":"89","hashOfConfig":"47"},{"size":2155,"mtime":1615448717589,"results":"90","hashOfConfig":"47"},{"size":2732,"mtime":1615695265017,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b3atdm",{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"140"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/workspace/frontend/src/index.tsx",[],"/workspace/frontend/src/views/Auth/Login.tsx",["193","194","195"],"/workspace/frontend/src/views/HomePage/About.tsx",[],["196","197"],"/workspace/frontend/src/components/Dashboard/EForms/EFormSettings.tsx",[],["198","199"],"/workspace/frontend/src/components/Dashboard/Questions/QuestionBank.tsx",[],"/workspace/frontend/src/components/Blog/BlogListItem.tsx",[],"/workspace/frontend/src/components/Test/TestCard.tsx",["200"],"/workspace/frontend/src/views/Test/TestsPage.tsx",["201"],"/workspace/frontend/src/components/Navbar.tsx",[],"/workspace/frontend/src/reportWebVitals.ts",[],"/workspace/frontend/src/views/Auth/Register.tsx",["202"],"import Layout, { Content } from \"antd/lib/layout/layout\";\r\nimport React, { useContext } from \"react\";\r\nimport { Row, Col, Form, Input, Card, Divider, Button, Select } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  KeyOutlined,\r\n  MailOutlined,\r\n  PhoneOutlined,\r\n  HomeOutlined,\r\n  AccountBookOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../../context/User/UserContext\";\r\nconst { Option } = Select;\r\ninterface RegisterInterface {\r\n  name: string;\r\n  email: string;\r\n  phone_no: string;\r\n  address: string;\r\n  standard: string;\r\n  password: string;\r\n  confirmPassword?: string;\r\n}\r\n\r\nexport const Register: React.FC = () => {\r\n  let history = useHistory();\r\n\r\n  const userContext = useContext(UserContext);\r\n  const onFinish = (values: RegisterInterface) => {\r\n    delete values.confirmPassword;\r\n    userContext.register(values);\r\n    history.push(\"/login\");\r\n  };\r\n  return (\r\n    <Layout>\r\n      <Content style={{ backgroundColor: \"#1c2229\", paddingBottom: \"4%\" }}>\r\n        <Row>\r\n          <Col span={4} />\r\n          <Col span={16} style={{ padding: \".4%\", paddingTop: \"1%\" }}>\r\n            <Card\r\n              style={{ height: \"100%\", borderRadius: \"17px\", margin: \"0% 30%\" }}\r\n            >\r\n              <img\r\n                src=\"logo-nobg.png\"\r\n                alt=\"logo\"\r\n                style={{ width: \"46%\", margin: \"auto\" }}\r\n              />\r\n              <h1 style={{ fontSize: \"25px\", marginBottom: \"0\" }}>\r\n                Create new account\r\n              </h1>\r\n              <Divider />\r\n              <Form\r\n                name=\"register\"\r\n                onFinish={onFinish}\r\n                scrollToFirstError\r\n                style={{ textAlign: \"left\" }}\r\n              >\r\n                <Form.Item name=\"name\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<UserOutlined />}\r\n                    placeholder={\"Enter your name.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"email\"\r\n                  rules={[\r\n                    {\r\n                      type: \"email\",\r\n                      message: \"The input is not valid E-mail!\",\r\n                    },\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your E-mail!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<MailOutlined />}\r\n                    placeholder={\"Enter your Email ID.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item name=\"phone_no\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<PhoneOutlined />}\r\n                    placeholder={\"Enter your phone number.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item name=\"address\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<HomeOutlined />}\r\n                    placeholder={\"Enter your Address.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item name=\"class\">\r\n                  <Select placeholder={\"Select your class.\"}>\r\n                    <Option value=\"VII\">VII</Option>\r\n                    <Option value=\"VIII\">VIII</Option>\r\n                    <Option value=\"IX\">IX</Option>\r\n                    <Option value=\"X\">X</Option>\r\n                    <Option value=\"XI\">XI</Option>\r\n                    <Option value=\"XII\">XII</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"password\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your password!\",\r\n                    },\r\n                  ]}\r\n                  hasFeedback\r\n                >\r\n                  <Input.Password\r\n                    size=\"large\"\r\n                    prefix={<KeyOutlined />}\r\n                    placeholder={\"Enter your Password.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"confirmPassword\"\r\n                  hasFeedback\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please confirm your password!\",\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        if (!value || getFieldValue(\"password\") === value) {\r\n                          return Promise.resolve();\r\n                        }\r\n\r\n                        return Promise.reject(\r\n                          \"The two passwords that you entered do not match!\"\r\n                        );\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    size=\"large\"\r\n                    prefix={<KeyOutlined />}\r\n                    placeholder={\"Re-enter your Password.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    size=\"large\"\r\n                    style={{ width: \"100%\", margin: \"auto\" }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n              <Divider />\r\n              <p>\r\n                Already have an account? <Link to=\"/login\">Login</Link>\r\n              </p>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col span={4} />\r\n        </Row>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n",["203","204"],"/workspace/frontend/src/views/HomePage/FAQ.tsx",[],["205","206"],"/workspace/frontend/src/components/Dashboard/Blogs/BlogsTable.tsx",[],"/workspace/frontend/src/components/Dashboard/EForms/EFormModal.tsx",[],"/workspace/frontend/src/views/Blog/BlogPage.tsx",[],"/workspace/frontend/src/views/HomePage/Courses.tsx",[],["207","208"],"/workspace/frontend/src/components/Dashboard/Tests/TestTypeModal.tsx",[],"/workspace/frontend/src/components/Dashboard/Blogs/CreateBlog.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/DifficultyLevel.js",[],"/workspace/frontend/src/views/HomePage/Contact.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/AddQuestionPage.tsx",[],["209","210"],"/workspace/frontend/src/components/Dashboard/Profile/Profile.tsx",["211","212"],"/workspace/frontend/src/views/Dashboard/Dashboard.tsx",[],"/workspace/frontend/src/views/Blog/BlogList.tsx",["213","214","215"],"import { Avatar, Col, List, Row } from 'antd';\r\nimport React from 'react'\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { BlogListItem } from '../../components/Blog/BlogListItem';\r\nimport { BlogPage } from './BlogPage';\r\n\r\nexport const BlogList: React.FC = () => {\r\n    const data = [{\r\n        'id':1,\r\n        'title': 'How to Crack JEE',\r\n        'icon': <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />,\r\n        'content': 'How to Crack JEE in 2 Days!!!!!'\r\n    },\r\n    {\r\n        'id':2,\r\n        'title': 'How to Crack JEE',\r\n        'icon': <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />,\r\n        'content': 'How to Crack JEE in 2 Days!!!!!'\r\n    }];\r\n    return (\r\n        <Row style={{ height: '90vh', marginTop: '3%' }}>\r\n            <Col span={4} />\r\n            <Col span={16}>\r\n                <Row>\r\n                    <h1 style={{ fontSize: \"2.3rem\", margin: 'auto' }}>Blog List</h1>\r\n                </Row>\r\n                <Row>\r\n                    <List\r\n                        dataSource={data}\r\n                        itemLayout=\"vertical\"\r\n                        size=\"large\"\r\n                        style={{ width: '100%', textAlign: 'left' }}\r\n                        pagination={{\r\n                            onChange: page => {\r\n                                console.log(page);\r\n                            },\r\n                            pageSize: 3,\r\n                        }}\r\n                        extra={\r\n                            <img\r\n                                width={272}\r\n                                alt=\"logo\"\r\n                                src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n                            />\r\n                        }\r\n                        renderItem={item => (\r\n                            <BlogListItem id={item.id} icon={item.icon} title={item.title} description={item.content} />\r\n                        )}>\r\n                    </List>\r\n                    \r\n                </Row>\r\n            </Col>\r\n            <Col span={4} />\r\n        </Row>\r\n    );\r\n}",["216","217"],"/workspace/frontend/src/views/HomePage/HomePage.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/ReportedQuestions.tsx",[],"/workspace/frontend/src/components/Errors/Error400.tsx",[],"/workspace/frontend/src/components/Dashboard/EForms/EForms.tsx",["218"],"/workspace/frontend/src/components/Test/TestDetails.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/QuestionModal.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/AddQuestion.tsx",["219"],"import { Card, Table, Button, Space, message } from \"antd\";\nimport React, { useState } from \"react\";\nimport { QuestionModal } from \"./QuestionModal\";\nimport axios from \"axios\";\nimport env from \"react-dotenv\";\ninterface QuestionInterface {\n  qid: number;\n  statement: string;\n  img_path?: string;\n  type: string;\n  subject: string;\n  topic: string;\n  subtopic?: string;\n  level: string;\n  archive?: string;\n  is_reported: boolean | undefined;\n}\nexport const AddQuestion: React.FC = () => {\n  const [questions, setQuestions] = useState<\n    Array<QuestionInterface> | undefined\n  >(undefined);\n  const uploadQuestions = async (values: QuestionInterface) => {\n    console.log(values);\n    try {\n      if (questions === undefined) {\n        setQuestions([values]);\n      } else {\n        setQuestions([...questions, values]);\n      }\n      const response = await axios.post(\n        `https://${env.NODEJS_URL}/admin/question`,\n        {\n          statement: values.statement,\n          img_path: values.img_path,\n          type: values.type,\n          subject: values.subject,\n          topic: values.topic,\n          subtopic: values.subtopic,\n          level: values.level,\n          archive: values.archive,\n          is_reported: values.is_reported,\n        },\n        {\n          headers: {\n            authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        }\n      );\n      \n      console.log(response);\n    } catch (e) {\n      console.log(\"Couldn't Update\");\n    }\n    message.success(\"Uploaded Questions\");\n  };\n  const columns = [\n    {\n      title: \"Statement\",\n      dataIndex: \"statement\",\n      key: \"statement\",\n    },\n    {\n      title: \"Subject\",\n      dataIndex: \"subject\",\n      key: \"subject\",\n    },\n    {\n      title: \"Topic\",\n      dataIndex: \"topic\",\n      key: \"topic\",\n    },\n    {\n      title: \"Type\",\n      dataIndex: \"type\",\n      key: \"type\",\n    },\n    {\n      title: \"Action\",\n      dataIndex: \"\",\n      key: \"action\",\n      render: (text: any, record: QuestionInterface) => (\n        <>\n          <QuestionModal\n            submitEdit={undefined}\n            submitNew={uploadQuestions}\n            Question={record}\n            buttonText=\"View Question\"\n          />\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <div style={{ textAlign: \"left\" }}>\n      <Card\n        style={{ textAlign: \"left\", borderRadius: \"10px\" }}\n        title={<h1 style={{ fontSize: \"30px\" }}>Questions to be added</h1>}\n        extra={\n          <Space>\n            <QuestionModal\n            submitNew={uploadQuestions}\n            submitEdit={undefined}\n            buttonText=\"Add Question\"\n          />\n          </Space>\n        }\n      >\n        <Table\n          columns={columns}\n          dataSource={questions}\n          style={{ width: \"100%\" }}\n        />\n      </Card>\n    </div>\n  );\n};\n","/workspace/frontend/src/components/Test/TestIntruction.tsx",[],"/workspace/frontend/src/App.tsx",["220"],"/workspace/frontend/src/routes.js",[],"/workspace/frontend/src/context/User/UserState.tsx",[],"/workspace/frontend/src/views/Test/Test.tsx",["221","222","223","224","225","226","227"],"/workspace/frontend/src/views/HomePage/CourseData.js",[],"/workspace/frontend/src/components/Dashboard/Questions/UploadQuestions.tsx",[],"/workspace/frontend/src/components/Analysis/SubjectAnalysis.tsx",[],"/workspace/frontend/src/views/Analysis/TestAnalysis.tsx",[],"/workspace/frontend/src/context/User/UserContext.tsx",[],["228","229"],"/workspace/frontend/src/context/User/UserReducer.tsx",[],"/workspace/frontend/src/components/Dashboard/EForms/EFormsAnalysis.tsx",[],"/workspace/frontend/src/components/Dashboard/Tests/TestTypes.tsx",["230","231"],"/workspace/frontend/src/components/Test/QuestionComponent.tsx",[],{"ruleId":"232","severity":1,"message":"233","line":2,"column":29,"nodeType":"234","messageId":"235","endLine":2,"endColumn":37},{"ruleId":"232","severity":1,"message":"236","line":6,"column":8,"nodeType":"234","messageId":"235","endLine":6,"endColumn":13},{"ruleId":"237","severity":1,"message":"238","line":82,"column":15,"nodeType":"239","endLine":82,"endColumn":18},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","replacedBy":"243"},{"ruleId":"240","replacedBy":"244"},{"ruleId":"242","replacedBy":"245"},{"ruleId":"232","severity":1,"message":"233","line":2,"column":17,"nodeType":"234","messageId":"235","endLine":2,"endColumn":25},{"ruleId":"232","severity":1,"message":"246","line":1,"column":26,"nodeType":"234","messageId":"235","endLine":1,"endColumn":33},{"ruleId":"232","severity":1,"message":"247","line":10,"column":3,"nodeType":"234","messageId":"235","endLine":10,"endColumn":22},{"ruleId":"240","replacedBy":"248"},{"ruleId":"242","replacedBy":"249"},{"ruleId":"240","replacedBy":"250"},{"ruleId":"242","replacedBy":"251"},{"ruleId":"240","replacedBy":"252"},{"ruleId":"242","replacedBy":"253"},{"ruleId":"240","replacedBy":"254"},{"ruleId":"242","replacedBy":"255"},{"ruleId":"232","severity":1,"message":"256","line":1,"column":34,"nodeType":"234","messageId":"235","endLine":1,"endColumn":46},{"ruleId":"232","severity":1,"message":"257","line":1,"column":65,"nodeType":"234","messageId":"235","endLine":1,"endColumn":72},{"ruleId":"232","severity":1,"message":"258","line":3,"column":10,"nodeType":"234","messageId":"235","endLine":3,"endColumn":15},{"ruleId":"232","severity":1,"message":"259","line":3,"column":17,"nodeType":"234","messageId":"235","endLine":3,"endColumn":23},{"ruleId":"232","severity":1,"message":"260","line":5,"column":10,"nodeType":"234","messageId":"235","endLine":5,"endColumn":18},{"ruleId":"240","replacedBy":"261"},{"ruleId":"242","replacedBy":"262"},{"ruleId":"232","severity":1,"message":"263","line":1,"column":31,"nodeType":"234","messageId":"235","endLine":1,"endColumn":38},{"ruleId":"232","severity":1,"message":"264","line":1,"column":23,"nodeType":"234","messageId":"235","endLine":1,"endColumn":29},{"ruleId":"265","severity":1,"message":"266","line":18,"column":5,"nodeType":"267","endLine":18,"endColumn":7,"suggestions":"268"},{"ruleId":"232","severity":1,"message":"269","line":21,"column":23,"nodeType":"234","messageId":"235","endLine":21,"endColumn":35},{"ruleId":"232","severity":1,"message":"270","line":22,"column":12,"nodeType":"234","messageId":"235","endLine":22,"endColumn":19},{"ruleId":"232","severity":1,"message":"271","line":22,"column":21,"nodeType":"234","messageId":"235","endLine":22,"endColumn":31},{"ruleId":"232","severity":1,"message":"272","line":23,"column":21,"nodeType":"234","messageId":"235","endLine":23,"endColumn":31},{"ruleId":"232","severity":1,"message":"273","line":24,"column":11,"nodeType":"234","messageId":"235","endLine":24,"endColumn":23},{"ruleId":"232","severity":1,"message":"274","line":27,"column":11,"nodeType":"234","messageId":"235","endLine":27,"endColumn":21},{"ruleId":"232","severity":1,"message":"275","line":30,"column":11,"nodeType":"234","messageId":"235","endLine":30,"endColumn":25},{"ruleId":"240","replacedBy":"276"},{"ruleId":"242","replacedBy":"277"},{"ruleId":"232","severity":1,"message":"278","line":1,"column":38,"nodeType":"234","messageId":"235","endLine":1,"endColumn":45},{"ruleId":"265","severity":1,"message":"279","line":60,"column":6,"nodeType":"267","endLine":60,"endColumn":8,"suggestions":"280"},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["281"],"no-negated-in-lhs",["282"],["281"],["282"],"'Divider' is defined but never used.","'AccountBookOutlined' is defined but never used.",["281"],["282"],["281"],["282"],["281"],["282"],["281"],["282"],"'Descriptions' is defined but never used.","'Tooltip' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'BlogPage' is defined but never used.",["281"],["282"],"'Popover' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userContext'. Either include it or remove the dependency array.","ArrayExpression",["283"],"'setQuestions' is assigned a value but never used.","'answers' is assigned a value but never used.","'setAnswers' is assigned a value but never used.","'setOptions' is assigned a value but never used.","'getQuestions' is assigned a value but never used.","'getOptions' is assigned a value but never used.","'onSelectAnswer' is assigned a value but never used.",["281"],["282"],"'message' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchTestDetails'. Either include it or remove the dependency array.",["284"],"no-global-assign","no-unsafe-negation",{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},"Update the dependencies array to be: [userContext]",{"range":"289","text":"290"},"Update the dependencies array to be: [fetchTestDetails]",{"range":"291","text":"292"},[595,597],"[userContext]",[1279,1281],"[fetchTestDetails]"]