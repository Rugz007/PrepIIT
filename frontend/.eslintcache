[{"/workspace/frontend/src/index.tsx":"1","/workspace/frontend/src/views/Auth/Login.tsx":"2","/workspace/frontend/src/views/HomePage/About.tsx":"3","/workspace/frontend/src/components/Dashboard/EForms/EFormSettings.tsx":"4","/workspace/frontend/src/components/Dashboard/Questions/QuestionBank.tsx":"5","/workspace/frontend/src/components/Blog/BlogListItem.tsx":"6","/workspace/frontend/src/components/Test/TestCard.tsx":"7","/workspace/frontend/src/views/Test/TestsPage.tsx":"8","/workspace/frontend/src/components/Navbar.tsx":"9","/workspace/frontend/src/reportWebVitals.ts":"10","/workspace/frontend/src/views/Auth/Register.tsx":"11","/workspace/frontend/src/views/HomePage/FAQ.tsx":"12","/workspace/frontend/src/components/Dashboard/Blogs/BlogsTable.tsx":"13","/workspace/frontend/src/components/Dashboard/EForms/EFormModal.tsx":"14","/workspace/frontend/src/views/Blog/BlogPage.tsx":"15","/workspace/frontend/src/views/HomePage/Courses.tsx":"16","/workspace/frontend/src/components/Dashboard/Tests/TestTypeModal.tsx":"17","/workspace/frontend/src/components/Dashboard/Blogs/CreateBlog.tsx":"18","/workspace/frontend/src/components/Dashboard/Questions/DifficultyLevel.js":"19","/workspace/frontend/src/views/HomePage/Contact.tsx":"20","/workspace/frontend/src/components/Dashboard/Questions/AddQuestionPage.tsx":"21","/workspace/frontend/src/components/Dashboard/Profile/Profile.tsx":"22","/workspace/frontend/src/views/Dashboard/Dashboard.tsx":"23","/workspace/frontend/src/views/Blog/BlogList.tsx":"24","/workspace/frontend/src/views/HomePage/HomePage.tsx":"25","/workspace/frontend/src/components/Dashboard/Questions/ReportedQuestions.tsx":"26","/workspace/frontend/src/components/Errors/Error400.tsx":"27","/workspace/frontend/src/components/Dashboard/EForms/EForms.tsx":"28","/workspace/frontend/src/components/Test/TestDetails.tsx":"29","/workspace/frontend/src/components/Dashboard/Questions/QuestionModal.tsx":"30","/workspace/frontend/src/components/Dashboard/Questions/AddQuestion.tsx":"31","/workspace/frontend/src/components/Test/TestIntruction.tsx":"32","/workspace/frontend/src/App.tsx":"33","/workspace/frontend/src/routes.js":"34","/workspace/frontend/src/context/User/UserState.tsx":"35","/workspace/frontend/src/views/Test/Test.tsx":"36","/workspace/frontend/src/views/HomePage/CourseData.js":"37","/workspace/frontend/src/components/Dashboard/Questions/UploadQuestions.tsx":"38","/workspace/frontend/src/components/Analysis/SubjectAnalysis.tsx":"39","/workspace/frontend/src/views/Analysis/TestAnalysis.tsx":"40","/workspace/frontend/src/context/User/UserContext.tsx":"41","/workspace/frontend/src/context/User/UserReducer.tsx":"42","/workspace/frontend/src/components/Dashboard/EForms/EFormsAnalysis.tsx":"43","/workspace/frontend/src/components/Dashboard/Tests/TestTypes.tsx":"44","/workspace/frontend/src/components/Test/QuestionComponent.tsx":"45","/workspace/frontend/src/components/Errors/Error404.tsx":"46","/workspace/frontend/src/components/HomePage/EnquiryForm.tsx":"47","/workspace/frontend/src/components/Footer.tsx":"48","/workspace/frontend/src/context/User/type.js":"49"},{"size":607,"mtime":1617379026832,"results":"50","hashOfConfig":"51"},{"size":3113,"mtime":1615695265021,"results":"52","hashOfConfig":"51"},{"size":5352,"mtime":1617296180340,"results":"53","hashOfConfig":"51"},{"size":927,"mtime":1614962687762,"results":"54","hashOfConfig":"51"},{"size":4156,"mtime":1615448717589,"results":"55","hashOfConfig":"51"},{"size":630,"mtime":1614962687762,"results":"56","hashOfConfig":"51"},{"size":2004,"mtime":1617363592800,"results":"57","hashOfConfig":"51"},{"size":2491,"mtime":1617811889847,"results":"58","hashOfConfig":"51"},{"size":4227,"mtime":1617364660616,"results":"59","hashOfConfig":"51"},{"size":440,"mtime":1613446567358,"results":"60","hashOfConfig":"51"},{"size":5850,"mtime":1615450345256,"results":"61","hashOfConfig":"51"},{"size":8363,"mtime":1617295525884,"results":"62","hashOfConfig":"51"},{"size":1459,"mtime":1614962687762,"results":"63","hashOfConfig":"51"},{"size":1838,"mtime":1617379492964,"results":"64","hashOfConfig":"51"},{"size":5558,"mtime":1614962687762,"results":"65","hashOfConfig":"51"},{"size":8687,"mtime":1617300177796,"results":"66","hashOfConfig":"51"},{"size":5607,"mtime":1615803654817,"results":"67","hashOfConfig":"51"},{"size":1566,"mtime":1614962687762,"results":"68","hashOfConfig":"51"},{"size":223,"mtime":1614962687762,"results":"69","hashOfConfig":"51"},{"size":1997,"mtime":1617301377272,"results":"70","hashOfConfig":"51"},{"size":588,"mtime":1614962687762,"results":"71","hashOfConfig":"51"},{"size":3300,"mtime":1615610531929,"results":"72","hashOfConfig":"51"},{"size":5115,"mtime":1617364745284,"results":"73","hashOfConfig":"51"},{"size":2168,"mtime":1614962687762,"results":"74","hashOfConfig":"51"},{"size":3867,"mtime":1617297280440,"results":"75","hashOfConfig":"51"},{"size":3091,"mtime":1615610026777,"results":"76","hashOfConfig":"51"},{"size":395,"mtime":1614962687762,"results":"77","hashOfConfig":"51"},{"size":2809,"mtime":1615011568240,"results":"78","hashOfConfig":"51"},{"size":2508,"mtime":1617380270188,"results":"79","hashOfConfig":"51"},{"size":6554,"mtime":1617809596071,"results":"80","hashOfConfig":"51"},{"size":2854,"mtime":1617379492968,"results":"81","hashOfConfig":"51"},{"size":3784,"mtime":1616399429740,"results":"82","hashOfConfig":"51"},{"size":780,"mtime":1617379021356,"results":"83","hashOfConfig":"51"},{"size":2041,"mtime":1617809580795,"results":"84","hashOfConfig":"51"},{"size":2693,"mtime":1617379547812,"results":"85","hashOfConfig":"51"},{"size":6624,"mtime":1617809720295,"results":"86","hashOfConfig":"51"},{"size":1006,"mtime":1614962687762,"results":"87","hashOfConfig":"51"},{"size":1327,"mtime":1617362600244,"results":"88","hashOfConfig":"51"},{"size":2556,"mtime":1615883566286,"results":"89","hashOfConfig":"51"},{"size":6463,"mtime":1616338930832,"results":"90","hashOfConfig":"51"},{"size":158,"mtime":1613446567358,"results":"91","hashOfConfig":"51"},{"size":1396,"mtime":1617810838683,"results":"92","hashOfConfig":"51"},{"size":299,"mtime":1614962687762,"results":"93","hashOfConfig":"51"},{"size":2155,"mtime":1615448717589,"results":"94","hashOfConfig":"51"},{"size":2006,"mtime":1616955447876,"results":"95","hashOfConfig":"51"},{"size":408,"mtime":1614962687762,"results":"96","hashOfConfig":"51"},{"size":3425,"mtime":1617291662690,"results":"97","hashOfConfig":"51"},{"size":3213,"mtime":1617292277242,"results":"98","hashOfConfig":"51"},{"size":511,"mtime":1614962687762,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b3atdm",{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"169"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"137"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/workspace/frontend/src/index.tsx",[],"/workspace/frontend/src/views/Auth/Login.tsx",["224","225","226"],"/workspace/frontend/src/views/HomePage/About.tsx",[],["227","228"],"/workspace/frontend/src/components/Dashboard/EForms/EFormSettings.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/QuestionBank.tsx",[],["229","230"],"/workspace/frontend/src/components/Blog/BlogListItem.tsx",[],["231","232"],"/workspace/frontend/src/components/Test/TestCard.tsx",[],["233","234"],"/workspace/frontend/src/views/Test/TestsPage.tsx",["235","236"],"/workspace/frontend/src/components/Navbar.tsx",[],"/workspace/frontend/src/reportWebVitals.ts",[],"/workspace/frontend/src/views/Auth/Register.tsx",["237"],"import Layout, { Content } from \"antd/lib/layout/layout\";\r\nimport React, { useContext } from \"react\";\r\nimport { Row, Col, Form, Input, Card, Divider, Button, Select } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  KeyOutlined,\r\n  MailOutlined,\r\n  PhoneOutlined,\r\n  HomeOutlined,\r\n  AccountBookOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../../context/User/UserContext\";\r\nconst { Option } = Select;\r\ninterface RegisterInterface {\r\n  name: string;\r\n  email: string;\r\n  phone_no: string;\r\n  address: string;\r\n  standard: string;\r\n  password: string;\r\n  confirmPassword?: string;\r\n}\r\n\r\nexport const Register: React.FC = () => {\r\n  let history = useHistory();\r\n\r\n  const userContext = useContext(UserContext);\r\n  const onFinish = (values: RegisterInterface) => {\r\n    delete values.confirmPassword;\r\n    userContext.register(values);\r\n    history.push(\"/login\");\r\n  };\r\n  return (\r\n    <Layout>\r\n      <Content style={{ backgroundColor: \"#1c2229\", paddingBottom: \"4%\" }}>\r\n        <Row>\r\n          <Col span={4} />\r\n          <Col span={16} style={{ padding: \".4%\", paddingTop: \"1%\" }}>\r\n            <Card\r\n              style={{ height: \"100%\", borderRadius: \"17px\", margin: \"0% 30%\" }}\r\n            >\r\n              <img\r\n                src=\"logo-nobg.png\"\r\n                alt=\"logo\"\r\n                style={{ width: \"46%\", margin: \"auto\" }}\r\n              />\r\n              <h1 style={{ fontSize: \"25px\", marginBottom: \"0\" }}>\r\n                Create new account\r\n              </h1>\r\n              <Divider />\r\n              <Form\r\n                name=\"register\"\r\n                onFinish={onFinish}\r\n                scrollToFirstError\r\n                style={{ textAlign: \"left\" }}\r\n              >\r\n                <Form.Item name=\"name\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<UserOutlined />}\r\n                    placeholder={\"Enter your name.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"email\"\r\n                  rules={[\r\n                    {\r\n                      type: \"email\",\r\n                      message: \"The input is not valid E-mail!\",\r\n                    },\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your E-mail!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<MailOutlined />}\r\n                    placeholder={\"Enter your Email ID.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item name=\"phone_no\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<PhoneOutlined />}\r\n                    placeholder={\"Enter your phone number.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item name=\"address\">\r\n                  <Input\r\n                    size=\"large\"\r\n                    prefix={<HomeOutlined />}\r\n                    placeholder={\"Enter your Address.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item name=\"class\">\r\n                  <Select placeholder={\"Select your class.\"}>\r\n                    <Option value=\"VII\">VII</Option>\r\n                    <Option value=\"VIII\">VIII</Option>\r\n                    <Option value=\"IX\">IX</Option>\r\n                    <Option value=\"X\">X</Option>\r\n                    <Option value=\"XI\">XI</Option>\r\n                    <Option value=\"XII\">XII</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"password\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your password!\",\r\n                    },\r\n                  ]}\r\n                  hasFeedback\r\n                >\r\n                  <Input.Password\r\n                    size=\"large\"\r\n                    prefix={<KeyOutlined />}\r\n                    placeholder={\"Enter your Password.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"confirmPassword\"\r\n                  hasFeedback\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please confirm your password!\",\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(_, value) {\r\n                        if (!value || getFieldValue(\"password\") === value) {\r\n                          return Promise.resolve();\r\n                        }\r\n\r\n                        return Promise.reject(\r\n                          \"The two passwords that you entered do not match!\"\r\n                        );\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input.Password\r\n                    size=\"large\"\r\n                    prefix={<KeyOutlined />}\r\n                    placeholder={\"Re-enter your Password.\"}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    size=\"large\"\r\n                    style={{ width: \"100%\", margin: \"auto\" }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n              <Divider />\r\n              <p>\r\n                Already have an account? <Link to=\"/login\">Login</Link>\r\n              </p>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col span={4} />\r\n        </Row>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n",["238","239"],"/workspace/frontend/src/views/HomePage/FAQ.tsx",[],"/workspace/frontend/src/components/Dashboard/Blogs/BlogsTable.tsx",[],["240","241"],"/workspace/frontend/src/components/Dashboard/EForms/EFormModal.tsx",[],"/workspace/frontend/src/views/Blog/BlogPage.tsx",[],["242","243"],"/workspace/frontend/src/views/HomePage/Courses.tsx",[],"/workspace/frontend/src/components/Dashboard/Tests/TestTypeModal.tsx",[],["244","245"],"/workspace/frontend/src/components/Dashboard/Blogs/CreateBlog.tsx",[],["246","247"],"/workspace/frontend/src/components/Dashboard/Questions/DifficultyLevel.js",[],["248","249"],"/workspace/frontend/src/views/HomePage/Contact.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/AddQuestionPage.tsx",[],"/workspace/frontend/src/components/Dashboard/Profile/Profile.tsx",["250","251"],"import { Card, Row, Col, Avatar, Descriptions, Divider, Button, Tooltip } from 'antd';\r\nimport React, { useContext } from 'react'\r\nimport UserContext from '../../../context/User/UserContext';\r\nimport CalendarHeatmap from 'react-calendar-heatmap';\r\nimport 'react-calendar-heatmap/dist/styles.css';\r\nimport './Profile.css'\r\nimport ReactTooltip from 'react-tooltip';\r\ninterface ProfileProps {\r\n\r\n}\r\n\r\nexport const Profile: React.FC<ProfileProps> = () => {\r\n    const userContext = useContext(UserContext);\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <h1 style={{ fontSize: '40px' }}>My Profile</h1>\r\n            </Row>\r\n            <Row>\r\n                <div style={{ width: '100%', margin: 'auto' }}>\r\n                    <Avatar size={{ xs: 24, sm: 32, md: 40, lg: 64, xl: 80, xxl: 100 }} />\r\n                    {userContext.user && <h1 style={{ fontSize: '2rem', marginTop: \"1%\", marginBottom: '0' }}><b>{userContext.user.name}</b></h1>}\r\n                    <h1 style={{ fontSize: '1rem' }}>Class:XII</h1>\r\n                    <h1 style={{ fontSize: '1rem' }}>Located at: Nashik,Maharashtra</h1>\r\n                </div>\r\n            </Row>\r\n            <Divider />\r\n            <Row gutter={24}>\r\n                <Col span={8}>\r\n                    <Card title={<h2>Subscription Type</h2>} style={{ textAlign: 'left' }}>\r\n                        <Row>\r\n                            <Col span={24}><h2>Type: Free</h2></Col>\r\n                            <Col span={24}><h2>Duration: --</h2></Col>\r\n                            \r\n                       </Row>\r\n                        <Button style={{ float: 'right' }} type='primary'>Upgrade!</Button>\r\n                    </Card>\r\n                </Col>\r\n                <Col span={16}>\r\n                    <Card title={<h2>Your Test Activity</h2>} style={{ textAlign: 'left' }}>\r\n                        <CalendarHeatmap\r\n                            startDate={new Date('2015-12-31')}\r\n                            endDate={new Date('2016-12-01')}\r\n                            values={[\r\n                                { date: '2016-01-01', count: 1 },\r\n                                { date: '2016-01-12', count: 1 },\r\n                                { date: '2016-02-12', count: 1 },\r\n                                { date: '2016-01-30', count: 1 },\r\n                                // ...and so on\r\n                            ]}\r\n                            classForValue={(value) => {\r\n                                if (!value) {\r\n                                    return 'color-empty';\r\n                                }\r\n                                return `color-scale-${value.count}`;\r\n                            }}\r\n                            tooltipDataAttrs={(value: any | null) => {\r\n                                if (value.date) {\r\n                                    return {\r\n                                        'data-tip': `On ${value.date.slice(0, 10)}, ${value.count} tests were given.`,\r\n                                    };\r\n                                }\r\n                            }\r\n                            }\r\n                        />\r\n                        <ReactTooltip/>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n\r\n    );\r\n}",["252","253"],"/workspace/frontend/src/views/Dashboard/Dashboard.tsx",[],"/workspace/frontend/src/views/Blog/BlogList.tsx",["254","255","256"],"import { Avatar, Col, List, Row } from 'antd';\r\nimport React from 'react'\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { BlogListItem } from '../../components/Blog/BlogListItem';\r\nimport { BlogPage } from './BlogPage';\r\n\r\nexport const BlogList: React.FC = () => {\r\n    const data = [{\r\n        'id':1,\r\n        'title': 'How to Crack JEE',\r\n        'icon': <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />,\r\n        'content': 'How to Crack JEE in 2 Days!!!!!'\r\n    },\r\n    {\r\n        'id':2,\r\n        'title': 'How to Crack JEE',\r\n        'icon': <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />,\r\n        'content': 'How to Crack JEE in 2 Days!!!!!'\r\n    }];\r\n    return (\r\n        <Row style={{ height: '90vh', marginTop: '3%' }}>\r\n            <Col span={4} />\r\n            <Col span={16}>\r\n                <Row>\r\n                    <h1 style={{ fontSize: \"2.3rem\", margin: 'auto' }}>Blog List</h1>\r\n                </Row>\r\n                <Row>\r\n                    <List\r\n                        dataSource={data}\r\n                        itemLayout=\"vertical\"\r\n                        size=\"large\"\r\n                        style={{ width: '100%', textAlign: 'left' }}\r\n                        pagination={{\r\n                            onChange: page => {\r\n                                console.log(page);\r\n                            },\r\n                            pageSize: 3,\r\n                        }}\r\n                        extra={\r\n                            <img\r\n                                width={272}\r\n                                alt=\"logo\"\r\n                                src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n                            />\r\n                        }\r\n                        renderItem={item => (\r\n                            <BlogListItem id={item.id} icon={item.icon} title={item.title} description={item.content} />\r\n                        )}>\r\n                    </List>\r\n                    \r\n                </Row>\r\n            </Col>\r\n            <Col span={4} />\r\n        </Row>\r\n    );\r\n}",["257","258"],"/workspace/frontend/src/views/HomePage/HomePage.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/ReportedQuestions.tsx",[],"/workspace/frontend/src/components/Errors/Error400.tsx",[],["259","260"],"/workspace/frontend/src/components/Dashboard/EForms/EForms.tsx",["261"],"import { Card, Table, Button, Popover, Popconfirm } from \"antd\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { EFormModal } from \"./EFormModal\";\r\nimport env from \"react-dotenv\";\r\n\r\ninterface EFormInterface {\r\n  name: string;\r\n  email: string;\r\n  number: string;\r\n  standard: string;\r\n  type: string;\r\n  enqid: Number;\r\n}\r\n\r\n\r\n\r\nexport const EForms: React.FC = () => {\r\n  const [forms, setForms] = useState<EFormInterface[] | undefined>([]);\r\n  useEffect(() => {\r\n    fetchForms();\r\n  }, []);\r\n\r\n\r\n  const fetchForms = async () => {\r\n    try {\r\n      const res = await axios.get(`https://${env.NODEJS_URL}/admin/enquiry`, {\r\n        headers: {\r\n          authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      setForms(res.data);\r\n    } catch (e) {\r\n      console.log(\"Forms not loaded!\");\r\n    }\r\n  };\r\n  const deleteEnquiry = async (\r\n    enqid: Number,\r\n    forms: any[] | undefined,\r\n    setForms: React.Dispatch<React.SetStateAction<EFormInterface[] | undefined>>\r\n  ) => {\r\n    try {\r\n      const response = await axios({\r\n        method: \"DELETE\",\r\n        url: `https://${env.NODEJS_URL}/admin/enquiry`,\r\n        headers: {\r\n          authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n        },\r\n        data: {\r\n          enqid: enqid,\r\n        },\r\n      });\r\n      console.log(response);\r\n      if (forms) {\r\n        const newState = forms.filter(\r\n          (item: { enqid: Number }) => item.enqid !== enqid\r\n        );\r\n        setForms(newState);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"Class\",\r\n      dataIndex: \"standard\",\r\n      key: \"standard\",\r\n    },\r\n    {\r\n      title: \"Type\",\r\n      dataIndex: \"type\",\r\n      key: \"type\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"\",\r\n      key: \"action\",\r\n      render: (text: any, record: EFormInterface) => (\r\n        <>\r\n          <EFormModal EForm={record} />\r\n          <Popconfirm\r\n            title=\"Are you sure you want to delete this question?\"\r\n            onConfirm={() => deleteEnquiry(record.enqid, forms, setForms)}>\r\n            <Button\r\n\r\n              type=\"primary\"\r\n              danger\r\n            >\r\n              Delete\r\n          </Button>\r\n          </Popconfirm>\r\n\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <div style={{ textAlign: \"left\" }}>\r\n      <h1 style={{ fontSize: \"40px\" }}>Enquiry Forms</h1>\r\n      <Card style={{ textAlign: \"left\", borderRadius: \"10px\" }}>\r\n        <h1 style={{ fontSize: \"30px\" }}>View Latest Enquiry Forms</h1>\r\n        <Table columns={columns} dataSource={forms} style={{ width: \"100%\" }} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","/workspace/frontend/src/components/Test/TestDetails.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/QuestionModal.tsx",[],"/workspace/frontend/src/components/Dashboard/Questions/AddQuestion.tsx",["262"],"/workspace/frontend/src/components/Test/TestIntruction.tsx",[],"/workspace/frontend/src/App.tsx",["263"],"import React, { useContext, useEffect } from \"react\";\r\nimport './App.less';\r\nimport \"antd/dist/antd.dark.css\";\r\nimport { Navbar } from './components/Navbar';\r\nimport AOS from \"aos\";\r\nimport 'aos/dist/aos.css';\r\nimport Routes from './routes';\r\nimport { Footer } from './components/Footer';\r\nimport UserContext from \"./context/User/UserContext\";\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nAOS.init();\r\nfunction App() {\r\n  const userContext = useContext<any>(UserContext);\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      userContext.loadUser();\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Navbar />\r\n        <Routes />\r\n        <Footer />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/workspace/frontend/src/routes.js",[],"/workspace/frontend/src/context/User/UserState.tsx",[],"/workspace/frontend/src/views/Test/Test.tsx",["264","265"],"import { Button, Card, Col, Popconfirm, Row, Tabs } from 'antd';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { QuestionComponent } from '../../components/Test/QuestionComponent';\r\nimport { TestDetails } from '../../components/Test/TestDetails';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { TestIntruction } from '../../components/Test/TestIntruction';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nconst { REACT_APP_NODEJS_URL } = process.env;\r\n\r\ninterface QuestionInterface {\r\n  qid: number,\r\n  statement: string,\r\n  img_path: string,\r\n  type: string,\r\n  archive: string,\r\n  latex: string,\r\n  options: string[],\r\n};\r\n// interface ResponseInterface {\r\n//     userTestId: string,\r\n//     subjects: string[],\r\n//     Physics: Array<QuestionInterface[]>,\r\n//     Chemistry: Array<QuestionInterface[]>,\r\n//     Maths: Array<QuestionInterface[]>,\r\n// }\r\n// interface AnswersInterface {\r\n//     questionID: number;\r\n//     answer: string | number | null;\r\n// };\r\n\r\nexport const Test: React.FC = () => {\r\n  const [readInstructions, setReadInstructions] = useState(false)\r\n  const [current, setCurrent] = useState<number>(1);\r\n  const [tab, setTab] = useState(\"Physics\")\r\n  const [response, setResponse]: any = useState(undefined)\r\n  const [answers, setAnswers]: any = useState(undefined);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    console.log(\"Hello world\")\r\n    localStorage.setItem(\"answers\", JSON.stringify(answers))\r\n  }, [answers])\r\n  const getQuestions = () => {\r\n    let testID = localStorage.getItem(\"testid\")\r\n    if (testID) {\r\n      axios({\r\n        method: \"POST\",\r\n        url: `https://${REACT_APP_NODEJS_URL}/secure/test`,\r\n        headers: {\r\n          authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n        },\r\n        data: {\r\n          \"typeid\": testID\r\n        },\r\n      }).then(res => {\r\n        setResponse(res.data)\r\n        let questionsMap: any = {}\r\n        res.data['subjects'].map((subject: any) =>\r\n        (\r\n          res.data[subject].map((item: any, index: number) => (\r\n            questionsMap[item['qid']] = [item['qid'], [\"a\"], \"\", \"Not Visited\"]\r\n          ))\r\n        ))\r\n        setAnswers(questionsMap)\r\n      }).catch(err => console.log(err))\r\n    }\r\n    else{\r\n      console.log(\"No TestID\")\r\n    }\r\n\r\n  };\r\n  const onSelectAnswer = (e: any) => {\r\n    var questionID = response[tab][current - 1]['qid']\r\n    setAnswers({ ...answers, [questionID]: [response[tab][current - 1]['qid'], [e.target.value], \"15\", \"Marked\"] });\r\n  };\r\n  const onNext = () => {\r\n    if (current !== response[tab].length) {\r\n      var questionID = response[tab][current - 1]['qid']\r\n      var temp = { ...answers }\r\n      if (temp[questionID][3] === \"Not Visited\") {\r\n        temp[questionID][3] = \"Visited\"\r\n        setAnswers(temp)\r\n      }\r\n      setCurrent(current + 1)\r\n    }\r\n  };\r\n  const onPrevious = () => {\r\n    if (current !== 1) {\r\n      var questionID = response[tab][current - 1]['qid']\r\n      var temp = { ...answers }\r\n      if (temp[questionID][3] === \"Not Visited\") {\r\n        temp[questionID][3] = \"Visited\"\r\n        setAnswers(temp)\r\n      }\r\n      setCurrent(current - 1)\r\n    }\r\n  };\r\n  const onChangeTab = (e: any) => {\r\n    setTab(e)\r\n    setCurrent(1)\r\n  }\r\n  const readInstruct = () => {\r\n    setReadInstructions(true);\r\n    getQuestions();\r\n  }\r\n  const changeCurrent = (e: number) => {\r\n    var questionID = response[tab][current - 1]['qid']\r\n    var temp = { ...answers }\r\n    temp[questionID][3] = \"Visited\"\r\n    setAnswers(temp)\r\n    setCurrent(e)\r\n\r\n  }\r\n  const markForReview = () => {\r\n    var questionID = response[tab][current - 1]['qid']\r\n    var temp = { ...answers }\r\n    if (temp[questionID][3] === \"MarkedForReview\") {\r\n      if (temp[questionID][1][0] === undefined) {\r\n        temp[questionID][3] = \"Visited\"\r\n      }\r\n      else {\r\n        temp[questionID][3] = \"Marked\"\r\n      }\r\n    }\r\n    else {\r\n      temp[questionID][3] = \"MarkedForReview\"\r\n    }\r\n    setAnswers(temp)\r\n    onNext()\r\n  }\r\n  const onSubmit = () => {\r\n    let temp: any = [];\r\n    for (const [key, value] of Object.entries(answers)) {\r\n      temp.push(value);\r\n    }\r\n    axios({\r\n      method: \"POST\",\r\n      url: `https://${REACT_APP_NODEJS_URL}/secure/verifyanswers`,\r\n      headers: {\r\n        authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      },\r\n      data: {\r\n        testid: 17,\r\n        userid: 1,\r\n        donetestid: response.userTestId,\r\n        questions: temp\r\n      },\r\n    }).then(res => {\r\n      localStorage.removeItem(\"testid\");\r\n      history.push(\"/\");\r\n      console.log(res);\r\n    }).catch(err => console.log(err))\r\n\r\n  };\r\n  return (\r\n    <div>\r\n      <Row style={{ height: '2vh' }}>\r\n        TestBar\r\n            </Row>\r\n      {readInstructions ?\r\n        <Row style={{ padding: '2%' }}>\r\n          <Col span={18}>\r\n            <Row>\r\n              <Col span={2}><Button onClick={onPrevious} type='primary' danger style={{ float: 'left' }}>Previous</Button></Col>\r\n              <Col span={20}><Card style={{ width: '100%' }}> Time Remaining</Card></Col>\r\n              <Col span={2}> <Button onClick={onNext} type='primary' style={{ float: 'right' }}>Next</Button></Col>\r\n            </Row>\r\n            <Row>\r\n              <Card style={{ width: '100%', height: '74vh' }}>\r\n                <Tabs onChange={onChangeTab}>\r\n                  {response && response[\"subjects\"].map((e: string, index: any) => (\r\n                    <Tabs.TabPane tab={e} key={e} >\r\n                      <QuestionComponent onSelect={onSelectAnswer} question={response[e][current - 1]} />\r\n                    </Tabs.TabPane>\r\n                  ))}\r\n                </Tabs>\r\n              </Card>\r\n            </Row>\r\n          </Col>\r\n          <Col span={6}>\r\n            <Card style={{ margin: '0 6%' }}>\r\n              {response !== undefined && answers && <TestDetails questions={response[tab]} setCurrentFunction={changeCurrent} current={current} answers={answers} />}\r\n              <Button onClick={markForReview}>Mark For Review</Button>\r\n              <Popconfirm\r\n                title=\"Are you sure you want to submit your test?\"\r\n                onConfirm={onSubmit}\r\n                okText=\"Yes\"\r\n                cancelText=\"No\"\r\n                icon={<QuestionCircleOutlined style={{ color: 'red' }} />}\r\n              >\r\n                <Button style={{ width: '100%' }} type='primary'> Submit Test</Button>\r\n              </Popconfirm>\r\n            </Card>\r\n          </Col>\r\n        </Row> : <TestIntruction readInstruct={readInstruct} />}\r\n    </div>\r\n  );\r\n}","/workspace/frontend/src/views/HomePage/CourseData.js",[],["266","267"],"/workspace/frontend/src/components/Dashboard/Questions/UploadQuestions.tsx",[],["268","269"],"/workspace/frontend/src/components/Analysis/SubjectAnalysis.tsx",[],"/workspace/frontend/src/views/Analysis/TestAnalysis.tsx",[],["270","271"],"/workspace/frontend/src/context/User/UserContext.tsx",[],["272","273"],"/workspace/frontend/src/context/User/UserReducer.tsx",[],"/workspace/frontend/src/components/Dashboard/EForms/EFormsAnalysis.tsx",[],"/workspace/frontend/src/components/Dashboard/Tests/TestTypes.tsx",["274","275"],"/workspace/frontend/src/components/Test/QuestionComponent.tsx",["276","277"],"import { Radio, Row, Col, RadioChangeEvent } from 'antd'\r\nimport React from 'react'\r\n\r\ninterface QuestionInterface {\r\n    question: {\r\n        qid: number,\r\n        statement: string,\r\n        img_path: string,\r\n        type: string,\r\n        archive: string,\r\n        latex: string,\r\n        options: string[],\r\n    } | undefined\r\n    onSelect  : ((e: RadioChangeEvent) => void),\r\n}\r\n\r\nexport const QuestionComponent: React.FC<QuestionInterface> = ({ question ,onSelect}) => {\r\n    var Latex = require('react-latex');\r\n    const radioStyle = {\r\n        borderRadius: '0px',\r\n        width: '100%',\r\n        fontSize: '20px',\r\n        verticalAlign: 'text-bottom'\r\n    };\r\n    const radioContainerStyle = {\r\n        marginTop: \"15px\", fontSize: '20px'\r\n    }\r\n    var temp = `Solve the following equation:  $$\\\\big (3\\\\times 4) \\\\div (5-3)$$`;\r\n    return (\r\n        <div style={{ padding: '1%' }}>\r\n            <Row style={{ fontSize: '30px' }}>\r\n                {question &&\r\n                    <h3>\r\n                        {question.statement}\r\n                    </h3>\r\n                }\r\n                {/* <Latex displayMode={true}>\r\n                    {temp}\r\n                </Latex> */}\r\n\r\n            </Row>\r\n            <Row>\r\n                <Radio.Group style={{ textAlign: 'left', width: '100%' }} onChange={e => onSelect(e)}>\r\n                    {question?.options.map((option, index) => (\r\n                        <Row style={radioContainerStyle}>\r\n                            <Col span={1}>\r\n                                <Radio.Button style={{ padding: \"0 0.7rem\", fontSize: '20px' }} name={option} value={option}>{(index + 10).toString(36).toUpperCase()}</Radio.Button>\r\n                            </Col>\r\n                            <Col span={23} style={radioStyle}>\r\n                                {option}\r\n                        </Col>\r\n                        </Row>\r\n                    ))}\r\n                </Radio.Group>\r\n            </Row>\r\n        </div>\r\n    );\r\n}",["278","279"],"/workspace/frontend/src/components/Errors/Error404.tsx",[],["280","281"],"/workspace/frontend/src/components/HomePage/EnquiryForm.tsx",[],"/workspace/frontend/src/components/Footer.tsx",[],"/workspace/frontend/src/context/User/type.js",[],{"ruleId":"282","severity":1,"message":"283","line":2,"column":29,"nodeType":"284","messageId":"285","endLine":2,"endColumn":37},{"ruleId":"282","severity":1,"message":"286","line":6,"column":8,"nodeType":"284","messageId":"285","endLine":6,"endColumn":13},{"ruleId":"287","severity":1,"message":"288","line":82,"column":15,"nodeType":"289","endLine":82,"endColumn":18},{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","replacedBy":"293"},{"ruleId":"290","replacedBy":"294"},{"ruleId":"292","replacedBy":"295"},{"ruleId":"290","replacedBy":"296"},{"ruleId":"292","replacedBy":"297"},{"ruleId":"290","replacedBy":"298"},{"ruleId":"292","replacedBy":"299"},{"ruleId":"282","severity":1,"message":"300","line":8,"column":9,"nodeType":"284","messageId":"285","endLine":8,"endColumn":14},{"ruleId":"301","severity":1,"message":"302","line":20,"column":6,"nodeType":"303","endLine":20,"endColumn":24,"suggestions":"304"},{"ruleId":"282","severity":1,"message":"305","line":10,"column":3,"nodeType":"284","messageId":"285","endLine":10,"endColumn":22},{"ruleId":"290","replacedBy":"306"},{"ruleId":"292","replacedBy":"307"},{"ruleId":"290","replacedBy":"308"},{"ruleId":"292","replacedBy":"309"},{"ruleId":"290","replacedBy":"310"},{"ruleId":"292","replacedBy":"311"},{"ruleId":"290","replacedBy":"312"},{"ruleId":"292","replacedBy":"313"},{"ruleId":"290","replacedBy":"314"},{"ruleId":"292","replacedBy":"315"},{"ruleId":"290","replacedBy":"316"},{"ruleId":"292","replacedBy":"317"},{"ruleId":"282","severity":1,"message":"318","line":1,"column":34,"nodeType":"284","messageId":"285","endLine":1,"endColumn":46},{"ruleId":"282","severity":1,"message":"319","line":1,"column":65,"nodeType":"284","messageId":"285","endLine":1,"endColumn":72},{"ruleId":"290","replacedBy":"320"},{"ruleId":"292","replacedBy":"321"},{"ruleId":"282","severity":1,"message":"322","line":3,"column":10,"nodeType":"284","messageId":"285","endLine":3,"endColumn":15},{"ruleId":"282","severity":1,"message":"323","line":3,"column":17,"nodeType":"284","messageId":"285","endLine":3,"endColumn":23},{"ruleId":"282","severity":1,"message":"324","line":5,"column":10,"nodeType":"284","messageId":"285","endLine":5,"endColumn":18},{"ruleId":"290","replacedBy":"325"},{"ruleId":"292","replacedBy":"326"},{"ruleId":"290","replacedBy":"327"},{"ruleId":"292","replacedBy":"328"},{"ruleId":"282","severity":1,"message":"329","line":1,"column":31,"nodeType":"284","messageId":"285","endLine":1,"endColumn":38},{"ruleId":"282","severity":1,"message":"330","line":1,"column":23,"nodeType":"284","messageId":"285","endLine":1,"endColumn":29},{"ruleId":"301","severity":1,"message":"331","line":19,"column":6,"nodeType":"303","endLine":19,"endColumn":8,"suggestions":"332"},{"ruleId":"282","severity":1,"message":"333","line":11,"column":11,"nodeType":"284","messageId":"285","endLine":11,"endColumn":28},{"ruleId":"282","severity":1,"message":"334","line":133,"column":17,"nodeType":"284","messageId":"285","endLine":133,"endColumn":20},{"ruleId":"290","replacedBy":"320"},{"ruleId":"292","replacedBy":"321"},{"ruleId":"290","replacedBy":"335"},{"ruleId":"292","replacedBy":"336"},{"ruleId":"290","replacedBy":"337"},{"ruleId":"292","replacedBy":"338"},{"ruleId":"290","replacedBy":"339"},{"ruleId":"292","replacedBy":"340"},{"ruleId":"282","severity":1,"message":"341","line":1,"column":38,"nodeType":"284","messageId":"285","endLine":1,"endColumn":45},{"ruleId":"301","severity":1,"message":"342","line":60,"column":6,"nodeType":"303","endLine":60,"endColumn":8,"suggestions":"343"},{"ruleId":"282","severity":1,"message":"344","line":18,"column":9,"nodeType":"284","messageId":"285","endLine":18,"endColumn":14},{"ruleId":"282","severity":1,"message":"345","line":28,"column":9,"nodeType":"284","messageId":"285","endLine":28,"endColumn":13},{"ruleId":"290","replacedBy":"346"},{"ruleId":"292","replacedBy":"347"},{"ruleId":"290","replacedBy":"348"},{"ruleId":"292","replacedBy":"349"},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["350"],"no-negated-in-lhs",["351"],["350"],["351"],["350"],["351"],["350"],["351"],"'Panel' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTests'. Either include it or remove the dependency array.","ArrayExpression",["352"],"'AccountBookOutlined' is defined but never used.",["350"],["351"],["350"],["351"],["350"],["351"],["350"],["351"],["350"],["351"],["350"],["351"],"'Descriptions' is defined but never used.","'Tooltip' is defined but never used.",["350"],["351"],"'Route' is defined but never used.","'Switch' is defined but never used.","'BlogPage' is defined but never used.",["350"],["351"],["350"],["351"],"'Popover' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'userContext'. Either include it or remove the dependency array.",["353"],"'QuestionInterface' is defined but never used.","'key' is assigned a value but never used.",["350"],["351"],["350"],["351"],["350"],["351"],"'message' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchTestDetails'. Either include it or remove the dependency array.",["354"],"'Latex' is assigned a value but never used.","'temp' is assigned a value but never used.",["350"],["351"],["350"],["351"],"no-global-assign","no-unsafe-negation",{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},"Update the dependencies array to be: [getTests, userContext.user]",{"range":"361","text":"362"},"Update the dependencies array to be: [userContext]",{"range":"363","text":"364"},"Update the dependencies array to be: [fetchTestDetails]",{"range":"365","text":"366"},[577,595],"[getTests, userContext.user]",[598,600],"[userContext]",[1279,1281],"[fetchTestDetails]"]